// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

namespace perception.devices;

// Represents a PCI device.
message PciDevice {
	// A generic name describing the device.
	Name : string = 1;

	// PCI traits that identify the device.
	BaseClass : uint8 = 2;
	SubClass : uint8 = 3;
	ProgIf : uint8 = 4;
	Vendor : uint16 = 5;
	DeviceId : uint16 = 6;
	Bus : uint8 = 7;
	Slot : uint8 = 8;
	Function : uint8 = 9;
}

// A service that manages hardware devices.
service DeviceManager {
	// The mouse has moved. This message is sent when the listener has held the
	// mouse captive.
	minimessage QueryPciDevicesRequest {
		// Finds devices that match the below parameters. A value of -1 for any
		// of the parameters represents a wild card.
		BaseClass : int16 = 1;
		SubClass : int16 = 2;
		ProgIf : int16 = 3;
		Vendor : int32 = 4;
		DeviceId : int32 = 5;
		Bus : int16 = 6;
		Slot : int16 = 7;
		Function : int16 = 8;
	}
	message QueryPciDevicesResponse {
		// Devices that match the query.
		Devices : list<PciDevice> = 1;
	}
	QueryPciDevices : QueryPciDevicesRequest -> QueryPciDevicesResponse = 0;
}