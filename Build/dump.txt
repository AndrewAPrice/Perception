
../fs/boot/kernel.app:     file format elf64-x86-64


Disassembly of section .text:

ffffffff8010c000 <IsValidElfHeader>:
ffffffff8010c000:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010c004:	81 3f 7f 45 4c 46    	cmp    DWORD PTR [rdi],0x464c457f
ffffffff8010c00a:	75 4c                	jne    ffffffff8010c058 <IsValidElfHeader+0x58>
ffffffff8010c00c:	80 7f 04 02          	cmp    BYTE PTR [rdi+0x4],0x2
ffffffff8010c010:	75 2e                	jne    ffffffff8010c040 <IsValidElfHeader+0x40>
ffffffff8010c012:	80 7f 05 01          	cmp    BYTE PTR [rdi+0x5],0x1
ffffffff8010c016:	75 68                	jne    ffffffff8010c080 <IsValidElfHeader+0x80>
ffffffff8010c018:	0f b6 47 06          	movzx  eax,BYTE PTR [rdi+0x6]
ffffffff8010c01c:	3c 01                	cmp    al,0x1
ffffffff8010c01e:	75 78                	jne    ffffffff8010c098 <IsValidElfHeader+0x98>
ffffffff8010c020:	66 83 7f 10 02       	cmp    WORD PTR [rdi+0x10],0x2
ffffffff8010c025:	75 49                	jne    ffffffff8010c070 <IsValidElfHeader+0x70>
ffffffff8010c027:	66 83 7f 12 3e       	cmp    WORD PTR [rdi+0x12],0x3e
ffffffff8010c02c:	74 20                	je     ffffffff8010c04e <IsValidElfHeader+0x4e>
ffffffff8010c02e:	48 c7 c7 73 50 11 80 	mov    rdi,0xffffffff80115073
ffffffff8010c035:	e8 16 51 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c03a:	31 c0                	xor    eax,eax
ffffffff8010c03c:	eb 10                	jmp    ffffffff8010c04e <IsValidElfHeader+0x4e>
ffffffff8010c03e:	66 90                	xchg   ax,ax
ffffffff8010c040:	48 c7 c7 14 50 11 80 	mov    rdi,0xffffffff80115014
ffffffff8010c047:	e8 04 51 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c04c:	31 c0                	xor    eax,eax
ffffffff8010c04e:	48 83 c4 08          	add    rsp,0x8
ffffffff8010c052:	c3                   	ret    
ffffffff8010c053:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010c058:	48 c7 c7 00 50 11 80 	mov    rdi,0xffffffff80115000
ffffffff8010c05f:	e8 ec 50 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c064:	31 c0                	xor    eax,eax
ffffffff8010c066:	48 83 c4 08          	add    rsp,0x8
ffffffff8010c06a:	c3                   	ret    
ffffffff8010c06b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010c070:	48 c7 c7 5b 50 11 80 	mov    rdi,0xffffffff8011505b
ffffffff8010c077:	e8 d4 50 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c07c:	31 c0                	xor    eax,eax
ffffffff8010c07e:	eb ce                	jmp    ffffffff8010c04e <IsValidElfHeader+0x4e>
ffffffff8010c080:	48 c7 c7 2d 50 11 80 	mov    rdi,0xffffffff8011502d
ffffffff8010c087:	e8 c4 50 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c08c:	31 c0                	xor    eax,eax
ffffffff8010c08e:	48 83 c4 08          	add    rsp,0x8
ffffffff8010c092:	c3                   	ret    
ffffffff8010c093:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010c098:	48 c7 c7 40 50 11 80 	mov    rdi,0xffffffff80115040
ffffffff8010c09f:	e8 ac 50 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c0a4:	31 c0                	xor    eax,eax
ffffffff8010c0a6:	eb a6                	jmp    ffffffff8010c04e <IsValidElfHeader+0x4e>
ffffffff8010c0a8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010c0b0 <CopyIntoMemory>:
ffffffff8010c0b0:	41 57                	push   r15
ffffffff8010c0b2:	49 89 f7             	mov    r15,rsi
ffffffff8010c0b5:	41 56                	push   r14
ffffffff8010c0b7:	49 81 e7 00 f0 ff ff 	and    r15,0xfffffffffffff000
ffffffff8010c0be:	41 55                	push   r13
ffffffff8010c0c0:	4c 8d aa ff 0f 00 00 	lea    r13,[rdx+0xfff]
ffffffff8010c0c7:	41 54                	push   r12
ffffffff8010c0c9:	49 81 e5 00 f0 ff ff 	and    r13,0xfffffffffffff000
ffffffff8010c0d0:	49 89 f4             	mov    r12,rsi
ffffffff8010c0d3:	55                   	push   rbp
ffffffff8010c0d4:	48 89 d5             	mov    rbp,rdx
ffffffff8010c0d7:	53                   	push   rbx
ffffffff8010c0d8:	48 89 fb             	mov    rbx,rdi
ffffffff8010c0db:	48 83 ec 18          	sub    rsp,0x18
ffffffff8010c0df:	4c 8b 71 68          	mov    r14,QWORD PTR [rcx+0x68]
ffffffff8010c0e3:	4c 89 6c 24 08       	mov    QWORD PTR [rsp+0x8],r13
ffffffff8010c0e8:	4d 39 ef             	cmp    r15,r13
ffffffff8010c0eb:	72 27                	jb     ffffffff8010c114 <CopyIntoMemory+0x64>
ffffffff8010c0ed:	eb 71                	jmp    ffffffff8010c160 <CopyIntoMemory+0xb0>
ffffffff8010c0ef:	90                   	nop
ffffffff8010c0f0:	48 89 e8             	mov    rax,rbp
ffffffff8010c0f3:	4c 29 f8             	sub    rax,r15
ffffffff8010c0f6:	49 89 c7             	mov    r15,rax
ffffffff8010c0f9:	49 29 d7             	sub    r15,rdx
ffffffff8010c0fc:	48 89 de             	mov    rsi,rbx
ffffffff8010c0ff:	4c 89 fa             	mov    rdx,r15
ffffffff8010c102:	4c 01 fb             	add    rbx,r15
ffffffff8010c105:	e8 f6 14 00 00       	call   ffffffff8010d600 <memcpy>
ffffffff8010c10a:	4c 3b 6c 24 08       	cmp    r13,QWORD PTR [rsp+0x8]
ffffffff8010c10f:	73 4f                	jae    ffffffff8010c160 <CopyIntoMemory+0xb0>
ffffffff8010c111:	4d 89 ef             	mov    r15,r13
ffffffff8010c114:	4c 89 f7             	mov    rdi,r14
ffffffff8010c117:	4c 89 fe             	mov    rsi,r15
ffffffff8010c11a:	e8 a1 68 00 00       	call   ffffffff801129c0 <GetOrCreateVirtualPage>
ffffffff8010c11f:	48 89 c7             	mov    rdi,rax
ffffffff8010c122:	48 83 f8 01          	cmp    rax,0x1
ffffffff8010c126:	74 50                	je     ffffffff8010c178 <CopyIntoMemory+0xc8>
ffffffff8010c128:	be 05 00 00 00       	mov    esi,0x5
ffffffff8010c12d:	e8 4e 62 00 00       	call   ffffffff80112380 <TemporarilyMapPhysicalMemory>
ffffffff8010c132:	31 d2                	xor    edx,edx
ffffffff8010c134:	48 89 c7             	mov    rdi,rax
ffffffff8010c137:	4d 39 fc             	cmp    r12,r15
ffffffff8010c13a:	76 09                	jbe    ffffffff8010c145 <CopyIntoMemory+0x95>
ffffffff8010c13c:	4c 89 e2             	mov    rdx,r12
ffffffff8010c13f:	4c 29 fa             	sub    rdx,r15
ffffffff8010c142:	48 01 d7             	add    rdi,rdx
ffffffff8010c145:	4d 8d af 00 10 00 00 	lea    r13,[r15+0x1000]
ffffffff8010c14c:	49 39 ed             	cmp    r13,rbp
ffffffff8010c14f:	77 9f                	ja     ffffffff8010c0f0 <CopyIntoMemory+0x40>
ffffffff8010c151:	41 bf 00 10 00 00    	mov    r15d,0x1000
ffffffff8010c157:	eb a0                	jmp    ffffffff8010c0f9 <CopyIntoMemory+0x49>
ffffffff8010c159:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010c160:	48 83 c4 18          	add    rsp,0x18
ffffffff8010c164:	b8 01 00 00 00       	mov    eax,0x1
ffffffff8010c169:	5b                   	pop    rbx
ffffffff8010c16a:	5d                   	pop    rbp
ffffffff8010c16b:	41 5c                	pop    r12
ffffffff8010c16d:	41 5d                	pop    r13
ffffffff8010c16f:	41 5e                	pop    r14
ffffffff8010c171:	41 5f                	pop    r15
ffffffff8010c173:	c3                   	ret    
ffffffff8010c174:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010c178:	48 83 c4 18          	add    rsp,0x18
ffffffff8010c17c:	31 c0                	xor    eax,eax
ffffffff8010c17e:	5b                   	pop    rbx
ffffffff8010c17f:	5d                   	pop    rbp
ffffffff8010c180:	41 5c                	pop    r12
ffffffff8010c182:	41 5d                	pop    r13
ffffffff8010c184:	41 5e                	pop    r14
ffffffff8010c186:	41 5f                	pop    r15
ffffffff8010c188:	c3                   	ret    
ffffffff8010c189:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

ffffffff8010c190 <LoadMemory>:
ffffffff8010c190:	41 54                	push   r12
ffffffff8010c192:	48 81 e7 00 f0 ff ff 	and    rdi,0xfffffffffffff000
ffffffff8010c199:	55                   	push   rbp
ffffffff8010c19a:	48 8d ae ff 0f 00 00 	lea    rbp,[rsi+0xfff]
ffffffff8010c1a1:	48 81 e5 00 f0 ff ff 	and    rbp,0xfffffffffffff000
ffffffff8010c1a8:	53                   	push   rbx
ffffffff8010c1a9:	4c 8b 62 68          	mov    r12,QWORD PTR [rdx+0x68]
ffffffff8010c1ad:	48 39 ef             	cmp    rdi,rbp
ffffffff8010c1b0:	73 36                	jae    ffffffff8010c1e8 <LoadMemory+0x58>
ffffffff8010c1b2:	48 89 fb             	mov    rbx,rdi
ffffffff8010c1b5:	eb 15                	jmp    ffffffff8010c1cc <LoadMemory+0x3c>
ffffffff8010c1b7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010c1c0:	48 81 c3 00 10 00 00 	add    rbx,0x1000
ffffffff8010c1c7:	48 39 dd             	cmp    rbp,rbx
ffffffff8010c1ca:	76 1c                	jbe    ffffffff8010c1e8 <LoadMemory+0x58>
ffffffff8010c1cc:	48 89 de             	mov    rsi,rbx
ffffffff8010c1cf:	4c 89 e7             	mov    rdi,r12
ffffffff8010c1d2:	e8 e9 67 00 00       	call   ffffffff801129c0 <GetOrCreateVirtualPage>
ffffffff8010c1d7:	48 83 f8 01          	cmp    rax,0x1
ffffffff8010c1db:	75 e3                	jne    ffffffff8010c1c0 <LoadMemory+0x30>
ffffffff8010c1dd:	5b                   	pop    rbx
ffffffff8010c1de:	31 c0                	xor    eax,eax
ffffffff8010c1e0:	5d                   	pop    rbp
ffffffff8010c1e1:	41 5c                	pop    r12
ffffffff8010c1e3:	c3                   	ret    
ffffffff8010c1e4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010c1e8:	5b                   	pop    rbx
ffffffff8010c1e9:	b8 01 00 00 00       	mov    eax,0x1
ffffffff8010c1ee:	5d                   	pop    rbp
ffffffff8010c1ef:	41 5c                	pop    r12
ffffffff8010c1f1:	c3                   	ret    
ffffffff8010c1f2:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010c1fd:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010c200 <LoadSegments>:
ffffffff8010c200:	41 57                	push   r15
ffffffff8010c202:	41 56                	push   r14
ffffffff8010c204:	41 55                	push   r13
ffffffff8010c206:	41 54                	push   r12
ffffffff8010c208:	55                   	push   rbp
ffffffff8010c209:	53                   	push   rbx
ffffffff8010c20a:	48 83 ec 38          	sub    rsp,0x38
ffffffff8010c20e:	0f b7 47 38          	movzx  eax,WORD PTR [rdi+0x38]
ffffffff8010c212:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
ffffffff8010c217:	48 03 77 20          	add    rsi,QWORD PTR [rdi+0x20]
ffffffff8010c21b:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
ffffffff8010c220:	49 89 f4             	mov    r12,rsi
ffffffff8010c223:	48 89 f3             	mov    rbx,rsi
ffffffff8010c226:	48 89 4c 24 20       	mov    QWORD PTR [rsp+0x20],rcx
ffffffff8010c22b:	66 83 f8 ff          	cmp    ax,0xffff
ffffffff8010c22f:	0f 84 13 02 00 00    	je     ffffffff8010c448 <LoadSegments+0x248>
ffffffff8010c235:	48 85 c0             	test   rax,rax
ffffffff8010c238:	0f 84 f2 01 00 00    	je     ffffffff8010c430 <LoadSegments+0x230>
ffffffff8010c23e:	49 8d 54 24 38       	lea    rdx,[r12+0x38]
ffffffff8010c243:	48 39 54 24 08       	cmp    QWORD PTR [rsp+0x8],rdx
ffffffff8010c248:	0f 82 4d 01 00 00    	jb     ffffffff8010c39b <LoadSegments+0x19b>
ffffffff8010c24e:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
ffffffff8010c256:	48 29 c2             	sub    rdx,rax
ffffffff8010c259:	49 8d 04 d4          	lea    rax,[r12+rdx*8]
ffffffff8010c25d:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
ffffffff8010c262:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010c268:	8b 03                	mov    eax,DWORD PTR [rbx]
ffffffff8010c26a:	83 f8 07             	cmp    eax,0x7
ffffffff8010c26d:	0f 84 a5 01 00 00    	je     ffffffff8010c418 <LoadSegments+0x218>
ffffffff8010c273:	83 f8 01             	cmp    eax,0x1
ffffffff8010c276:	0f 85 01 01 00 00    	jne    ffffffff8010c37d <LoadSegments+0x17d>
ffffffff8010c27c:	4c 8b 63 10          	mov    r12,QWORD PTR [rbx+0x10]
ffffffff8010c280:	48 8b 4b 28          	mov    rcx,QWORD PTR [rbx+0x28]
ffffffff8010c284:	49 8d 04 0c          	lea    rax,[r12+rcx*1]
ffffffff8010c288:	48 3d 00 00 00 80    	cmp    rax,0xffffffff80000000
ffffffff8010c28e:	0f 87 df 01 00 00    	ja     ffffffff8010c473 <LoadSegments+0x273>
ffffffff8010c294:	48 8b 43 20          	mov    rax,QWORD PTR [rbx+0x20]
ffffffff8010c298:	48 85 c0             	test   rax,rax
ffffffff8010c29b:	0f 84 d7 00 00 00    	je     ffffffff8010c378 <LoadSegments+0x178>
ffffffff8010c2a1:	48 8b 6c 24 28       	mov    rbp,QWORD PTR [rsp+0x28]
ffffffff8010c2a6:	48 03 6b 08          	add    rbp,QWORD PTR [rbx+0x8]
ffffffff8010c2aa:	48 8d 14 28          	lea    rdx,[rax+rbp*1]
ffffffff8010c2ae:	48 3b 54 24 08       	cmp    rdx,QWORD PTR [rsp+0x8]
ffffffff8010c2b3:	0f 87 d7 01 00 00    	ja     ffffffff8010c490 <LoadSegments+0x290>
ffffffff8010c2b9:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
ffffffff8010c2be:	4d 8d 34 04          	lea    r14,[r12+rax*1]
ffffffff8010c2c2:	4d 89 e7             	mov    r15,r12
ffffffff8010c2c5:	4d 8d ae ff 0f 00 00 	lea    r13,[r14+0xfff]
ffffffff8010c2cc:	49 81 e7 00 f0 ff ff 	and    r15,0xfffffffffffff000
ffffffff8010c2d3:	48 8b 76 68          	mov    rsi,QWORD PTR [rsi+0x68]
ffffffff8010c2d7:	49 81 e5 00 f0 ff ff 	and    r13,0xfffffffffffff000
ffffffff8010c2de:	4c 89 2c 24          	mov    QWORD PTR [rsp],r13
ffffffff8010c2e2:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
ffffffff8010c2e7:	4d 39 ef             	cmp    r15,r13
ffffffff8010c2ea:	72 5a                	jb     ffffffff8010c346 <LoadSegments+0x146>
ffffffff8010c2ec:	e9 87 00 00 00       	jmp    ffffffff8010c378 <LoadSegments+0x178>
ffffffff8010c2f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010c2f8:	be 05 00 00 00       	mov    esi,0x5
ffffffff8010c2fd:	e8 7e 60 00 00       	call   ffffffff80112380 <TemporarilyMapPhysicalMemory>
ffffffff8010c302:	31 c9                	xor    ecx,ecx
ffffffff8010c304:	48 89 c7             	mov    rdi,rax
ffffffff8010c307:	4d 39 fc             	cmp    r12,r15
ffffffff8010c30a:	76 09                	jbe    ffffffff8010c315 <LoadSegments+0x115>
ffffffff8010c30c:	4c 89 e1             	mov    rcx,r12
ffffffff8010c30f:	4c 29 f9             	sub    rcx,r15
ffffffff8010c312:	48 01 cf             	add    rdi,rcx
ffffffff8010c315:	4d 8d af 00 10 00 00 	lea    r13,[r15+0x1000]
ffffffff8010c31c:	ba 00 10 00 00       	mov    edx,0x1000
ffffffff8010c321:	4d 39 ee             	cmp    r14,r13
ffffffff8010c324:	73 06                	jae    ffffffff8010c32c <LoadSegments+0x12c>
ffffffff8010c326:	4c 89 f2             	mov    rdx,r14
ffffffff8010c329:	4c 29 fa             	sub    rdx,r15
ffffffff8010c32c:	48 29 ca             	sub    rdx,rcx
ffffffff8010c32f:	48 89 ee             	mov    rsi,rbp
ffffffff8010c332:	49 89 d7             	mov    r15,rdx
ffffffff8010c335:	e8 c6 12 00 00       	call   ffffffff8010d600 <memcpy>
ffffffff8010c33a:	4c 01 fd             	add    rbp,r15
ffffffff8010c33d:	4c 39 2c 24          	cmp    QWORD PTR [rsp],r13
ffffffff8010c341:	76 2d                	jbe    ffffffff8010c370 <LoadSegments+0x170>
ffffffff8010c343:	4d 89 ef             	mov    r15,r13
ffffffff8010c346:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
ffffffff8010c34b:	4c 89 fe             	mov    rsi,r15
ffffffff8010c34e:	e8 6d 66 00 00       	call   ffffffff801129c0 <GetOrCreateVirtualPage>
ffffffff8010c353:	48 89 c7             	mov    rdi,rax
ffffffff8010c356:	48 83 f8 01          	cmp    rax,0x1
ffffffff8010c35a:	75 9c                	jne    ffffffff8010c2f8 <LoadSegments+0xf8>
ffffffff8010c35c:	31 c0                	xor    eax,eax
ffffffff8010c35e:	48 83 c4 38          	add    rsp,0x38
ffffffff8010c362:	5b                   	pop    rbx
ffffffff8010c363:	5d                   	pop    rbp
ffffffff8010c364:	41 5c                	pop    r12
ffffffff8010c366:	41 5d                	pop    r13
ffffffff8010c368:	41 5e                	pop    r14
ffffffff8010c36a:	41 5f                	pop    r15
ffffffff8010c36c:	c3                   	ret    
ffffffff8010c36d:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010c370:	48 8b 4b 28          	mov    rcx,QWORD PTR [rbx+0x28]
ffffffff8010c374:	48 8b 43 20          	mov    rax,QWORD PTR [rbx+0x20]
ffffffff8010c378:	48 39 c1             	cmp    rcx,rax
ffffffff8010c37b:	77 43                	ja     ffffffff8010c3c0 <LoadSegments+0x1c0>
ffffffff8010c37d:	48 83 c3 38          	add    rbx,0x38
ffffffff8010c381:	48 3b 5c 24 18       	cmp    rbx,QWORD PTR [rsp+0x18]
ffffffff8010c386:	0f 84 a4 00 00 00    	je     ffffffff8010c430 <LoadSegments+0x230>
ffffffff8010c38c:	48 8d 43 38          	lea    rax,[rbx+0x38]
ffffffff8010c390:	48 39 44 24 08       	cmp    QWORD PTR [rsp+0x8],rax
ffffffff8010c395:	0f 83 cd fe ff ff    	jae    ffffffff8010c268 <LoadSegments+0x68>
ffffffff8010c39b:	48 c7 c7 58 51 11 80 	mov    rdi,0xffffffff80115158
ffffffff8010c3a2:	e8 a9 4d 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c3a7:	48 83 c4 38          	add    rsp,0x38
ffffffff8010c3ab:	31 c0                	xor    eax,eax
ffffffff8010c3ad:	5b                   	pop    rbx
ffffffff8010c3ae:	5d                   	pop    rbp
ffffffff8010c3af:	41 5c                	pop    r12
ffffffff8010c3b1:	41 5d                	pop    r13
ffffffff8010c3b3:	41 5e                	pop    r14
ffffffff8010c3b5:	41 5f                	pop    r15
ffffffff8010c3b7:	c3                   	ret    
ffffffff8010c3b8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010c3c0:	48 8b 53 10          	mov    rdx,QWORD PTR [rbx+0x10]
ffffffff8010c3c4:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
ffffffff8010c3c9:	4c 8d 2c 02          	lea    r13,[rdx+rax*1]
ffffffff8010c3cd:	48 8d ac 11 ff 0f 00 00 	lea    rbp,[rcx+rdx*1+0xfff]
ffffffff8010c3d5:	4c 8b 66 68          	mov    r12,QWORD PTR [rsi+0x68]
ffffffff8010c3d9:	49 81 e5 00 f0 ff ff 	and    r13,0xfffffffffffff000
ffffffff8010c3e0:	48 81 e5 00 f0 ff ff 	and    rbp,0xfffffffffffff000
ffffffff8010c3e7:	49 39 ed             	cmp    r13,rbp
ffffffff8010c3ea:	72 10                	jb     ffffffff8010c3fc <LoadSegments+0x1fc>
ffffffff8010c3ec:	eb 8f                	jmp    ffffffff8010c37d <LoadSegments+0x17d>
ffffffff8010c3ee:	66 90                	xchg   ax,ax
ffffffff8010c3f0:	49 81 c5 00 10 00 00 	add    r13,0x1000
ffffffff8010c3f7:	4c 39 ed             	cmp    rbp,r13
ffffffff8010c3fa:	76 81                	jbe    ffffffff8010c37d <LoadSegments+0x17d>
ffffffff8010c3fc:	4c 89 ee             	mov    rsi,r13
ffffffff8010c3ff:	4c 89 e7             	mov    rdi,r12
ffffffff8010c402:	e8 b9 65 00 00       	call   ffffffff801129c0 <GetOrCreateVirtualPage>
ffffffff8010c407:	48 83 f8 01          	cmp    rax,0x1
ffffffff8010c40b:	75 e3                	jne    ffffffff8010c3f0 <LoadSegments+0x1f0>
ffffffff8010c40d:	e9 4a ff ff ff       	jmp    ffffffff8010c35c <LoadSegments+0x15c>
ffffffff8010c412:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010c418:	48 c7 c7 80 51 11 80 	mov    rdi,0xffffffff80115180
ffffffff8010c41f:	e8 2c 4d 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c424:	8b 03                	mov    eax,DWORD PTR [rbx]
ffffffff8010c426:	e9 48 fe ff ff       	jmp    ffffffff8010c273 <LoadSegments+0x73>
ffffffff8010c42b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010c430:	48 83 c4 38          	add    rsp,0x38
ffffffff8010c434:	b8 01 00 00 00       	mov    eax,0x1
ffffffff8010c439:	5b                   	pop    rbx
ffffffff8010c43a:	5d                   	pop    rbp
ffffffff8010c43b:	41 5c                	pop    r12
ffffffff8010c43d:	41 5d                	pop    r13
ffffffff8010c43f:	41 5e                	pop    r14
ffffffff8010c441:	41 5f                	pop    r15
ffffffff8010c443:	c3                   	ret    
ffffffff8010c444:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010c448:	48 89 fd             	mov    rbp,rdi
ffffffff8010c44b:	48 c7 c7 00 51 11 80 	mov    rdi,0xffffffff80115100
ffffffff8010c452:	e8 f9 4c 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c457:	0f b7 45 3c          	movzx  eax,WORD PTR [rbp+0x3c]
ffffffff8010c45b:	48 03 44 24 28       	add    rax,QWORD PTR [rsp+0x28]
ffffffff8010c460:	48 8d 50 40          	lea    rdx,[rax+0x40]
ffffffff8010c464:	48 3b 54 24 08       	cmp    rdx,QWORD PTR [rsp+0x8]
ffffffff8010c469:	77 38                	ja     ffffffff8010c4a3 <LoadSegments+0x2a3>
ffffffff8010c46b:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
ffffffff8010c46e:	e9 c2 fd ff ff       	jmp    ffffffff8010c235 <LoadSegments+0x35>
ffffffff8010c473:	48 c7 c7 a8 51 11 80 	mov    rdi,0xffffffff801151a8
ffffffff8010c47a:	e8 d1 4c 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c47f:	48 83 c4 38          	add    rsp,0x38
ffffffff8010c483:	31 c0                	xor    eax,eax
ffffffff8010c485:	5b                   	pop    rbx
ffffffff8010c486:	5d                   	pop    rbp
ffffffff8010c487:	41 5c                	pop    r12
ffffffff8010c489:	41 5d                	pop    r13
ffffffff8010c48b:	41 5e                	pop    r14
ffffffff8010c48d:	41 5f                	pop    r15
ffffffff8010c48f:	c3                   	ret    
ffffffff8010c490:	48 c7 c7 d8 51 11 80 	mov    rdi,0xffffffff801151d8
ffffffff8010c497:	e8 b4 4c 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c49c:	31 c0                	xor    eax,eax
ffffffff8010c49e:	e9 bb fe ff ff       	jmp    ffffffff8010c35e <LoadSegments+0x15e>
ffffffff8010c4a3:	48 c7 c7 30 51 11 80 	mov    rdi,0xffffffff80115130
ffffffff8010c4aa:	e8 a1 4c 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c4af:	31 c0                	xor    eax,eax
ffffffff8010c4b1:	e9 a8 fe ff ff       	jmp    ffffffff8010c35e <LoadSegments+0x15e>
ffffffff8010c4b6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]

ffffffff8010c4c0 <LoadElfProcess>:
ffffffff8010c4c0:	41 56                	push   r14
ffffffff8010c4c2:	41 55                	push   r13
ffffffff8010c4c4:	49 89 f5             	mov    r13,rsi
ffffffff8010c4c7:	41 54                	push   r12
ffffffff8010c4c9:	49 89 fc             	mov    r12,rdi
ffffffff8010c4cc:	48 89 d7             	mov    rdi,rdx
ffffffff8010c4cf:	55                   	push   rbp
ffffffff8010c4d0:	48 89 d5             	mov    rbp,rdx
ffffffff8010c4d3:	53                   	push   rbx
ffffffff8010c4d4:	e8 97 17 00 00       	call   ffffffff8010dc70 <strlen>
ffffffff8010c4d9:	48 83 f8 03          	cmp    rax,0x3
ffffffff8010c4dd:	76 06                	jbe    ffffffff8010c4e5 <LoadElfProcess+0x25>
ffffffff8010c4df:	80 7d 01 20          	cmp    BYTE PTR [rbp+0x1],0x20
ffffffff8010c4e3:	74 2b                	je     ffffffff8010c510 <LoadElfProcess+0x50>
ffffffff8010c4e5:	48 c7 c7 89 50 11 80 	mov    rdi,0xffffffff80115089
ffffffff8010c4ec:	e8 5f 4c 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c4f1:	48 89 ef             	mov    rdi,rbp
ffffffff8010c4f4:	e8 57 4c 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c4f9:	48 c7 c7 20 52 11 80 	mov    rdi,0xffffffff80115220
ffffffff8010c500:	5b                   	pop    rbx
ffffffff8010c501:	5d                   	pop    rbp
ffffffff8010c502:	41 5c                	pop    r12
ffffffff8010c504:	41 5d                	pop    r13
ffffffff8010c506:	41 5e                	pop    r14
ffffffff8010c508:	e9 43 4c 00 00       	jmp    ffffffff80111150 <PrintString>
ffffffff8010c50d:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010c510:	44 0f b6 75 00       	movzx  r14d,BYTE PTR [rbp+0x0]
ffffffff8010c515:	48 89 c3             	mov    rbx,rax
ffffffff8010c518:	48 83 c5 02          	add    rbp,0x2
ffffffff8010c51c:	41 80 fe 61          	cmp    r14b,0x61
ffffffff8010c520:	0f 84 5a 01 00 00    	je     ffffffff8010c680 <LoadElfProcess+0x1c0>
ffffffff8010c526:	41 80 fe 64          	cmp    r14b,0x64
ffffffff8010c52a:	0f 85 10 01 00 00    	jne    ffffffff8010c640 <LoadElfProcess+0x180>
ffffffff8010c530:	48 c7 c7 9d 50 11 80 	mov    rdi,0xffffffff8011509d
ffffffff8010c537:	41 be 01 00 00 00    	mov    r14d,0x1
ffffffff8010c53d:	e8 0e 4c 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c542:	48 89 ef             	mov    rdi,rbp
ffffffff8010c545:	e8 06 4c 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c54a:	48 c7 c7 e3 50 11 80 	mov    rdi,0xffffffff801150e3
ffffffff8010c551:	e8 fa 4b 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c556:	49 8d 44 24 40       	lea    rax,[r12+0x40]
ffffffff8010c55b:	4c 39 e8             	cmp    rax,r13
ffffffff8010c55e:	0f 87 34 01 00 00    	ja     ffffffff8010c698 <LoadElfProcess+0x1d8>
ffffffff8010c564:	41 81 3c 24 7f 45 4c 46 	cmp    DWORD PTR [r12],0x464c457f
ffffffff8010c56c:	48 c7 c7 00 50 11 80 	mov    rdi,0xffffffff80115000
ffffffff8010c573:	75 8b                	jne    ffffffff8010c500 <LoadElfProcess+0x40>
ffffffff8010c575:	41 80 7c 24 04 02    	cmp    BYTE PTR [r12+0x4],0x2
ffffffff8010c57b:	48 c7 c7 14 50 11 80 	mov    rdi,0xffffffff80115014
ffffffff8010c582:	0f 85 78 ff ff ff    	jne    ffffffff8010c500 <LoadElfProcess+0x40>
ffffffff8010c588:	41 80 7c 24 05 01    	cmp    BYTE PTR [r12+0x5],0x1
ffffffff8010c58e:	48 c7 c7 2d 50 11 80 	mov    rdi,0xffffffff8011502d
ffffffff8010c595:	0f 85 65 ff ff ff    	jne    ffffffff8010c500 <LoadElfProcess+0x40>
ffffffff8010c59b:	41 80 7c 24 06 01    	cmp    BYTE PTR [r12+0x6],0x1
ffffffff8010c5a1:	48 c7 c7 40 50 11 80 	mov    rdi,0xffffffff80115040
ffffffff8010c5a8:	0f 85 52 ff ff ff    	jne    ffffffff8010c500 <LoadElfProcess+0x40>
ffffffff8010c5ae:	66 41 83 7c 24 10 02 	cmp    WORD PTR [r12+0x10],0x2
ffffffff8010c5b5:	48 c7 c7 5b 50 11 80 	mov    rdi,0xffffffff8011505b
ffffffff8010c5bc:	0f 85 3e ff ff ff    	jne    ffffffff8010c500 <LoadElfProcess+0x40>
ffffffff8010c5c2:	66 41 83 7c 24 12 3e 	cmp    WORD PTR [r12+0x12],0x3e
ffffffff8010c5c9:	0f 85 fd 00 00 00    	jne    ffffffff8010c6cc <LoadElfProcess+0x20c>
ffffffff8010c5cf:	44 89 f7             	mov    edi,r14d
ffffffff8010c5d2:	e8 e9 2f 00 00       	call   ffffffff8010f5c0 <CreateProcess>
ffffffff8010c5d7:	49 89 c6             	mov    r14,rax
ffffffff8010c5da:	48 85 c0             	test   rax,rax
ffffffff8010c5dd:	0f 84 dd 00 00 00    	je     ffffffff8010c6c0 <LoadElfProcess+0x200>
ffffffff8010c5e3:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffffffff8010c5e7:	48 8d 53 fe          	lea    rdx,[rbx-0x2]
ffffffff8010c5eb:	be 58 00 00 00       	mov    esi,0x58
ffffffff8010c5f0:	48 89 ef             	mov    rdi,rbp
ffffffff8010c5f3:	e8 98 13 00 00       	call   ffffffff8010d990 <CopyString>
ffffffff8010c5f8:	4c 89 e7             	mov    rdi,r12
ffffffff8010c5fb:	4c 89 f1             	mov    rcx,r14
ffffffff8010c5fe:	4c 89 ea             	mov    rdx,r13
ffffffff8010c601:	4c 89 e6             	mov    rsi,r12
ffffffff8010c604:	e8 f7 fb ff ff       	call   ffffffff8010c200 <LoadSegments>
ffffffff8010c609:	48 c7 c7 e8 50 11 80 	mov    rdi,0xffffffff801150e8
ffffffff8010c610:	84 c0                	test   al,al
ffffffff8010c612:	0f 84 93 00 00 00    	je     ffffffff8010c6ab <LoadElfProcess+0x1eb>
ffffffff8010c618:	49 8b 74 24 18       	mov    rsi,QWORD PTR [r12+0x18]
ffffffff8010c61d:	4c 89 f7             	mov    rdi,r14
ffffffff8010c620:	31 d2                	xor    edx,edx
ffffffff8010c622:	e8 79 4e 00 00       	call   ffffffff801114a0 <CreateThread>
ffffffff8010c627:	48 89 c7             	mov    rdi,rax
ffffffff8010c62a:	48 85 c0             	test   rax,rax
ffffffff8010c62d:	74 75                	je     ffffffff8010c6a4 <LoadElfProcess+0x1e4>
ffffffff8010c62f:	5b                   	pop    rbx
ffffffff8010c630:	5d                   	pop    rbp
ffffffff8010c631:	41 5c                	pop    r12
ffffffff8010c633:	41 5d                	pop    r13
ffffffff8010c635:	41 5e                	pop    r14
ffffffff8010c637:	e9 44 38 00 00       	jmp    ffffffff8010fe80 <ScheduleThread>
ffffffff8010c63c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010c640:	48 c7 c7 c2 50 11 80 	mov    rdi,0xffffffff801150c2
ffffffff8010c647:	e8 04 4b 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c64c:	48 89 ef             	mov    rdi,rbp
ffffffff8010c64f:	e8 fc 4a 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c654:	48 c7 c7 cb 50 11 80 	mov    rdi,0xffffffff801150cb
ffffffff8010c65b:	e8 f0 4a 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c660:	41 0f be fe          	movsx  edi,r14b
ffffffff8010c664:	e8 47 4a 00 00       	call   ffffffff801110b0 <PrintChar>
ffffffff8010c669:	5b                   	pop    rbx
ffffffff8010c66a:	bf 0a 00 00 00       	mov    edi,0xa
ffffffff8010c66f:	5d                   	pop    rbp
ffffffff8010c670:	41 5c                	pop    r12
ffffffff8010c672:	41 5d                	pop    r13
ffffffff8010c674:	41 5e                	pop    r14
ffffffff8010c676:	e9 35 4a 00 00       	jmp    ffffffff801110b0 <PrintChar>
ffffffff8010c67b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010c680:	48 c7 c7 ad 50 11 80 	mov    rdi,0xffffffff801150ad
ffffffff8010c687:	45 31 f6             	xor    r14d,r14d
ffffffff8010c68a:	e8 c1 4a 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c68f:	e9 ae fe ff ff       	jmp    ffffffff8010c542 <LoadElfProcess+0x82>
ffffffff8010c694:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010c698:	48 c7 c7 58 52 11 80 	mov    rdi,0xffffffff80115258
ffffffff8010c69f:	e9 5c fe ff ff       	jmp    ffffffff8010c500 <LoadElfProcess+0x40>
ffffffff8010c6a4:	48 c7 c7 a0 52 11 80 	mov    rdi,0xffffffff801152a0
ffffffff8010c6ab:	e8 a0 4a 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010c6b0:	5b                   	pop    rbx
ffffffff8010c6b1:	4c 89 f7             	mov    rdi,r14
ffffffff8010c6b4:	5d                   	pop    rbp
ffffffff8010c6b5:	41 5c                	pop    r12
ffffffff8010c6b7:	41 5d                	pop    r13
ffffffff8010c6b9:	41 5e                	pop    r14
ffffffff8010c6bb:	e9 e0 30 00 00       	jmp    ffffffff8010f7a0 <DestroyProcess>
ffffffff8010c6c0:	48 c7 c7 78 52 11 80 	mov    rdi,0xffffffff80115278
ffffffff8010c6c7:	e9 34 fe ff ff       	jmp    ffffffff8010c500 <LoadElfProcess+0x40>
ffffffff8010c6cc:	48 c7 c7 73 50 11 80 	mov    rdi,0xffffffff80115073
ffffffff8010c6d3:	e9 28 fe ff ff       	jmp    ffffffff8010c500 <LoadElfProcess+0x40>
ffffffff8010c6d8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010c6e0 <isr0>:
ffffffff8010c6e0:	fa                   	cli    
ffffffff8010c6e1:	6a 00                	push   0x0
ffffffff8010c6e3:	6a 00                	push   0x0
ffffffff8010c6e5:	e9 f1 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c6ea <isr1>:
ffffffff8010c6ea:	fa                   	cli    
ffffffff8010c6eb:	6a 00                	push   0x0
ffffffff8010c6ed:	6a 01                	push   0x1
ffffffff8010c6ef:	e9 e7 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c6f4 <isr2>:
ffffffff8010c6f4:	fa                   	cli    
ffffffff8010c6f5:	6a 00                	push   0x0
ffffffff8010c6f7:	6a 02                	push   0x2
ffffffff8010c6f9:	e9 dd 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c6fe <isr3>:
ffffffff8010c6fe:	fa                   	cli    
ffffffff8010c6ff:	6a 00                	push   0x0
ffffffff8010c701:	6a 03                	push   0x3
ffffffff8010c703:	e9 d3 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c708 <isr4>:
ffffffff8010c708:	fa                   	cli    
ffffffff8010c709:	6a 00                	push   0x0
ffffffff8010c70b:	6a 04                	push   0x4
ffffffff8010c70d:	e9 c9 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c712 <isr5>:
ffffffff8010c712:	fa                   	cli    
ffffffff8010c713:	6a 00                	push   0x0
ffffffff8010c715:	6a 05                	push   0x5
ffffffff8010c717:	e9 bf 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c71c <isr6>:
ffffffff8010c71c:	fa                   	cli    
ffffffff8010c71d:	6a 00                	push   0x0
ffffffff8010c71f:	6a 06                	push   0x6
ffffffff8010c721:	e9 b5 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c726 <isr7>:
ffffffff8010c726:	fa                   	cli    
ffffffff8010c727:	6a 00                	push   0x0
ffffffff8010c729:	6a 07                	push   0x7
ffffffff8010c72b:	e9 ab 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c730 <isr8>:
ffffffff8010c730:	fa                   	cli    
ffffffff8010c731:	6a 08                	push   0x8
ffffffff8010c733:	e9 a3 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c738 <isr9>:
ffffffff8010c738:	fa                   	cli    
ffffffff8010c739:	6a 00                	push   0x0
ffffffff8010c73b:	6a 09                	push   0x9
ffffffff8010c73d:	e9 99 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c742 <isr10>:
ffffffff8010c742:	fa                   	cli    
ffffffff8010c743:	6a 0a                	push   0xa
ffffffff8010c745:	e9 91 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c74a <isr11>:
ffffffff8010c74a:	fa                   	cli    
ffffffff8010c74b:	6a 0b                	push   0xb
ffffffff8010c74d:	e9 89 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c752 <isr12>:
ffffffff8010c752:	fa                   	cli    
ffffffff8010c753:	6a 0c                	push   0xc
ffffffff8010c755:	e9 81 00 00 00       	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c75a <isr13>:
ffffffff8010c75a:	fa                   	cli    
ffffffff8010c75b:	6a 0d                	push   0xd
ffffffff8010c75d:	eb 7c                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c75f <isr14>:
ffffffff8010c75f:	fa                   	cli    
ffffffff8010c760:	6a 0e                	push   0xe
ffffffff8010c762:	eb 77                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c764 <isr15>:
ffffffff8010c764:	fa                   	cli    
ffffffff8010c765:	6a 00                	push   0x0
ffffffff8010c767:	6a 0f                	push   0xf
ffffffff8010c769:	eb 70                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c76b <isr16>:
ffffffff8010c76b:	fa                   	cli    
ffffffff8010c76c:	6a 00                	push   0x0
ffffffff8010c76e:	6a 10                	push   0x10
ffffffff8010c770:	eb 69                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c772 <isr17>:
ffffffff8010c772:	fa                   	cli    
ffffffff8010c773:	6a 00                	push   0x0
ffffffff8010c775:	6a 11                	push   0x11
ffffffff8010c777:	eb 62                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c779 <isr18>:
ffffffff8010c779:	fa                   	cli    
ffffffff8010c77a:	6a 00                	push   0x0
ffffffff8010c77c:	6a 12                	push   0x12
ffffffff8010c77e:	eb 5b                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c780 <isr19>:
ffffffff8010c780:	fa                   	cli    
ffffffff8010c781:	6a 00                	push   0x0
ffffffff8010c783:	6a 13                	push   0x13
ffffffff8010c785:	eb 54                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c787 <isr20>:
ffffffff8010c787:	fa                   	cli    
ffffffff8010c788:	6a 00                	push   0x0
ffffffff8010c78a:	6a 14                	push   0x14
ffffffff8010c78c:	eb 4d                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c78e <isr21>:
ffffffff8010c78e:	fa                   	cli    
ffffffff8010c78f:	6a 00                	push   0x0
ffffffff8010c791:	6a 15                	push   0x15
ffffffff8010c793:	eb 46                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c795 <isr22>:
ffffffff8010c795:	fa                   	cli    
ffffffff8010c796:	6a 00                	push   0x0
ffffffff8010c798:	6a 16                	push   0x16
ffffffff8010c79a:	eb 3f                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c79c <isr23>:
ffffffff8010c79c:	fa                   	cli    
ffffffff8010c79d:	6a 00                	push   0x0
ffffffff8010c79f:	6a 17                	push   0x17
ffffffff8010c7a1:	eb 38                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c7a3 <isr24>:
ffffffff8010c7a3:	fa                   	cli    
ffffffff8010c7a4:	6a 00                	push   0x0
ffffffff8010c7a6:	6a 18                	push   0x18
ffffffff8010c7a8:	eb 31                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c7aa <isr25>:
ffffffff8010c7aa:	fa                   	cli    
ffffffff8010c7ab:	6a 00                	push   0x0
ffffffff8010c7ad:	6a 19                	push   0x19
ffffffff8010c7af:	eb 2a                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c7b1 <isr26>:
ffffffff8010c7b1:	fa                   	cli    
ffffffff8010c7b2:	6a 00                	push   0x0
ffffffff8010c7b4:	6a 1a                	push   0x1a
ffffffff8010c7b6:	eb 23                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c7b8 <isr27>:
ffffffff8010c7b8:	fa                   	cli    
ffffffff8010c7b9:	6a 00                	push   0x0
ffffffff8010c7bb:	6a 1b                	push   0x1b
ffffffff8010c7bd:	eb 1c                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c7bf <isr28>:
ffffffff8010c7bf:	fa                   	cli    
ffffffff8010c7c0:	6a 00                	push   0x0
ffffffff8010c7c2:	6a 1c                	push   0x1c
ffffffff8010c7c4:	eb 15                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c7c6 <isr29>:
ffffffff8010c7c6:	fa                   	cli    
ffffffff8010c7c7:	6a 00                	push   0x0
ffffffff8010c7c9:	6a 1d                	push   0x1d
ffffffff8010c7cb:	eb 0e                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c7cd <isr30>:
ffffffff8010c7cd:	fa                   	cli    
ffffffff8010c7ce:	6a 00                	push   0x0
ffffffff8010c7d0:	6a 1e                	push   0x1e
ffffffff8010c7d2:	eb 07                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c7d4 <isr31>:
ffffffff8010c7d4:	fa                   	cli    
ffffffff8010c7d5:	6a 00                	push   0x0
ffffffff8010c7d7:	6a 1f                	push   0x1f
ffffffff8010c7d9:	eb 00                	jmp    ffffffff8010c7db <exception_common_stub>

ffffffff8010c7db <exception_common_stub>:
ffffffff8010c7db:	55                   	push   rbp
ffffffff8010c7dc:	57                   	push   rdi
ffffffff8010c7dd:	48 8b 2c 25 80 60 11 80 	mov    rbp,QWORD PTR ds:0xffffffff80116080
ffffffff8010c7e5:	8f 45 68             	pop    QWORD PTR [rbp+0x68]
ffffffff8010c7e8:	8f 45 70             	pop    QWORD PTR [rbp+0x70]
ffffffff8010c7eb:	5f                   	pop    rdi
ffffffff8010c7ec:	48 83 c4 08          	add    rsp,0x8
ffffffff8010c7f0:	8f 45 78             	pop    QWORD PTR [rbp+0x78]
ffffffff8010c7f3:	8f 85 80 00 00 00    	pop    QWORD PTR [rbp+0x80]
ffffffff8010c7f9:	8f 85 88 00 00 00    	pop    QWORD PTR [rbp+0x88]
ffffffff8010c7ff:	8f 85 90 00 00 00    	pop    QWORD PTR [rbp+0x90]
ffffffff8010c805:	8f 85 98 00 00 00    	pop    QWORD PTR [rbp+0x98]
ffffffff8010c80b:	48 8b 24 25 80 60 11 80 	mov    rsp,QWORD PTR ds:0xffffffff80116080
ffffffff8010c813:	48 83 c4 68          	add    rsp,0x68
ffffffff8010c817:	50                   	push   rax
ffffffff8010c818:	53                   	push   rbx
ffffffff8010c819:	51                   	push   rcx
ffffffff8010c81a:	52                   	push   rdx
ffffffff8010c81b:	56                   	push   rsi
ffffffff8010c81c:	41 50                	push   r8
ffffffff8010c81e:	41 51                	push   r9
ffffffff8010c820:	41 52                	push   r10
ffffffff8010c822:	41 53                	push   r11
ffffffff8010c824:	41 54                	push   r12
ffffffff8010c826:	41 55                	push   r13
ffffffff8010c828:	41 56                	push   r14
ffffffff8010c82a:	41 57                	push   r15
ffffffff8010c82c:	48 bc 40 60 11 80 ff ff ff ff 	movabs rsp,0xffffffff80116040
ffffffff8010c836:	66 b8 10 00          	mov    ax,0x10
ffffffff8010c83a:	8e d8                	mov    ds,eax
ffffffff8010c83c:	8e c0                	mov    es,eax
ffffffff8010c83e:	8e e0                	mov    fs,eax
ffffffff8010c840:	8e e8                	mov    gs,eax
ffffffff8010c842:	48 b8 d0 cb 10 80 ff ff ff ff 	movabs rax,0xffffffff8010cbd0
ffffffff8010c84c:	ff d0                	call   rax
ffffffff8010c84e:	e9 56 07 00 00       	jmp    ffffffff8010cfa9 <JumpIntoThread>
ffffffff8010c853:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010c85d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010c860 <RegisterExceptionInterrupts>:
ffffffff8010c860:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010c864:	31 ff                	xor    edi,edi
ffffffff8010c866:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c86b:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c870:	48 c7 c6 e0 c6 10 80 	mov    rsi,0xffffffff8010c6e0
ffffffff8010c877:	e8 14 06 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c87c:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c881:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c886:	48 c7 c6 ea c6 10 80 	mov    rsi,0xffffffff8010c6ea
ffffffff8010c88d:	bf 01 00 00 00       	mov    edi,0x1
ffffffff8010c892:	e8 f9 05 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c897:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c89c:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c8a1:	48 c7 c6 f4 c6 10 80 	mov    rsi,0xffffffff8010c6f4
ffffffff8010c8a8:	bf 02 00 00 00       	mov    edi,0x2
ffffffff8010c8ad:	e8 de 05 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c8b2:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c8b7:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c8bc:	48 c7 c6 fe c6 10 80 	mov    rsi,0xffffffff8010c6fe
ffffffff8010c8c3:	bf 03 00 00 00       	mov    edi,0x3
ffffffff8010c8c8:	e8 c3 05 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c8cd:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c8d2:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c8d7:	48 c7 c6 08 c7 10 80 	mov    rsi,0xffffffff8010c708
ffffffff8010c8de:	bf 04 00 00 00       	mov    edi,0x4
ffffffff8010c8e3:	e8 a8 05 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c8e8:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c8ed:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c8f2:	48 c7 c6 12 c7 10 80 	mov    rsi,0xffffffff8010c712
ffffffff8010c8f9:	bf 05 00 00 00       	mov    edi,0x5
ffffffff8010c8fe:	e8 8d 05 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c903:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c908:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c90d:	48 c7 c6 1c c7 10 80 	mov    rsi,0xffffffff8010c71c
ffffffff8010c914:	bf 06 00 00 00       	mov    edi,0x6
ffffffff8010c919:	e8 72 05 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c91e:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c923:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c928:	48 c7 c6 26 c7 10 80 	mov    rsi,0xffffffff8010c726
ffffffff8010c92f:	bf 07 00 00 00       	mov    edi,0x7
ffffffff8010c934:	e8 57 05 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c939:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c93e:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c943:	48 c7 c6 30 c7 10 80 	mov    rsi,0xffffffff8010c730
ffffffff8010c94a:	bf 08 00 00 00       	mov    edi,0x8
ffffffff8010c94f:	e8 3c 05 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c954:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c959:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c95e:	48 c7 c6 38 c7 10 80 	mov    rsi,0xffffffff8010c738
ffffffff8010c965:	bf 09 00 00 00       	mov    edi,0x9
ffffffff8010c96a:	e8 21 05 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c96f:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c974:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c979:	48 c7 c6 42 c7 10 80 	mov    rsi,0xffffffff8010c742
ffffffff8010c980:	bf 0a 00 00 00       	mov    edi,0xa
ffffffff8010c985:	e8 06 05 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c98a:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c98f:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c994:	48 c7 c6 4a c7 10 80 	mov    rsi,0xffffffff8010c74a
ffffffff8010c99b:	bf 0b 00 00 00       	mov    edi,0xb
ffffffff8010c9a0:	e8 eb 04 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c9a5:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c9aa:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c9af:	48 c7 c6 52 c7 10 80 	mov    rsi,0xffffffff8010c752
ffffffff8010c9b6:	bf 0c 00 00 00       	mov    edi,0xc
ffffffff8010c9bb:	e8 d0 04 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c9c0:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c9c5:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c9ca:	48 c7 c6 5a c7 10 80 	mov    rsi,0xffffffff8010c75a
ffffffff8010c9d1:	bf 0d 00 00 00       	mov    edi,0xd
ffffffff8010c9d6:	e8 b5 04 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c9db:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c9e0:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010c9e5:	48 c7 c6 5f c7 10 80 	mov    rsi,0xffffffff8010c75f
ffffffff8010c9ec:	bf 0e 00 00 00       	mov    edi,0xe
ffffffff8010c9f1:	e8 9a 04 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010c9f6:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010c9fb:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010ca00:	48 c7 c6 64 c7 10 80 	mov    rsi,0xffffffff8010c764
ffffffff8010ca07:	bf 0f 00 00 00       	mov    edi,0xf
ffffffff8010ca0c:	e8 7f 04 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010ca11:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010ca16:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010ca1b:	48 c7 c6 6b c7 10 80 	mov    rsi,0xffffffff8010c76b
ffffffff8010ca22:	bf 10 00 00 00       	mov    edi,0x10
ffffffff8010ca27:	e8 64 04 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010ca2c:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010ca31:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010ca36:	48 c7 c6 72 c7 10 80 	mov    rsi,0xffffffff8010c772
ffffffff8010ca3d:	bf 11 00 00 00       	mov    edi,0x11
ffffffff8010ca42:	e8 49 04 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010ca47:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010ca4c:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010ca51:	48 c7 c6 79 c7 10 80 	mov    rsi,0xffffffff8010c779
ffffffff8010ca58:	bf 12 00 00 00       	mov    edi,0x12
ffffffff8010ca5d:	e8 2e 04 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010ca62:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010ca67:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010ca6c:	48 c7 c6 80 c7 10 80 	mov    rsi,0xffffffff8010c780
ffffffff8010ca73:	bf 13 00 00 00       	mov    edi,0x13
ffffffff8010ca78:	e8 13 04 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010ca7d:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010ca82:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010ca87:	48 c7 c6 87 c7 10 80 	mov    rsi,0xffffffff8010c787
ffffffff8010ca8e:	bf 14 00 00 00       	mov    edi,0x14
ffffffff8010ca93:	e8 f8 03 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010ca98:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010ca9d:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010caa2:	48 c7 c6 8e c7 10 80 	mov    rsi,0xffffffff8010c78e
ffffffff8010caa9:	bf 15 00 00 00       	mov    edi,0x15
ffffffff8010caae:	e8 dd 03 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010cab3:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010cab8:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010cabd:	48 c7 c6 95 c7 10 80 	mov    rsi,0xffffffff8010c795
ffffffff8010cac4:	bf 16 00 00 00       	mov    edi,0x16
ffffffff8010cac9:	e8 c2 03 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010cace:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010cad3:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010cad8:	48 c7 c6 9c c7 10 80 	mov    rsi,0xffffffff8010c79c
ffffffff8010cadf:	bf 17 00 00 00       	mov    edi,0x17
ffffffff8010cae4:	e8 a7 03 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010cae9:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010caee:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010caf3:	48 c7 c6 a3 c7 10 80 	mov    rsi,0xffffffff8010c7a3
ffffffff8010cafa:	bf 18 00 00 00       	mov    edi,0x18
ffffffff8010caff:	e8 8c 03 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010cb04:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010cb09:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010cb0e:	48 c7 c6 aa c7 10 80 	mov    rsi,0xffffffff8010c7aa
ffffffff8010cb15:	bf 19 00 00 00       	mov    edi,0x19
ffffffff8010cb1a:	e8 71 03 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010cb1f:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010cb24:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010cb29:	48 c7 c6 b1 c7 10 80 	mov    rsi,0xffffffff8010c7b1
ffffffff8010cb30:	bf 1a 00 00 00       	mov    edi,0x1a
ffffffff8010cb35:	e8 56 03 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010cb3a:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010cb3f:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010cb44:	48 c7 c6 b8 c7 10 80 	mov    rsi,0xffffffff8010c7b8
ffffffff8010cb4b:	bf 1b 00 00 00       	mov    edi,0x1b
ffffffff8010cb50:	e8 3b 03 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010cb55:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010cb5a:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010cb5f:	48 c7 c6 bf c7 10 80 	mov    rsi,0xffffffff8010c7bf
ffffffff8010cb66:	bf 1c 00 00 00       	mov    edi,0x1c
ffffffff8010cb6b:	e8 20 03 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010cb70:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010cb75:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010cb7a:	48 c7 c6 c6 c7 10 80 	mov    rsi,0xffffffff8010c7c6
ffffffff8010cb81:	bf 1d 00 00 00       	mov    edi,0x1d
ffffffff8010cb86:	e8 05 03 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010cb8b:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010cb90:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010cb95:	48 c7 c6 cd c7 10 80 	mov    rsi,0xffffffff8010c7cd
ffffffff8010cb9c:	bf 1e 00 00 00       	mov    edi,0x1e
ffffffff8010cba1:	e8 ea 02 00 00       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010cba6:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010cbab:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010cbb0:	48 c7 c6 d4 c7 10 80 	mov    rsi,0xffffffff8010c7d4
ffffffff8010cbb7:	bf 1f 00 00 00       	mov    edi,0x1f
ffffffff8010cbbc:	48 83 c4 08          	add    rsp,0x8
ffffffff8010cbc0:	e9 cb 02 00 00       	jmp    ffffffff8010ce90 <SetIdtEntry>
ffffffff8010cbc5:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]

ffffffff8010cbd0 <ExceptionHandler>:
ffffffff8010cbd0:	55                   	push   rbp
ffffffff8010cbd1:	48 63 ef             	movsxd rbp,edi
ffffffff8010cbd4:	83 ff 1f             	cmp    edi,0x1f
ffffffff8010cbd7:	0f 8f c3 00 00 00    	jg     ffffffff8010cca0 <ExceptionHandler+0xd0>
ffffffff8010cbdd:	48 c7 c7 c5 52 11 80 	mov    rdi,0xffffffff801152c5
ffffffff8010cbe4:	e8 67 45 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010cbe9:	48 8b 3c ed 00 40 11 80 	mov    rdi,QWORD PTR [rbp*8-0x7feec000]
ffffffff8010cbf1:	e8 5a 45 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010cbf6:	48 c7 c7 da 52 11 80 	mov    rdi,0xffffffff801152da
ffffffff8010cbfd:	e8 4e 45 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010cc02:	48 89 ef             	mov    rdi,rbp
ffffffff8010cc05:	e8 d6 47 00 00       	call   ffffffff801113e0 <PrintNumber>
ffffffff8010cc0a:	bf 29 00 00 00       	mov    edi,0x29
ffffffff8010cc0f:	e8 9c 44 00 00       	call   ffffffff801110b0 <PrintChar>
ffffffff8010cc14:	48 83 3d 84 94 00 00 00 	cmp    QWORD PTR [rip+0x9484],0x0        # ffffffff801160a0 <running_thread>
ffffffff8010cc1c:	0f 84 a0 00 00 00    	je     ffffffff8010ccc2 <ExceptionHandler+0xf2>
ffffffff8010cc22:	48 c7 c7 f2 52 11 80 	mov    rdi,0xffffffff801152f2
ffffffff8010cc29:	e8 22 45 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010cc2e:	48 8b 05 6b 94 00 00 	mov    rax,QWORD PTR [rip+0x946b]        # ffffffff801160a0 <running_thread>
ffffffff8010cc35:	48 8b 68 08          	mov    rbp,QWORD PTR [rax+0x8]
ffffffff8010cc39:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
ffffffff8010cc3d:	e8 9e 47 00 00       	call   ffffffff801113e0 <PrintNumber>
ffffffff8010cc42:	48 c7 c7 da 52 11 80 	mov    rdi,0xffffffff801152da
ffffffff8010cc49:	e8 02 45 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010cc4e:	48 8d 7d 08          	lea    rdi,[rbp+0x8]
ffffffff8010cc52:	e8 f9 44 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010cc57:	48 c7 c7 fb 52 11 80 	mov    rdi,0xffffffff801152fb
ffffffff8010cc5e:	e8 ed 44 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010cc63:	48 8b 05 36 94 00 00 	mov    rax,QWORD PTR [rip+0x9436]        # ffffffff801160a0 <running_thread>
ffffffff8010cc6a:	48 8b 38             	mov    rdi,QWORD PTR [rax]
ffffffff8010cc6d:	e8 6e 47 00 00       	call   ffffffff801113e0 <PrintNumber>
ffffffff8010cc72:	bf 0a 00 00 00       	mov    edi,0xa
ffffffff8010cc77:	e8 34 44 00 00       	call   ffffffff801110b0 <PrintChar>
ffffffff8010cc7c:	48 8b 3d fd 93 00 00 	mov    rdi,QWORD PTR [rip+0x93fd]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff8010cc83:	e8 f8 2e 00 00       	call   ffffffff8010fb80 <PrintRegisters>
ffffffff8010cc88:	48 89 ef             	mov    rdi,rbp
ffffffff8010cc8b:	e8 10 2b 00 00       	call   ffffffff8010f7a0 <DestroyProcess>
ffffffff8010cc90:	31 c0                	xor    eax,eax
ffffffff8010cc92:	5d                   	pop    rbp
ffffffff8010cc93:	e9 11 03 00 00       	jmp    ffffffff8010cfa9 <JumpIntoThread>
ffffffff8010cc98:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010cca0:	48 c7 c7 dd 52 11 80 	mov    rdi,0xffffffff801152dd
ffffffff8010cca7:	e8 a4 44 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010ccac:	48 89 ef             	mov    rdi,rbp
ffffffff8010ccaf:	e8 2c 47 00 00       	call   ffffffff801113e0 <PrintNumber>
ffffffff8010ccb4:	48 83 3d e4 93 00 00 00 	cmp    QWORD PTR [rip+0x93e4],0x0        # ffffffff801160a0 <running_thread>
ffffffff8010ccbc:	0f 85 60 ff ff ff    	jne    ffffffff8010cc22 <ExceptionHandler+0x52>
ffffffff8010ccc2:	48 c7 c7 05 53 11 80 	mov    rdi,0xffffffff80115305
ffffffff8010ccc9:	e8 82 44 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010ccce:	48 8b 3d ab 93 00 00 	mov    rdi,QWORD PTR [rip+0x93ab]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff8010ccd5:	e8 a6 2e 00 00       	call   ffffffff8010fb80 <PrintRegisters>
ffffffff8010ccda:	f4                   	hlt    
ffffffff8010ccdb:	5d                   	pop    rbp
ffffffff8010ccdc:	c3                   	ret    
ffffffff8010ccdd:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010cce0 <SetFramebufferDetails>:
ffffffff8010cce0:	48 89 3d 21 93 00 00 	mov    QWORD PTR [rip+0x9321],rdi        # ffffffff80116008 <framebuffer_address>
ffffffff8010cce7:	89 35 13 93 00 00    	mov    DWORD PTR [rip+0x9313],esi        # ffffffff80116000 <framebuffer_width>
ffffffff8010cced:	89 15 1d 93 00 00    	mov    DWORD PTR [rip+0x931d],edx        # ffffffff80116010 <framebuffer_height>
ffffffff8010ccf3:	89 0d 1b 93 00 00    	mov    DWORD PTR [rip+0x931b],ecx        # ffffffff80116014 <framebuffer_pitch>
ffffffff8010ccf9:	44 88 05 18 93 00 00 	mov    BYTE PTR [rip+0x9318],r8b        # ffffffff80116018 <framebuffer_bits_per_pixel>
ffffffff8010cd00:	c3                   	ret    
ffffffff8010cd01:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010cd0c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010cd10 <MaybeLoadFramebuffer>:
ffffffff8010cd10:	a1 7b 01 10 80 ff ff ff ff 	movabs eax,ds:0xffffffff8010017b
ffffffff8010cd19:	53                   	push   rbx
ffffffff8010cd1a:	c6 05 f7 92 00 00 00 	mov    BYTE PTR [rip+0x92f7],0x0        # ffffffff80116018 <framebuffer_bits_per_pixel>
ffffffff8010cd21:	48 c7 05 dc 92 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x92dc],0x0        # ffffffff80116008 <framebuffer_address>
ffffffff8010cd2c:	83 c0 08             	add    eax,0x8
ffffffff8010cd2f:	48 8d 98 00 00 00 80 	lea    rbx,[rax-0x80000000]
ffffffff8010cd36:	8b 80 00 00 00 80    	mov    eax,DWORD PTR [rax-0x80000000]
ffffffff8010cd3c:	c7 05 ba 92 00 00 00 00 00 00 	mov    DWORD PTR [rip+0x92ba],0x0        # ffffffff80116000 <framebuffer_width>
ffffffff8010cd46:	c7 05 c0 92 00 00 00 00 00 00 	mov    DWORD PTR [rip+0x92c0],0x0        # ffffffff80116010 <framebuffer_height>
ffffffff8010cd50:	c7 05 ba 92 00 00 00 00 00 00 	mov    DWORD PTR [rip+0x92ba],0x0        # ffffffff80116014 <framebuffer_pitch>
ffffffff8010cd5a:	85 c0                	test   eax,eax
ffffffff8010cd5c:	75 14                	jne    ffffffff8010cd72 <MaybeLoadFramebuffer+0x62>
ffffffff8010cd5e:	eb 60                	jmp    ffffffff8010cdc0 <MaybeLoadFramebuffer+0xb0>
ffffffff8010cd60:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
ffffffff8010cd63:	83 c0 07             	add    eax,0x7
ffffffff8010cd66:	83 e0 f8             	and    eax,0xfffffff8
ffffffff8010cd69:	48 01 c3             	add    rbx,rax
ffffffff8010cd6c:	8b 03                	mov    eax,DWORD PTR [rbx]
ffffffff8010cd6e:	85 c0                	test   eax,eax
ffffffff8010cd70:	74 4e                	je     ffffffff8010cdc0 <MaybeLoadFramebuffer+0xb0>
ffffffff8010cd72:	83 f8 08             	cmp    eax,0x8
ffffffff8010cd75:	75 e9                	jne    ffffffff8010cd60 <MaybeLoadFramebuffer+0x50>
ffffffff8010cd77:	80 7b 1d 01          	cmp    BYTE PTR [rbx+0x1d],0x1
ffffffff8010cd7b:	75 33                	jne    ffffffff8010cdb0 <MaybeLoadFramebuffer+0xa0>
ffffffff8010cd7d:	0f b6 43 1c          	movzx  eax,BYTE PTR [rbx+0x1c]
ffffffff8010cd81:	8b 53 10             	mov    edx,DWORD PTR [rbx+0x10]
ffffffff8010cd84:	8b 4b 18             	mov    ecx,DWORD PTR [rbx+0x18]
ffffffff8010cd87:	8b 73 14             	mov    esi,DWORD PTR [rbx+0x14]
ffffffff8010cd8a:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
ffffffff8010cd8e:	89 15 80 92 00 00    	mov    DWORD PTR [rip+0x9280],edx        # ffffffff80116014 <framebuffer_pitch>
ffffffff8010cd94:	89 35 66 92 00 00    	mov    DWORD PTR [rip+0x9266],esi        # ffffffff80116000 <framebuffer_width>
ffffffff8010cd9a:	48 89 3d 67 92 00 00 	mov    QWORD PTR [rip+0x9267],rdi        # ffffffff80116008 <framebuffer_address>
ffffffff8010cda1:	89 0d 69 92 00 00    	mov    DWORD PTR [rip+0x9269],ecx        # ffffffff80116010 <framebuffer_height>
ffffffff8010cda7:	88 05 6b 92 00 00    	mov    BYTE PTR [rip+0x926b],al        # ffffffff80116018 <framebuffer_bits_per_pixel>
ffffffff8010cdad:	eb b1                	jmp    ffffffff8010cd60 <MaybeLoadFramebuffer+0x50>
ffffffff8010cdaf:	90                   	nop
ffffffff8010cdb0:	48 c7 c7 50 54 11 80 	mov    rdi,0xffffffff80115450
ffffffff8010cdb7:	e8 94 43 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010cdbc:	eb a2                	jmp    ffffffff8010cd60 <MaybeLoadFramebuffer+0x50>
ffffffff8010cdbe:	66 90                	xchg   ax,ax
ffffffff8010cdc0:	5b                   	pop    rbx
ffffffff8010cdc1:	c3                   	ret    
ffffffff8010cdc2:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010cdcd:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010cdd0 <PopulateRegistersWithFramebufferDetails>:
ffffffff8010cdd0:	48 8b 05 31 92 00 00 	mov    rax,QWORD PTR [rip+0x9231]        # ffffffff80116008 <framebuffer_address>
ffffffff8010cdd7:	48 89 47 60          	mov    QWORD PTR [rdi+0x60],rax
ffffffff8010cddb:	8b 05 1f 92 00 00    	mov    eax,DWORD PTR [rip+0x921f]        # ffffffff80116000 <framebuffer_width>
ffffffff8010cde1:	48 89 47 58          	mov    QWORD PTR [rdi+0x58],rax
ffffffff8010cde5:	8b 05 25 92 00 00    	mov    eax,DWORD PTR [rip+0x9225]        # ffffffff80116010 <framebuffer_height>
ffffffff8010cdeb:	48 89 47 48          	mov    QWORD PTR [rdi+0x48],rax
ffffffff8010cdef:	8b 05 1f 92 00 00    	mov    eax,DWORD PTR [rip+0x921f]        # ffffffff80116014 <framebuffer_pitch>
ffffffff8010cdf5:	48 89 47 40          	mov    QWORD PTR [rdi+0x40],rax
ffffffff8010cdf9:	0f b6 05 18 92 00 00 	movzx  eax,BYTE PTR [rip+0x9218]        # ffffffff80116018 <framebuffer_bits_per_pixel>
ffffffff8010ce00:	48 89 47 38          	mov    QWORD PTR [rdi+0x38],rax
ffffffff8010ce04:	c3                   	ret    
ffffffff8010ce05:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010ce0f:	90                   	nop

ffffffff8010ce10 <InitializeIdt>:
ffffffff8010ce10:	53                   	push   rbx
ffffffff8010ce11:	48 8b 3d a8 92 00 00 	mov    rdi,QWORD PTR [rip+0x92a8]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010ce18:	be 01 00 00 00       	mov    esi,0x1
ffffffff8010ce1d:	48 c7 c3 28 60 11 80 	mov    rbx,0xffffffff80116028
ffffffff8010ce24:	c6 05 f5 91 00 00 00 	mov    BYTE PTR [rip+0x91f5],0x0        # ffffffff80116020 <in_interrupt>
ffffffff8010ce2b:	e8 80 55 00 00       	call   ffffffff801123b0 <FindFreePageRange>
ffffffff8010ce30:	48 89 05 01 92 00 00 	mov    QWORD PTR [rip+0x9201],rax        # ffffffff80116038 <idt>
ffffffff8010ce37:	31 c0                	xor    eax,eax
ffffffff8010ce39:	e8 c2 26 00 00       	call   ffffffff8010f500 <GetPhysicalPage>
ffffffff8010ce3e:	48 8b 35 f3 91 00 00 	mov    rsi,QWORD PTR [rip+0x91f3]        # ffffffff80116038 <idt>
ffffffff8010ce45:	b9 01 00 00 00       	mov    ecx,0x1
ffffffff8010ce4a:	48 8b 3d 6f 92 00 00 	mov    rdi,QWORD PTR [rip+0x926f]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010ce51:	48 89 c2             	mov    rdx,rax
ffffffff8010ce54:	e8 87 55 00 00       	call   ffffffff801123e0 <MapPhysicalPageToVirtualPage>
ffffffff8010ce59:	48 8b 3d d8 91 00 00 	mov    rdi,QWORD PTR [rip+0x91d8]        # ffffffff80116038 <idt>
ffffffff8010ce60:	b8 ff 0f 00 00       	mov    eax,0xfff
ffffffff8010ce65:	31 f6                	xor    esi,esi
ffffffff8010ce67:	ba 00 10 00 00       	mov    edx,0x1000
ffffffff8010ce6c:	66 89 05 b5 91 00 00 	mov    WORD PTR [rip+0x91b5],ax        # ffffffff80116028 <idt_p>
ffffffff8010ce73:	48 89 3d b0 91 00 00 	mov    QWORD PTR [rip+0x91b0],rdi        # ffffffff8011602a <idt_p+0x2>
ffffffff8010ce7a:	e8 71 08 00 00       	call   ffffffff8010d6f0 <memset>
ffffffff8010ce7f:	0f 01 1b             	lidt   [rbx]
ffffffff8010ce82:	5b                   	pop    rbx
ffffffff8010ce83:	c3                   	ret    
ffffffff8010ce84:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010ce8f:	90                   	nop

ffffffff8010ce90 <SetIdtEntry>:
ffffffff8010ce90:	40 0f b6 ff          	movzx  edi,dil
ffffffff8010ce94:	48 89 f0             	mov    rax,rsi
ffffffff8010ce97:	48 c1 e7 04          	shl    rdi,0x4
ffffffff8010ce9b:	48 03 3d 96 91 00 00 	add    rdi,QWORD PTR [rip+0x9196]        # ffffffff80116038 <idt>
ffffffff8010cea2:	48 c1 e8 10          	shr    rax,0x10
ffffffff8010cea6:	66 89 37             	mov    WORD PTR [rdi],si
ffffffff8010cea9:	48 c1 ee 20          	shr    rsi,0x20
ffffffff8010cead:	66 89 47 06          	mov    WORD PTR [rdi+0x6],ax
ffffffff8010ceb1:	89 77 08             	mov    DWORD PTR [rdi+0x8],esi
ffffffff8010ceb4:	66 89 57 02          	mov    WORD PTR [rdi+0x2],dx
ffffffff8010ceb8:	c6 47 04 00          	mov    BYTE PTR [rdi+0x4],0x0
ffffffff8010cebc:	88 4f 05             	mov    BYTE PTR [rdi+0x5],cl
ffffffff8010cebf:	c7 47 0c 00 00 00 00 	mov    DWORD PTR [rdi+0xc],0x0
ffffffff8010cec6:	c3                   	ret    
ffffffff8010cec7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]

ffffffff8010ced0 <MarkInterruptHandlerAsEntered>:
ffffffff8010ced0:	c6 05 49 91 00 00 01 	mov    BYTE PTR [rip+0x9149],0x1        # ffffffff80116020 <in_interrupt>
ffffffff8010ced7:	c3                   	ret    
ffffffff8010ced8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010cee0 <MarkInterruptHandlerAsLeft>:
ffffffff8010cee0:	c6 05 39 91 00 00 00 	mov    BYTE PTR [rip+0x9139],0x0        # ffffffff80116020 <in_interrupt>
ffffffff8010cee7:	c3                   	ret    
ffffffff8010cee8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010cef0 <irq0>:
ffffffff8010cef0:	fa                   	cli    
ffffffff8010cef1:	6a 00                	push   0x0
ffffffff8010cef3:	eb 4b                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cef5 <irq1>:
ffffffff8010cef5:	fa                   	cli    
ffffffff8010cef6:	6a 01                	push   0x1
ffffffff8010cef8:	eb 46                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cefa <irq2>:
ffffffff8010cefa:	fa                   	cli    
ffffffff8010cefb:	6a 02                	push   0x2
ffffffff8010cefd:	eb 41                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010ceff <irq3>:
ffffffff8010ceff:	fa                   	cli    
ffffffff8010cf00:	6a 03                	push   0x3
ffffffff8010cf02:	eb 3c                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf04 <irq4>:
ffffffff8010cf04:	fa                   	cli    
ffffffff8010cf05:	6a 04                	push   0x4
ffffffff8010cf07:	eb 37                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf09 <irq5>:
ffffffff8010cf09:	fa                   	cli    
ffffffff8010cf0a:	6a 05                	push   0x5
ffffffff8010cf0c:	eb 32                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf0e <irq6>:
ffffffff8010cf0e:	fa                   	cli    
ffffffff8010cf0f:	6a 06                	push   0x6
ffffffff8010cf11:	eb 2d                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf13 <irq7>:
ffffffff8010cf13:	fa                   	cli    
ffffffff8010cf14:	6a 07                	push   0x7
ffffffff8010cf16:	eb 28                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf18 <irq8>:
ffffffff8010cf18:	fa                   	cli    
ffffffff8010cf19:	6a 08                	push   0x8
ffffffff8010cf1b:	eb 23                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf1d <irq9>:
ffffffff8010cf1d:	fa                   	cli    
ffffffff8010cf1e:	6a 09                	push   0x9
ffffffff8010cf20:	eb 1e                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf22 <irq10>:
ffffffff8010cf22:	fa                   	cli    
ffffffff8010cf23:	6a 0a                	push   0xa
ffffffff8010cf25:	eb 19                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf27 <irq11>:
ffffffff8010cf27:	fa                   	cli    
ffffffff8010cf28:	6a 0b                	push   0xb
ffffffff8010cf2a:	eb 14                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf2c <irq12>:
ffffffff8010cf2c:	fa                   	cli    
ffffffff8010cf2d:	6a 0c                	push   0xc
ffffffff8010cf2f:	eb 0f                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf31 <irq13>:
ffffffff8010cf31:	fa                   	cli    
ffffffff8010cf32:	6a 0d                	push   0xd
ffffffff8010cf34:	eb 0a                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf36 <irq14>:
ffffffff8010cf36:	fa                   	cli    
ffffffff8010cf37:	6a 0e                	push   0xe
ffffffff8010cf39:	eb 05                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf3b <irq15>:
ffffffff8010cf3b:	fa                   	cli    
ffffffff8010cf3c:	6a 0f                	push   0xf
ffffffff8010cf3e:	eb 00                	jmp    ffffffff8010cf40 <irq_common_stub>

ffffffff8010cf40 <irq_common_stub>:
ffffffff8010cf40:	55                   	push   rbp
ffffffff8010cf41:	57                   	push   rdi
ffffffff8010cf42:	48 8b 2c 25 80 60 11 80 	mov    rbp,QWORD PTR ds:0xffffffff80116080
ffffffff8010cf4a:	8f 45 68             	pop    QWORD PTR [rbp+0x68]
ffffffff8010cf4d:	8f 45 70             	pop    QWORD PTR [rbp+0x70]
ffffffff8010cf50:	5f                   	pop    rdi
ffffffff8010cf51:	8f 45 78             	pop    QWORD PTR [rbp+0x78]
ffffffff8010cf54:	8f 85 80 00 00 00    	pop    QWORD PTR [rbp+0x80]
ffffffff8010cf5a:	8f 85 88 00 00 00    	pop    QWORD PTR [rbp+0x88]
ffffffff8010cf60:	8f 85 90 00 00 00    	pop    QWORD PTR [rbp+0x90]
ffffffff8010cf66:	8f 85 98 00 00 00    	pop    QWORD PTR [rbp+0x98]
ffffffff8010cf6c:	48 8b 24 25 80 60 11 80 	mov    rsp,QWORD PTR ds:0xffffffff80116080
ffffffff8010cf74:	48 83 c4 68          	add    rsp,0x68
ffffffff8010cf78:	50                   	push   rax
ffffffff8010cf79:	53                   	push   rbx
ffffffff8010cf7a:	51                   	push   rcx
ffffffff8010cf7b:	52                   	push   rdx
ffffffff8010cf7c:	56                   	push   rsi
ffffffff8010cf7d:	41 50                	push   r8
ffffffff8010cf7f:	41 51                	push   r9
ffffffff8010cf81:	41 52                	push   r10
ffffffff8010cf83:	41 53                	push   r11
ffffffff8010cf85:	41 54                	push   r12
ffffffff8010cf87:	41 55                	push   r13
ffffffff8010cf89:	41 56                	push   r14
ffffffff8010cf8b:	41 57                	push   r15
ffffffff8010cf8d:	48 8b 24 25 40 60 11 80 	mov    rsp,QWORD PTR ds:0xffffffff80116040
ffffffff8010cf95:	66 b8 10 00          	mov    ax,0x10
ffffffff8010cf99:	8e d8                	mov    ds,eax
ffffffff8010cf9b:	8e c0                	mov    es,eax
ffffffff8010cf9d:	48 b8 60 d5 10 80 ff ff ff ff 	movabs rax,0xffffffff8010d560
ffffffff8010cfa7:	ff d0                	call   rax

ffffffff8010cfa9 <JumpIntoThread>:
ffffffff8010cfa9:	66 b8 1b 00          	mov    ax,0x1b
ffffffff8010cfad:	8e d8                	mov    ds,eax
ffffffff8010cfaf:	8e c0                	mov    es,eax
ffffffff8010cfb1:	48 8b 24 25 80 60 11 80 	mov    rsp,QWORD PTR ds:0xffffffff80116080
ffffffff8010cfb9:	41 5f                	pop    r15
ffffffff8010cfbb:	41 5e                	pop    r14
ffffffff8010cfbd:	41 5d                	pop    r13
ffffffff8010cfbf:	41 5c                	pop    r12
ffffffff8010cfc1:	41 5b                	pop    r11
ffffffff8010cfc3:	41 5a                	pop    r10
ffffffff8010cfc5:	41 59                	pop    r9
ffffffff8010cfc7:	41 58                	pop    r8
ffffffff8010cfc9:	5e                   	pop    rsi
ffffffff8010cfca:	5a                   	pop    rdx
ffffffff8010cfcb:	59                   	pop    rcx
ffffffff8010cfcc:	5b                   	pop    rbx
ffffffff8010cfcd:	58                   	pop    rax
ffffffff8010cfce:	5f                   	pop    rdi
ffffffff8010cfcf:	5d                   	pop    rbp
ffffffff8010cfd0:	48 cf                	iretq  
ffffffff8010cfd2:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010cfdc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010cfe0 <RemapIrqsToNotOverlapWithCpuExceptions>:
ffffffff8010cfe0:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010cfe4:	be 11 00 00 00       	mov    esi,0x11
ffffffff8010cfe9:	bf 20 00 00 00       	mov    edi,0x20
ffffffff8010cfee:	e8 ed 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010cff3:	be 11 00 00 00       	mov    esi,0x11
ffffffff8010cff8:	bf a0 00 00 00       	mov    edi,0xa0
ffffffff8010cffd:	e8 de 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d002:	be 20 00 00 00       	mov    esi,0x20
ffffffff8010d007:	bf 21 00 00 00       	mov    edi,0x21
ffffffff8010d00c:	e8 cf 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d011:	be 28 00 00 00       	mov    esi,0x28
ffffffff8010d016:	bf a1 00 00 00       	mov    edi,0xa1
ffffffff8010d01b:	e8 c0 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d020:	be 04 00 00 00       	mov    esi,0x4
ffffffff8010d025:	bf 21 00 00 00       	mov    edi,0x21
ffffffff8010d02a:	e8 b1 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d02f:	be 02 00 00 00       	mov    esi,0x2
ffffffff8010d034:	bf a1 00 00 00       	mov    edi,0xa1
ffffffff8010d039:	e8 a2 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d03e:	be 01 00 00 00       	mov    esi,0x1
ffffffff8010d043:	bf 21 00 00 00       	mov    edi,0x21
ffffffff8010d048:	e8 93 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d04d:	be 01 00 00 00       	mov    esi,0x1
ffffffff8010d052:	bf a1 00 00 00       	mov    edi,0xa1
ffffffff8010d057:	e8 84 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d05c:	31 f6                	xor    esi,esi
ffffffff8010d05e:	bf 21 00 00 00       	mov    edi,0x21
ffffffff8010d063:	e8 78 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d068:	31 f6                	xor    esi,esi
ffffffff8010d06a:	bf a1 00 00 00       	mov    edi,0xa1
ffffffff8010d06f:	48 83 c4 08          	add    rsp,0x8
ffffffff8010d073:	e9 68 0c 00 00       	jmp    ffffffff8010dce0 <outportb>
ffffffff8010d078:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010d080 <RegisterInterruptHandlers>:
ffffffff8010d080:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010d084:	be 11 00 00 00       	mov    esi,0x11
ffffffff8010d089:	bf 20 00 00 00       	mov    edi,0x20
ffffffff8010d08e:	e8 4d 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d093:	be 11 00 00 00       	mov    esi,0x11
ffffffff8010d098:	bf a0 00 00 00       	mov    edi,0xa0
ffffffff8010d09d:	e8 3e 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d0a2:	be 20 00 00 00       	mov    esi,0x20
ffffffff8010d0a7:	bf 21 00 00 00       	mov    edi,0x21
ffffffff8010d0ac:	e8 2f 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d0b1:	be 28 00 00 00       	mov    esi,0x28
ffffffff8010d0b6:	bf a1 00 00 00       	mov    edi,0xa1
ffffffff8010d0bb:	e8 20 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d0c0:	be 04 00 00 00       	mov    esi,0x4
ffffffff8010d0c5:	bf 21 00 00 00       	mov    edi,0x21
ffffffff8010d0ca:	e8 11 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d0cf:	be 02 00 00 00       	mov    esi,0x2
ffffffff8010d0d4:	bf a1 00 00 00       	mov    edi,0xa1
ffffffff8010d0d9:	e8 02 0c 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d0de:	be 01 00 00 00       	mov    esi,0x1
ffffffff8010d0e3:	bf 21 00 00 00       	mov    edi,0x21
ffffffff8010d0e8:	e8 f3 0b 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d0ed:	be 01 00 00 00       	mov    esi,0x1
ffffffff8010d0f2:	bf a1 00 00 00       	mov    edi,0xa1
ffffffff8010d0f7:	e8 e4 0b 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d0fc:	31 f6                	xor    esi,esi
ffffffff8010d0fe:	bf 21 00 00 00       	mov    edi,0x21
ffffffff8010d103:	e8 d8 0b 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d108:	31 f6                	xor    esi,esi
ffffffff8010d10a:	bf a1 00 00 00       	mov    edi,0xa1
ffffffff8010d10f:	e8 cc 0b 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d114:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d119:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d11e:	48 c7 c6 f0 ce 10 80 	mov    rsi,0xffffffff8010cef0
ffffffff8010d125:	bf 20 00 00 00       	mov    edi,0x20
ffffffff8010d12a:	e8 61 fd ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d12f:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d134:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d139:	48 c7 c6 f5 ce 10 80 	mov    rsi,0xffffffff8010cef5
ffffffff8010d140:	bf 21 00 00 00       	mov    edi,0x21
ffffffff8010d145:	e8 46 fd ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d14a:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d14f:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d154:	48 c7 c6 fa ce 10 80 	mov    rsi,0xffffffff8010cefa
ffffffff8010d15b:	bf 22 00 00 00       	mov    edi,0x22
ffffffff8010d160:	e8 2b fd ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d165:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d16a:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d16f:	48 c7 c6 ff ce 10 80 	mov    rsi,0xffffffff8010ceff
ffffffff8010d176:	bf 23 00 00 00       	mov    edi,0x23
ffffffff8010d17b:	e8 10 fd ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d180:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d185:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d18a:	48 c7 c6 04 cf 10 80 	mov    rsi,0xffffffff8010cf04
ffffffff8010d191:	bf 24 00 00 00       	mov    edi,0x24
ffffffff8010d196:	e8 f5 fc ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d19b:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d1a0:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d1a5:	48 c7 c6 09 cf 10 80 	mov    rsi,0xffffffff8010cf09
ffffffff8010d1ac:	bf 25 00 00 00       	mov    edi,0x25
ffffffff8010d1b1:	e8 da fc ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d1b6:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d1bb:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d1c0:	48 c7 c6 0e cf 10 80 	mov    rsi,0xffffffff8010cf0e
ffffffff8010d1c7:	bf 26 00 00 00       	mov    edi,0x26
ffffffff8010d1cc:	e8 bf fc ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d1d1:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d1d6:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d1db:	48 c7 c6 13 cf 10 80 	mov    rsi,0xffffffff8010cf13
ffffffff8010d1e2:	bf 27 00 00 00       	mov    edi,0x27
ffffffff8010d1e7:	e8 a4 fc ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d1ec:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d1f1:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d1f6:	48 c7 c6 18 cf 10 80 	mov    rsi,0xffffffff8010cf18
ffffffff8010d1fd:	bf 28 00 00 00       	mov    edi,0x28
ffffffff8010d202:	e8 89 fc ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d207:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d20c:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d211:	48 c7 c6 1d cf 10 80 	mov    rsi,0xffffffff8010cf1d
ffffffff8010d218:	bf 29 00 00 00       	mov    edi,0x29
ffffffff8010d21d:	e8 6e fc ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d222:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d227:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d22c:	48 c7 c6 22 cf 10 80 	mov    rsi,0xffffffff8010cf22
ffffffff8010d233:	bf 2a 00 00 00       	mov    edi,0x2a
ffffffff8010d238:	e8 53 fc ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d23d:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d242:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d247:	48 c7 c6 27 cf 10 80 	mov    rsi,0xffffffff8010cf27
ffffffff8010d24e:	bf 2b 00 00 00       	mov    edi,0x2b
ffffffff8010d253:	e8 38 fc ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d258:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d25d:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d262:	48 c7 c6 2c cf 10 80 	mov    rsi,0xffffffff8010cf2c
ffffffff8010d269:	bf 2c 00 00 00       	mov    edi,0x2c
ffffffff8010d26e:	e8 1d fc ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d273:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d278:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d27d:	48 c7 c6 31 cf 10 80 	mov    rsi,0xffffffff8010cf31
ffffffff8010d284:	bf 2d 00 00 00       	mov    edi,0x2d
ffffffff8010d289:	e8 02 fc ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d28e:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d293:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d298:	48 c7 c6 36 cf 10 80 	mov    rsi,0xffffffff8010cf36
ffffffff8010d29f:	bf 2e 00 00 00       	mov    edi,0x2e
ffffffff8010d2a4:	e8 e7 fb ff ff       	call   ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d2a9:	b9 8e 00 00 00       	mov    ecx,0x8e
ffffffff8010d2ae:	ba 08 00 00 00       	mov    edx,0x8
ffffffff8010d2b3:	48 c7 c6 3b cf 10 80 	mov    rsi,0xffffffff8010cf3b
ffffffff8010d2ba:	bf 2f 00 00 00       	mov    edi,0x2f
ffffffff8010d2bf:	48 83 c4 08          	add    rsp,0x8
ffffffff8010d2c3:	e9 c8 fb ff ff       	jmp    ffffffff8010ce90 <SetIdtEntry>
ffffffff8010d2c8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010d2d0 <AllocateInterruptStack>:
ffffffff8010d2d0:	41 54                	push   r12
ffffffff8010d2d2:	31 c0                	xor    eax,eax
ffffffff8010d2d4:	55                   	push   rbp
ffffffff8010d2d5:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010d2d9:	e8 22 22 00 00       	call   ffffffff8010f500 <GetPhysicalPage>
ffffffff8010d2de:	48 8b 3d db 8d 00 00 	mov    rdi,QWORD PTR [rip+0x8ddb]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010d2e5:	be 01 00 00 00       	mov    esi,0x1
ffffffff8010d2ea:	49 89 c4             	mov    r12,rax
ffffffff8010d2ed:	e8 be 50 00 00       	call   ffffffff801123b0 <FindFreePageRange>
ffffffff8010d2f2:	48 89 c5             	mov    rbp,rax
ffffffff8010d2f5:	49 83 fc 01          	cmp    r12,0x1
ffffffff8010d2f9:	74 3d                	je     ffffffff8010d338 <AllocateInterruptStack+0x68>
ffffffff8010d2fb:	48 83 f8 01          	cmp    rax,0x1
ffffffff8010d2ff:	74 37                	je     ffffffff8010d338 <AllocateInterruptStack+0x68>
ffffffff8010d301:	48 8b 3d b8 8d 00 00 	mov    rdi,QWORD PTR [rip+0x8db8]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010d308:	4c 89 e2             	mov    rdx,r12
ffffffff8010d30b:	48 89 ee             	mov    rsi,rbp
ffffffff8010d30e:	b9 01 00 00 00       	mov    ecx,0x1
ffffffff8010d313:	e8 c8 50 00 00       	call   ffffffff801123e0 <MapPhysicalPageToVirtualPage>
ffffffff8010d318:	48 8d 85 00 10 00 00 	lea    rax,[rbp+0x1000]
ffffffff8010d31f:	48 89 ef             	mov    rdi,rbp
ffffffff8010d322:	48 89 05 17 8d 00 00 	mov    QWORD PTR [rip+0x8d17],rax        # ffffffff80116040 <interrupt_stack_top>
ffffffff8010d329:	48 83 c4 08          	add    rsp,0x8
ffffffff8010d32d:	5d                   	pop    rbp
ffffffff8010d32e:	41 5c                	pop    r12
ffffffff8010d330:	e9 2b 48 00 00       	jmp    ffffffff80111b60 <SetInterruptStack>
ffffffff8010d335:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010d338:	48 c7 c7 b8 54 11 80 	mov    rdi,0xffffffff801154b8
ffffffff8010d33f:	e8 0c 3e 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010d344:	fa                   	cli    
ffffffff8010d345:	f4                   	hlt    
ffffffff8010d346:	eb b9                	jmp    ffffffff8010d301 <AllocateInterruptStack+0x31>
ffffffff8010d348:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010d350 <InitializeInterrupts>:
ffffffff8010d350:	41 54                	push   r12
ffffffff8010d352:	31 c0                	xor    eax,eax
ffffffff8010d354:	55                   	push   rbp
ffffffff8010d355:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010d359:	e8 b2 fa ff ff       	call   ffffffff8010ce10 <InitializeIdt>
ffffffff8010d35e:	31 c0                	xor    eax,eax
ffffffff8010d360:	e8 9b 21 00 00       	call   ffffffff8010f500 <GetPhysicalPage>
ffffffff8010d365:	48 8b 3d 54 8d 00 00 	mov    rdi,QWORD PTR [rip+0x8d54]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010d36c:	be 01 00 00 00       	mov    esi,0x1
ffffffff8010d371:	49 89 c4             	mov    r12,rax
ffffffff8010d374:	e8 37 50 00 00       	call   ffffffff801123b0 <FindFreePageRange>
ffffffff8010d379:	48 89 c5             	mov    rbp,rax
ffffffff8010d37c:	49 83 fc 01          	cmp    r12,0x1
ffffffff8010d380:	74 4e                	je     ffffffff8010d3d0 <InitializeInterrupts+0x80>
ffffffff8010d382:	48 83 f8 01          	cmp    rax,0x1
ffffffff8010d386:	74 48                	je     ffffffff8010d3d0 <InitializeInterrupts+0x80>
ffffffff8010d388:	48 8b 3d 31 8d 00 00 	mov    rdi,QWORD PTR [rip+0x8d31]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010d38f:	4c 89 e2             	mov    rdx,r12
ffffffff8010d392:	48 89 ee             	mov    rsi,rbp
ffffffff8010d395:	b9 01 00 00 00       	mov    ecx,0x1
ffffffff8010d39a:	e8 41 50 00 00       	call   ffffffff801123e0 <MapPhysicalPageToVirtualPage>
ffffffff8010d39f:	48 8d 85 00 10 00 00 	lea    rax,[rbp+0x1000]
ffffffff8010d3a6:	48 89 ef             	mov    rdi,rbp
ffffffff8010d3a9:	48 89 05 90 8c 00 00 	mov    QWORD PTR [rip+0x8c90],rax        # ffffffff80116040 <interrupt_stack_top>
ffffffff8010d3b0:	e8 ab 47 00 00       	call   ffffffff80111b60 <SetInterruptStack>
ffffffff8010d3b5:	31 c0                	xor    eax,eax
ffffffff8010d3b7:	e8 a4 f4 ff ff       	call   ffffffff8010c860 <RegisterExceptionInterrupts>
ffffffff8010d3bc:	48 83 c4 08          	add    rsp,0x8
ffffffff8010d3c0:	31 c0                	xor    eax,eax
ffffffff8010d3c2:	5d                   	pop    rbp
ffffffff8010d3c3:	41 5c                	pop    r12
ffffffff8010d3c5:	e9 b6 fc ff ff       	jmp    ffffffff8010d080 <RegisterInterruptHandlers>
ffffffff8010d3ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010d3d0:	48 c7 c7 b8 54 11 80 	mov    rdi,0xffffffff801154b8
ffffffff8010d3d7:	e8 74 3d 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010d3dc:	fa                   	cli    
ffffffff8010d3dd:	f4                   	hlt    
ffffffff8010d3de:	eb a8                	jmp    ffffffff8010d388 <InitializeInterrupts+0x38>

ffffffff8010d3e0 <RegisterMessageToSendOnInterrupt>:
ffffffff8010d3e0:	80 7e 60 00          	cmp    BYTE PTR [rsi+0x60],0x0
ffffffff8010d3e4:	75 0a                	jne    ffffffff8010d3f0 <RegisterMessageToSendOnInterrupt+0x10>
ffffffff8010d3e6:	c3                   	ret    
ffffffff8010d3e7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010d3f0:	41 54                	push   r12
ffffffff8010d3f2:	83 e7 0f             	and    edi,0xf
ffffffff8010d3f5:	49 89 d4             	mov    r12,rdx
ffffffff8010d3f8:	55                   	push   rbp
ffffffff8010d3f9:	48 89 fd             	mov    rbp,rdi
ffffffff8010d3fc:	bf 28 00 00 00       	mov    edi,0x28
ffffffff8010d401:	53                   	push   rbx
ffffffff8010d402:	48 89 f3             	mov    rbx,rsi
ffffffff8010d405:	e8 56 0e 00 00       	call   ffffffff8010e260 <malloc>
ffffffff8010d40a:	40 88 68 10          	mov    BYTE PTR [rax+0x10],bpl
ffffffff8010d40e:	48 8b 14 ed e0 60 11 80 	mov    rdx,QWORD PTR [rbp*8-0x7fee9f20]
ffffffff8010d416:	48 89 18             	mov    QWORD PTR [rax],rbx
ffffffff8010d419:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff8010d41d:	48 8b 93 98 00 00 00 	mov    rdx,QWORD PTR [rbx+0x98]
ffffffff8010d424:	4c 89 60 08          	mov    QWORD PTR [rax+0x8],r12
ffffffff8010d428:	48 89 04 ed e0 60 11 80 	mov    QWORD PTR [rbp*8-0x7fee9f20],rax
ffffffff8010d430:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
ffffffff8010d434:	48 89 83 98 00 00 00 	mov    QWORD PTR [rbx+0x98],rax
ffffffff8010d43b:	5b                   	pop    rbx
ffffffff8010d43c:	5d                   	pop    rbp
ffffffff8010d43d:	41 5c                	pop    r12
ffffffff8010d43f:	c3                   	ret    

ffffffff8010d440 <UnregisterMessageToSendOnInterrupt>:
ffffffff8010d440:	80 7e 60 00          	cmp    BYTE PTR [rsi+0x60],0x0
ffffffff8010d444:	0f 84 8b 00 00 00    	je     ffffffff8010d4d5 <UnregisterMessageToSendOnInterrupt+0x95>
ffffffff8010d44a:	83 e7 0f             	and    edi,0xf
ffffffff8010d44d:	48 8b 04 fd e0 60 11 80 	mov    rax,QWORD PTR [rdi*8-0x7fee9f20]
ffffffff8010d455:	48 85 c0             	test   rax,rax
ffffffff8010d458:	74 36                	je     ffffffff8010d490 <UnregisterMessageToSendOnInterrupt+0x50>
ffffffff8010d45a:	45 31 c0             	xor    r8d,r8d
ffffffff8010d45d:	eb 09                	jmp    ffffffff8010d468 <UnregisterMessageToSendOnInterrupt+0x28>
ffffffff8010d45f:	90                   	nop
ffffffff8010d460:	49 89 c8             	mov    r8,rcx
ffffffff8010d463:	48 85 c0             	test   rax,rax
ffffffff8010d466:	74 28                	je     ffffffff8010d490 <UnregisterMessageToSendOnInterrupt+0x50>
ffffffff8010d468:	48 89 c1             	mov    rcx,rax
ffffffff8010d46b:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
ffffffff8010d46f:	48 39 31             	cmp    QWORD PTR [rcx],rsi
ffffffff8010d472:	75 ec                	jne    ffffffff8010d460 <UnregisterMessageToSendOnInterrupt+0x20>
ffffffff8010d474:	48 39 51 08          	cmp    QWORD PTR [rcx+0x8],rdx
ffffffff8010d478:	75 e6                	jne    ffffffff8010d460 <UnregisterMessageToSendOnInterrupt+0x20>
ffffffff8010d47a:	4d 85 c0             	test   r8,r8
ffffffff8010d47d:	74 71                	je     ffffffff8010d4f0 <UnregisterMessageToSendOnInterrupt+0xb0>
ffffffff8010d47f:	49 89 40 18          	mov    QWORD PTR [r8+0x18],rax
ffffffff8010d483:	48 85 c0             	test   rax,rax
ffffffff8010d486:	75 e0                	jne    ffffffff8010d468 <UnregisterMessageToSendOnInterrupt+0x28>
ffffffff8010d488:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010d490:	48 8b 86 98 00 00 00 	mov    rax,QWORD PTR [rsi+0x98]
ffffffff8010d497:	48 85 c0             	test   rax,rax
ffffffff8010d49a:	74 39                	je     ffffffff8010d4d5 <UnregisterMessageToSendOnInterrupt+0x95>
ffffffff8010d49c:	45 31 c9             	xor    r9d,r9d
ffffffff8010d49f:	eb 0f                	jmp    ffffffff8010d4b0 <UnregisterMessageToSendOnInterrupt+0x70>
ffffffff8010d4a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010d4a8:	49 89 c9             	mov    r9,rcx
ffffffff8010d4ab:	48 85 c0             	test   rax,rax
ffffffff8010d4ae:	74 25                	je     ffffffff8010d4d5 <UnregisterMessageToSendOnInterrupt+0x95>
ffffffff8010d4b0:	48 89 c1             	mov    rcx,rax
ffffffff8010d4b3:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
ffffffff8010d4b7:	44 0f b6 41 10       	movzx  r8d,BYTE PTR [rcx+0x10]
ffffffff8010d4bc:	49 39 f8             	cmp    r8,rdi
ffffffff8010d4bf:	75 e7                	jne    ffffffff8010d4a8 <UnregisterMessageToSendOnInterrupt+0x68>
ffffffff8010d4c1:	48 39 51 08          	cmp    QWORD PTR [rcx+0x8],rdx
ffffffff8010d4c5:	75 e1                	jne    ffffffff8010d4a8 <UnregisterMessageToSendOnInterrupt+0x68>
ffffffff8010d4c7:	4d 85 c9             	test   r9,r9
ffffffff8010d4ca:	74 14                	je     ffffffff8010d4e0 <UnregisterMessageToSendOnInterrupt+0xa0>
ffffffff8010d4cc:	49 89 41 20          	mov    QWORD PTR [r9+0x20],rax
ffffffff8010d4d0:	48 85 c0             	test   rax,rax
ffffffff8010d4d3:	75 db                	jne    ffffffff8010d4b0 <UnregisterMessageToSendOnInterrupt+0x70>
ffffffff8010d4d5:	c3                   	ret    
ffffffff8010d4d6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010d4e0:	48 89 86 98 00 00 00 	mov    QWORD PTR [rsi+0x98],rax
ffffffff8010d4e7:	eb c2                	jmp    ffffffff8010d4ab <UnregisterMessageToSendOnInterrupt+0x6b>
ffffffff8010d4e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010d4f0:	48 89 04 fd e0 60 11 80 	mov    QWORD PTR [rdi*8-0x7fee9f20],rax
ffffffff8010d4f8:	e9 66 ff ff ff       	jmp    ffffffff8010d463 <UnregisterMessageToSendOnInterrupt+0x23>
ffffffff8010d4fd:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010d500 <UnregisterAllMessagesToForOnInterruptForProcess>:
ffffffff8010d500:	53                   	push   rbx
ffffffff8010d501:	48 89 fb             	mov    rbx,rdi
ffffffff8010d504:	48 8b bf 98 00 00 00 	mov    rdi,QWORD PTR [rdi+0x98]
ffffffff8010d50b:	48 85 ff             	test   rdi,rdi
ffffffff8010d50e:	74 42                	je     ffffffff8010d552 <UnregisterAllMessagesToForOnInterruptForProcess+0x52>
ffffffff8010d510:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
ffffffff8010d514:	48 89 83 98 00 00 00 	mov    QWORD PTR [rbx+0x98],rax
ffffffff8010d51b:	0f b6 57 10          	movzx  edx,BYTE PTR [rdi+0x10]
ffffffff8010d51f:	83 e2 0f             	and    edx,0xf
ffffffff8010d522:	48 8b 04 d5 e0 60 11 80 	mov    rax,QWORD PTR [rdx*8-0x7fee9f20]
ffffffff8010d52a:	48 85 c0             	test   rax,rax
ffffffff8010d52d:	74 12                	je     ffffffff8010d541 <UnregisterAllMessagesToForOnInterruptForProcess+0x41>
ffffffff8010d52f:	90                   	nop
ffffffff8010d530:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
ffffffff8010d534:	48 89 04 d5 e0 60 11 80 	mov    QWORD PTR [rdx*8-0x7fee9f20],rax
ffffffff8010d53c:	48 85 c0             	test   rax,rax
ffffffff8010d53f:	75 ef                	jne    ffffffff8010d530 <UnregisterAllMessagesToForOnInterruptForProcess+0x30>
ffffffff8010d541:	e8 8a 0e 00 00       	call   ffffffff8010e3d0 <free>
ffffffff8010d546:	48 8b bb 98 00 00 00 	mov    rdi,QWORD PTR [rbx+0x98]
ffffffff8010d54d:	48 85 ff             	test   rdi,rdi
ffffffff8010d550:	75 be                	jne    ffffffff8010d510 <UnregisterAllMessagesToForOnInterruptForProcess+0x10>
ffffffff8010d552:	5b                   	pop    rbx
ffffffff8010d553:	c3                   	ret    
ffffffff8010d554:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010d55f:	90                   	nop

ffffffff8010d560 <CommonHardwareInterruptHandler>:
ffffffff8010d560:	55                   	push   rbp
ffffffff8010d561:	89 fd                	mov    ebp,edi
ffffffff8010d563:	53                   	push   rbx
ffffffff8010d564:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010d568:	85 ff                	test   edi,edi
ffffffff8010d56a:	74 74                	je     ffffffff8010d5e0 <CommonHardwareInterruptHandler+0x80>
ffffffff8010d56c:	48 63 c7             	movsxd rax,edi
ffffffff8010d56f:	48 8b 1c c5 e0 60 11 80 	mov    rbx,QWORD PTR [rax*8-0x7fee9f20]
ffffffff8010d577:	48 85 db             	test   rbx,rbx
ffffffff8010d57a:	74 2b                	je     ffffffff8010d5a7 <CommonHardwareInterruptHandler+0x47>
ffffffff8010d57c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010d580:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010d584:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
ffffffff8010d588:	31 d2                	xor    edx,edx
ffffffff8010d58a:	45 31 c9             	xor    r9d,r9d
ffffffff8010d58d:	6a 00                	push   0x0
ffffffff8010d58f:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
ffffffff8010d592:	45 31 c0             	xor    r8d,r8d
ffffffff8010d595:	31 c9                	xor    ecx,ecx
ffffffff8010d597:	e8 84 14 00 00       	call   ffffffff8010ea20 <SendKernelMessageToProcess>
ffffffff8010d59c:	48 8b 5b 18          	mov    rbx,QWORD PTR [rbx+0x18]
ffffffff8010d5a0:	58                   	pop    rax
ffffffff8010d5a1:	5a                   	pop    rdx
ffffffff8010d5a2:	48 85 db             	test   rbx,rbx
ffffffff8010d5a5:	75 d9                	jne    ffffffff8010d580 <CommonHardwareInterruptHandler+0x20>
ffffffff8010d5a7:	83 fd 07             	cmp    ebp,0x7
ffffffff8010d5aa:	7e 0f                	jle    ffffffff8010d5bb <CommonHardwareInterruptHandler+0x5b>
ffffffff8010d5ac:	be 20 00 00 00       	mov    esi,0x20
ffffffff8010d5b1:	bf a0 00 00 00       	mov    edi,0xa0
ffffffff8010d5b6:	e8 25 07 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d5bb:	be 20 00 00 00       	mov    esi,0x20
ffffffff8010d5c0:	bf 20 00 00 00       	mov    edi,0x20
ffffffff8010d5c5:	e8 16 07 00 00       	call   ffffffff8010dce0 <outportb>
ffffffff8010d5ca:	48 83 c4 08          	add    rsp,0x8
ffffffff8010d5ce:	31 c0                	xor    eax,eax
ffffffff8010d5d0:	5b                   	pop    rbx
ffffffff8010d5d1:	5d                   	pop    rbp
ffffffff8010d5d2:	e9 89 29 00 00       	jmp    ffffffff8010ff60 <ScheduleThreadIfWeAreHalted>
ffffffff8010d5d7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010d5e0:	31 c0                	xor    eax,eax
ffffffff8010d5e2:	e8 79 44 00 00       	call   ffffffff80111a60 <TimerHandler>
ffffffff8010d5e7:	48 8b 1d f2 8a 00 00 	mov    rbx,QWORD PTR [rip+0x8af2]        # ffffffff801160e0 <messages_to_fire_on_interrupt>
ffffffff8010d5ee:	48 85 db             	test   rbx,rbx
ffffffff8010d5f1:	75 8d                	jne    ffffffff8010d580 <CommonHardwareInterruptHandler+0x20>
ffffffff8010d5f3:	eb c6                	jmp    ffffffff8010d5bb <CommonHardwareInterruptHandler+0x5b>
ffffffff8010d5f5:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010d5ff:	90                   	nop

ffffffff8010d600 <memcpy>:
ffffffff8010d600:	48 85 d2             	test   rdx,rdx
ffffffff8010d603:	0f 84 d7 00 00 00    	je     ffffffff8010d6e0 <memcpy+0xe0>
ffffffff8010d609:	48 89 f8             	mov    rax,rdi
ffffffff8010d60c:	48 09 f0             	or     rax,rsi
ffffffff8010d60f:	a8 07                	test   al,0x7
ffffffff8010d611:	48 8d 47 07          	lea    rax,[rdi+0x7]
ffffffff8010d615:	0f 94 c1             	sete   cl
ffffffff8010d618:	48 29 f0             	sub    rax,rsi
ffffffff8010d61b:	48 83 f8 0e          	cmp    rax,0xe
ffffffff8010d61f:	0f 97 c0             	seta   al
ffffffff8010d622:	84 c1                	test   cl,al
ffffffff8010d624:	0f 84 9e 00 00 00    	je     ffffffff8010d6c8 <memcpy+0xc8>
ffffffff8010d62a:	48 8d 42 ff          	lea    rax,[rdx-0x1]
ffffffff8010d62e:	48 83 f8 06          	cmp    rax,0x6
ffffffff8010d632:	0f 86 90 00 00 00    	jbe    ffffffff8010d6c8 <memcpy+0xc8>
ffffffff8010d638:	49 89 d0             	mov    r8,rdx
ffffffff8010d63b:	31 c0                	xor    eax,eax
ffffffff8010d63d:	49 83 e0 f8          	and    r8,0xfffffffffffffff8
ffffffff8010d641:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010d648:	48 8b 0c 06          	mov    rcx,QWORD PTR [rsi+rax*1]
ffffffff8010d64c:	48 89 0c 07          	mov    QWORD PTR [rdi+rax*1],rcx
ffffffff8010d650:	48 83 c0 08          	add    rax,0x8
ffffffff8010d654:	4c 39 c0             	cmp    rax,r8
ffffffff8010d657:	75 ef                	jne    ffffffff8010d648 <memcpy+0x48>
ffffffff8010d659:	48 89 d1             	mov    rcx,rdx
ffffffff8010d65c:	48 89 d0             	mov    rax,rdx
ffffffff8010d65f:	48 83 e1 f8          	and    rcx,0xfffffffffffffff8
ffffffff8010d663:	48 01 cf             	add    rdi,rcx
ffffffff8010d666:	48 01 ce             	add    rsi,rcx
ffffffff8010d669:	48 29 c8             	sub    rax,rcx
ffffffff8010d66c:	48 39 ca             	cmp    rdx,rcx
ffffffff8010d66f:	74 6f                	je     ffffffff8010d6e0 <memcpy+0xe0>
ffffffff8010d671:	0f b6 16             	movzx  edx,BYTE PTR [rsi]
ffffffff8010d674:	88 17                	mov    BYTE PTR [rdi],dl
ffffffff8010d676:	48 83 f8 01          	cmp    rax,0x1
ffffffff8010d67a:	74 64                	je     ffffffff8010d6e0 <memcpy+0xe0>
ffffffff8010d67c:	0f b6 56 01          	movzx  edx,BYTE PTR [rsi+0x1]
ffffffff8010d680:	88 57 01             	mov    BYTE PTR [rdi+0x1],dl
ffffffff8010d683:	48 83 f8 02          	cmp    rax,0x2
ffffffff8010d687:	74 57                	je     ffffffff8010d6e0 <memcpy+0xe0>
ffffffff8010d689:	0f b6 56 02          	movzx  edx,BYTE PTR [rsi+0x2]
ffffffff8010d68d:	88 57 02             	mov    BYTE PTR [rdi+0x2],dl
ffffffff8010d690:	48 83 f8 03          	cmp    rax,0x3
ffffffff8010d694:	74 4a                	je     ffffffff8010d6e0 <memcpy+0xe0>
ffffffff8010d696:	0f b6 56 03          	movzx  edx,BYTE PTR [rsi+0x3]
ffffffff8010d69a:	88 57 03             	mov    BYTE PTR [rdi+0x3],dl
ffffffff8010d69d:	48 83 f8 04          	cmp    rax,0x4
ffffffff8010d6a1:	74 3d                	je     ffffffff8010d6e0 <memcpy+0xe0>
ffffffff8010d6a3:	0f b6 56 04          	movzx  edx,BYTE PTR [rsi+0x4]
ffffffff8010d6a7:	88 57 04             	mov    BYTE PTR [rdi+0x4],dl
ffffffff8010d6aa:	48 83 f8 05          	cmp    rax,0x5
ffffffff8010d6ae:	74 30                	je     ffffffff8010d6e0 <memcpy+0xe0>
ffffffff8010d6b0:	0f b6 56 05          	movzx  edx,BYTE PTR [rsi+0x5]
ffffffff8010d6b4:	88 57 05             	mov    BYTE PTR [rdi+0x5],dl
ffffffff8010d6b7:	48 83 f8 06          	cmp    rax,0x6
ffffffff8010d6bb:	74 23                	je     ffffffff8010d6e0 <memcpy+0xe0>
ffffffff8010d6bd:	0f b6 46 06          	movzx  eax,BYTE PTR [rsi+0x6]
ffffffff8010d6c1:	88 47 06             	mov    BYTE PTR [rdi+0x6],al
ffffffff8010d6c4:	c3                   	ret    
ffffffff8010d6c5:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010d6c8:	31 c0                	xor    eax,eax
ffffffff8010d6ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010d6d0:	0f b6 0c 06          	movzx  ecx,BYTE PTR [rsi+rax*1]
ffffffff8010d6d4:	88 0c 07             	mov    BYTE PTR [rdi+rax*1],cl
ffffffff8010d6d7:	48 83 c0 01          	add    rax,0x1
ffffffff8010d6db:	48 39 c2             	cmp    rdx,rax
ffffffff8010d6de:	75 f0                	jne    ffffffff8010d6d0 <memcpy+0xd0>
ffffffff8010d6e0:	c3                   	ret    
ffffffff8010d6e1:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010d6ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010d6f0 <memset>:
ffffffff8010d6f0:	48 85 d2             	test   rdx,rdx
ffffffff8010d6f3:	0f 84 25 02 00 00    	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d6f9:	48 89 f9             	mov    rcx,rdi
ffffffff8010d6fc:	48 f7 df             	neg    rdi
ffffffff8010d6ff:	4c 8d 52 ff          	lea    r10,[rdx-0x1]
ffffffff8010d703:	41 bb 0b 00 00 00    	mov    r11d,0xb
ffffffff8010d709:	83 e7 07             	and    edi,0x7
ffffffff8010d70c:	4d 89 d0             	mov    r8,r10
ffffffff8010d70f:	4c 8d 4f 07          	lea    r9,[rdi+0x7]
ffffffff8010d713:	49 83 f9 0b          	cmp    r9,0xb
ffffffff8010d717:	4d 0f 42 cb          	cmovb  r9,r11
ffffffff8010d71b:	4d 39 ca             	cmp    r10,r9
ffffffff8010d71e:	0f 82 d4 01 00 00    	jb     ffffffff8010d8f8 <memset+0x208>
ffffffff8010d724:	53                   	push   rbx
ffffffff8010d725:	89 f0                	mov    eax,esi
ffffffff8010d727:	48 85 ff             	test   rdi,rdi
ffffffff8010d72a:	0f 84 f0 01 00 00    	je     ffffffff8010d920 <memset+0x230>
ffffffff8010d730:	40 88 31             	mov    BYTE PTR [rcx],sil
ffffffff8010d733:	4c 8d 49 01          	lea    r9,[rcx+0x1]
ffffffff8010d737:	48 83 ff 01          	cmp    rdi,0x1
ffffffff8010d73b:	74 66                	je     ffffffff8010d7a3 <memset+0xb3>
ffffffff8010d73d:	40 88 71 01          	mov    BYTE PTR [rcx+0x1],sil
ffffffff8010d741:	4c 8d 49 02          	lea    r9,[rcx+0x2]
ffffffff8010d745:	4c 8d 42 fe          	lea    r8,[rdx-0x2]
ffffffff8010d749:	48 83 ff 02          	cmp    rdi,0x2
ffffffff8010d74d:	74 54                	je     ffffffff8010d7a3 <memset+0xb3>
ffffffff8010d74f:	40 88 71 02          	mov    BYTE PTR [rcx+0x2],sil
ffffffff8010d753:	4c 8d 49 03          	lea    r9,[rcx+0x3]
ffffffff8010d757:	4c 8d 42 fd          	lea    r8,[rdx-0x3]
ffffffff8010d75b:	48 83 ff 03          	cmp    rdi,0x3
ffffffff8010d75f:	74 42                	je     ffffffff8010d7a3 <memset+0xb3>
ffffffff8010d761:	40 88 71 03          	mov    BYTE PTR [rcx+0x3],sil
ffffffff8010d765:	4c 8d 49 04          	lea    r9,[rcx+0x4]
ffffffff8010d769:	4c 8d 42 fc          	lea    r8,[rdx-0x4]
ffffffff8010d76d:	48 83 ff 04          	cmp    rdi,0x4
ffffffff8010d771:	74 30                	je     ffffffff8010d7a3 <memset+0xb3>
ffffffff8010d773:	40 88 71 04          	mov    BYTE PTR [rcx+0x4],sil
ffffffff8010d777:	4c 8d 49 05          	lea    r9,[rcx+0x5]
ffffffff8010d77b:	4c 8d 42 fb          	lea    r8,[rdx-0x5]
ffffffff8010d77f:	48 83 ff 05          	cmp    rdi,0x5
ffffffff8010d783:	74 1e                	je     ffffffff8010d7a3 <memset+0xb3>
ffffffff8010d785:	40 88 71 05          	mov    BYTE PTR [rcx+0x5],sil
ffffffff8010d789:	4c 8d 49 06          	lea    r9,[rcx+0x6]
ffffffff8010d78d:	4c 8d 42 fa          	lea    r8,[rdx-0x6]
ffffffff8010d791:	48 83 ff 07          	cmp    rdi,0x7
ffffffff8010d795:	75 0c                	jne    ffffffff8010d7a3 <memset+0xb3>
ffffffff8010d797:	40 88 71 06          	mov    BYTE PTR [rcx+0x6],sil
ffffffff8010d79b:	4c 8d 49 07          	lea    r9,[rcx+0x7]
ffffffff8010d79f:	4c 8d 42 f9          	lea    r8,[rdx-0x7]
ffffffff8010d7a3:	48 29 fa             	sub    rdx,rdi
ffffffff8010d7a6:	44 0f b6 d8          	movzx  r11d,al
ffffffff8010d7aa:	48 01 cf             	add    rdi,rcx
ffffffff8010d7ad:	49 89 d2             	mov    r10,rdx
ffffffff8010d7b0:	31 d2                	xor    edx,edx
ffffffff8010d7b2:	4c 89 db             	mov    rbx,r11
ffffffff8010d7b5:	88 c2                	mov    dl,al
ffffffff8010d7b7:	48 c1 e3 10          	shl    rbx,0x10
ffffffff8010d7bb:	88 c6                	mov    dh,al
ffffffff8010d7bd:	48 89 d0             	mov    rax,rdx
ffffffff8010d7c0:	4c 89 da             	mov    rdx,r11
ffffffff8010d7c3:	48 25 ff ff 00 ff    	and    rax,0xffffffffff00ffff
ffffffff8010d7c9:	48 c1 e2 18          	shl    rdx,0x18
ffffffff8010d7cd:	48 09 d8             	or     rax,rbx
ffffffff8010d7d0:	48 bb ff ff ff 00 ff ff ff ff 	movabs rbx,0xffffffff00ffffff
ffffffff8010d7da:	48 21 d8             	and    rax,rbx
ffffffff8010d7dd:	48 bb ff ff ff ff 00 ff ff ff 	movabs rbx,0xffffff00ffffffff
ffffffff8010d7e7:	48 09 d0             	or     rax,rdx
ffffffff8010d7ea:	4c 89 da             	mov    rdx,r11
ffffffff8010d7ed:	48 c1 e2 20          	shl    rdx,0x20
ffffffff8010d7f1:	48 21 d8             	and    rax,rbx
ffffffff8010d7f4:	48 bb ff ff ff ff ff 00 ff ff 	movabs rbx,0xffff00ffffffffff
ffffffff8010d7fe:	48 09 d0             	or     rax,rdx
ffffffff8010d801:	4c 89 da             	mov    rdx,r11
ffffffff8010d804:	48 c1 e2 28          	shl    rdx,0x28
ffffffff8010d808:	48 21 d8             	and    rax,rbx
ffffffff8010d80b:	48 bb ff ff ff ff ff ff 00 ff 	movabs rbx,0xff00ffffffffffff
ffffffff8010d815:	48 09 d0             	or     rax,rdx
ffffffff8010d818:	4c 89 da             	mov    rdx,r11
ffffffff8010d81b:	49 c1 e3 38          	shl    r11,0x38
ffffffff8010d81f:	48 c1 e2 30          	shl    rdx,0x30
ffffffff8010d823:	48 21 d8             	and    rax,rbx
ffffffff8010d826:	48 09 d0             	or     rax,rdx
ffffffff8010d829:	48 ba ff ff ff ff ff ff ff 00 	movabs rdx,0xffffffffffffff
ffffffff8010d833:	48 21 d0             	and    rax,rdx
ffffffff8010d836:	4c 89 d2             	mov    rdx,r10
ffffffff8010d839:	48 83 e2 f8          	and    rdx,0xfffffffffffffff8
ffffffff8010d83d:	4c 09 d8             	or     rax,r11
ffffffff8010d840:	48 01 fa             	add    rdx,rdi
ffffffff8010d843:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010d848:	48 89 07             	mov    QWORD PTR [rdi],rax
ffffffff8010d84b:	48 83 c7 08          	add    rdi,0x8
ffffffff8010d84f:	48 39 d7             	cmp    rdi,rdx
ffffffff8010d852:	75 f4                	jne    ffffffff8010d848 <memset+0x158>
ffffffff8010d854:	4c 89 d0             	mov    rax,r10
ffffffff8010d857:	4c 89 c2             	mov    rdx,r8
ffffffff8010d85a:	48 83 e0 f8          	and    rax,0xfffffffffffffff8
ffffffff8010d85e:	49 8d 0c 01          	lea    rcx,[r9+rax*1]
ffffffff8010d862:	48 29 c2             	sub    rdx,rax
ffffffff8010d865:	49 39 c2             	cmp    r10,rax
ffffffff8010d868:	0f 84 88 00 00 00    	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d86e:	4c 8d 52 ff          	lea    r10,[rdx-0x1]
ffffffff8010d872:	40 88 31             	mov    BYTE PTR [rcx],sil
ffffffff8010d875:	4d 85 d2             	test   r10,r10
ffffffff8010d878:	74 7c                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d87a:	40 88 71 01          	mov    BYTE PTR [rcx+0x1],sil
ffffffff8010d87e:	48 83 fa 02          	cmp    rdx,0x2
ffffffff8010d882:	74 72                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d884:	40 88 71 02          	mov    BYTE PTR [rcx+0x2],sil
ffffffff8010d888:	48 83 fa 03          	cmp    rdx,0x3
ffffffff8010d88c:	74 68                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d88e:	40 88 71 03          	mov    BYTE PTR [rcx+0x3],sil
ffffffff8010d892:	48 83 fa 04          	cmp    rdx,0x4
ffffffff8010d896:	74 5e                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d898:	40 88 71 04          	mov    BYTE PTR [rcx+0x4],sil
ffffffff8010d89c:	48 83 fa 05          	cmp    rdx,0x5
ffffffff8010d8a0:	74 54                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d8a2:	40 88 71 05          	mov    BYTE PTR [rcx+0x5],sil
ffffffff8010d8a6:	48 83 fa 06          	cmp    rdx,0x6
ffffffff8010d8aa:	74 4a                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d8ac:	40 88 71 06          	mov    BYTE PTR [rcx+0x6],sil
ffffffff8010d8b0:	48 83 fa 07          	cmp    rdx,0x7
ffffffff8010d8b4:	74 40                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d8b6:	40 88 71 07          	mov    BYTE PTR [rcx+0x7],sil
ffffffff8010d8ba:	48 83 fa 08          	cmp    rdx,0x8
ffffffff8010d8be:	74 36                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d8c0:	40 88 71 08          	mov    BYTE PTR [rcx+0x8],sil
ffffffff8010d8c4:	48 83 fa 09          	cmp    rdx,0x9
ffffffff8010d8c8:	74 2c                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d8ca:	40 88 71 09          	mov    BYTE PTR [rcx+0x9],sil
ffffffff8010d8ce:	48 83 fa 0a          	cmp    rdx,0xa
ffffffff8010d8d2:	74 22                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d8d4:	40 88 71 0a          	mov    BYTE PTR [rcx+0xa],sil
ffffffff8010d8d8:	48 83 fa 0b          	cmp    rdx,0xb
ffffffff8010d8dc:	74 18                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d8de:	40 88 71 0b          	mov    BYTE PTR [rcx+0xb],sil
ffffffff8010d8e2:	48 83 fa 0c          	cmp    rdx,0xc
ffffffff8010d8e6:	74 0e                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d8e8:	40 88 71 0c          	mov    BYTE PTR [rcx+0xc],sil
ffffffff8010d8ec:	48 83 fa 0d          	cmp    rdx,0xd
ffffffff8010d8f0:	74 04                	je     ffffffff8010d8f6 <memset+0x206>
ffffffff8010d8f2:	40 88 71 0d          	mov    BYTE PTR [rcx+0xd],sil
ffffffff8010d8f6:	5b                   	pop    rbx
ffffffff8010d8f7:	c3                   	ret    
ffffffff8010d8f8:	40 88 31             	mov    BYTE PTR [rcx],sil
ffffffff8010d8fb:	4d 85 d2             	test   r10,r10
ffffffff8010d8fe:	74 1e                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d900:	40 88 71 01          	mov    BYTE PTR [rcx+0x1],sil
ffffffff8010d904:	48 83 fa 02          	cmp    rdx,0x2
ffffffff8010d908:	74 14                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d90a:	40 88 71 02          	mov    BYTE PTR [rcx+0x2],sil
ffffffff8010d90e:	48 83 fa 03          	cmp    rdx,0x3
ffffffff8010d912:	74 0a                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d914:	40 88 71 03          	mov    BYTE PTR [rcx+0x3],sil
ffffffff8010d918:	48 83 fa 04          	cmp    rdx,0x4
ffffffff8010d91c:	75 0d                	jne    ffffffff8010d92b <memset+0x23b>
ffffffff8010d91e:	c3                   	ret    
ffffffff8010d91f:	90                   	nop
ffffffff8010d920:	49 89 d0             	mov    r8,rdx
ffffffff8010d923:	49 89 c9             	mov    r9,rcx
ffffffff8010d926:	e9 78 fe ff ff       	jmp    ffffffff8010d7a3 <memset+0xb3>
ffffffff8010d92b:	40 88 71 04          	mov    BYTE PTR [rcx+0x4],sil
ffffffff8010d92f:	48 83 fa 05          	cmp    rdx,0x5
ffffffff8010d933:	74 e9                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d935:	40 88 71 05          	mov    BYTE PTR [rcx+0x5],sil
ffffffff8010d939:	48 83 fa 06          	cmp    rdx,0x6
ffffffff8010d93d:	74 df                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d93f:	40 88 71 06          	mov    BYTE PTR [rcx+0x6],sil
ffffffff8010d943:	48 83 fa 07          	cmp    rdx,0x7
ffffffff8010d947:	74 d5                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d949:	40 88 71 07          	mov    BYTE PTR [rcx+0x7],sil
ffffffff8010d94d:	48 83 fa 08          	cmp    rdx,0x8
ffffffff8010d951:	74 cb                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d953:	40 88 71 08          	mov    BYTE PTR [rcx+0x8],sil
ffffffff8010d957:	48 83 fa 09          	cmp    rdx,0x9
ffffffff8010d95b:	74 c1                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d95d:	40 88 71 09          	mov    BYTE PTR [rcx+0x9],sil
ffffffff8010d961:	48 83 fa 0a          	cmp    rdx,0xa
ffffffff8010d965:	74 b7                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d967:	40 88 71 0a          	mov    BYTE PTR [rcx+0xa],sil
ffffffff8010d96b:	48 83 fa 0b          	cmp    rdx,0xb
ffffffff8010d96f:	74 ad                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d971:	40 88 71 0b          	mov    BYTE PTR [rcx+0xb],sil
ffffffff8010d975:	48 83 fa 0c          	cmp    rdx,0xc
ffffffff8010d979:	74 a3                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d97b:	40 88 71 0c          	mov    BYTE PTR [rcx+0xc],sil
ffffffff8010d97f:	48 83 fa 0d          	cmp    rdx,0xd
ffffffff8010d983:	74 99                	je     ffffffff8010d91e <memset+0x22e>
ffffffff8010d985:	40 88 71 0d          	mov    BYTE PTR [rcx+0xd],sil
ffffffff8010d989:	c3                   	ret    
ffffffff8010d98a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff8010d990 <CopyString>:
ffffffff8010d990:	48 8d 46 ff          	lea    rax,[rsi-0x1]
ffffffff8010d994:	48 39 d0             	cmp    rax,rdx
ffffffff8010d997:	48 0f 46 d0          	cmovbe rdx,rax
ffffffff8010d99b:	48 85 d2             	test   rdx,rdx
ffffffff8010d99e:	0f 84 c6 00 00 00    	je     ffffffff8010da6a <CopyString+0xda>
ffffffff8010d9a4:	48 89 f8             	mov    rax,rdi
ffffffff8010d9a7:	48 09 c8             	or     rax,rcx
ffffffff8010d9aa:	a8 07                	test   al,0x7
ffffffff8010d9ac:	48 8d 41 07          	lea    rax,[rcx+0x7]
ffffffff8010d9b0:	41 0f 94 c0          	sete   r8b
ffffffff8010d9b4:	48 29 f8             	sub    rax,rdi
ffffffff8010d9b7:	48 83 f8 0e          	cmp    rax,0xe
ffffffff8010d9bb:	0f 97 c0             	seta   al
ffffffff8010d9be:	41 84 c0             	test   r8b,al
ffffffff8010d9c1:	0f 84 31 02 00 00    	je     ffffffff8010dbf8 <CopyString+0x268>
ffffffff8010d9c7:	48 8d 42 ff          	lea    rax,[rdx-0x1]
ffffffff8010d9cb:	48 83 f8 06          	cmp    rax,0x6
ffffffff8010d9cf:	0f 86 23 02 00 00    	jbe    ffffffff8010dbf8 <CopyString+0x268>
ffffffff8010d9d5:	49 89 d1             	mov    r9,rdx
ffffffff8010d9d8:	31 c0                	xor    eax,eax
ffffffff8010d9da:	49 83 e1 f8          	and    r9,0xfffffffffffffff8
ffffffff8010d9de:	66 90                	xchg   ax,ax
ffffffff8010d9e0:	4c 8b 04 07          	mov    r8,QWORD PTR [rdi+rax*1]
ffffffff8010d9e4:	4c 89 04 01          	mov    QWORD PTR [rcx+rax*1],r8
ffffffff8010d9e8:	48 83 c0 08          	add    rax,0x8
ffffffff8010d9ec:	4c 39 c8             	cmp    rax,r9
ffffffff8010d9ef:	75 ef                	jne    ffffffff8010d9e0 <CopyString+0x50>
ffffffff8010d9f1:	49 89 d1             	mov    r9,rdx
ffffffff8010d9f4:	49 89 d0             	mov    r8,rdx
ffffffff8010d9f7:	49 83 e1 f8          	and    r9,0xfffffffffffffff8
ffffffff8010d9fb:	4c 01 cf             	add    rdi,r9
ffffffff8010d9fe:	4a 8d 04 09          	lea    rax,[rcx+r9*1]
ffffffff8010da02:	4d 29 c8             	sub    r8,r9
ffffffff8010da05:	4c 39 ca             	cmp    rdx,r9
ffffffff8010da08:	74 60                	je     ffffffff8010da6a <CopyString+0xda>
ffffffff8010da0a:	44 0f b6 0f          	movzx  r9d,BYTE PTR [rdi]
ffffffff8010da0e:	44 88 08             	mov    BYTE PTR [rax],r9b
ffffffff8010da11:	49 83 f8 01          	cmp    r8,0x1
ffffffff8010da15:	74 53                	je     ffffffff8010da6a <CopyString+0xda>
ffffffff8010da17:	44 0f b6 4f 01       	movzx  r9d,BYTE PTR [rdi+0x1]
ffffffff8010da1c:	44 88 48 01          	mov    BYTE PTR [rax+0x1],r9b
ffffffff8010da20:	49 83 f8 02          	cmp    r8,0x2
ffffffff8010da24:	74 44                	je     ffffffff8010da6a <CopyString+0xda>
ffffffff8010da26:	44 0f b6 4f 02       	movzx  r9d,BYTE PTR [rdi+0x2]
ffffffff8010da2b:	44 88 48 02          	mov    BYTE PTR [rax+0x2],r9b
ffffffff8010da2f:	49 83 f8 03          	cmp    r8,0x3
ffffffff8010da33:	74 35                	je     ffffffff8010da6a <CopyString+0xda>
ffffffff8010da35:	44 0f b6 4f 03       	movzx  r9d,BYTE PTR [rdi+0x3]
ffffffff8010da3a:	44 88 48 03          	mov    BYTE PTR [rax+0x3],r9b
ffffffff8010da3e:	49 83 f8 04          	cmp    r8,0x4
ffffffff8010da42:	74 26                	je     ffffffff8010da6a <CopyString+0xda>
ffffffff8010da44:	44 0f b6 4f 04       	movzx  r9d,BYTE PTR [rdi+0x4]
ffffffff8010da49:	44 88 48 04          	mov    BYTE PTR [rax+0x4],r9b
ffffffff8010da4d:	49 83 f8 05          	cmp    r8,0x5
ffffffff8010da51:	74 17                	je     ffffffff8010da6a <CopyString+0xda>
ffffffff8010da53:	44 0f b6 4f 05       	movzx  r9d,BYTE PTR [rdi+0x5]
ffffffff8010da58:	44 88 48 05          	mov    BYTE PTR [rax+0x5],r9b
ffffffff8010da5c:	49 83 f8 06          	cmp    r8,0x6
ffffffff8010da60:	74 08                	je     ffffffff8010da6a <CopyString+0xda>
ffffffff8010da62:	0f b6 7f 06          	movzx  edi,BYTE PTR [rdi+0x6]
ffffffff8010da66:	40 88 78 06          	mov    BYTE PTR [rax+0x6],dil
ffffffff8010da6a:	48 8d 04 11          	lea    rax,[rcx+rdx*1]
ffffffff8010da6e:	48 29 d6             	sub    rsi,rdx
ffffffff8010da71:	0f 84 7d 01 00 00    	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010da77:	48 89 c7             	mov    rdi,rax
ffffffff8010da7a:	41 bb 0b 00 00 00    	mov    r11d,0xb
ffffffff8010da80:	4c 8d 56 ff          	lea    r10,[rsi-0x1]
ffffffff8010da84:	48 f7 df             	neg    rdi
ffffffff8010da87:	4d 89 d0             	mov    r8,r10
ffffffff8010da8a:	83 e7 07             	and    edi,0x7
ffffffff8010da8d:	4c 8d 4f 07          	lea    r9,[rdi+0x7]
ffffffff8010da91:	49 83 f9 0b          	cmp    r9,0xb
ffffffff8010da95:	4d 0f 42 cb          	cmovb  r9,r11
ffffffff8010da99:	4d 39 ca             	cmp    r10,r9
ffffffff8010da9c:	0f 82 ce 00 00 00    	jb     ffffffff8010db70 <CopyString+0x1e0>
ffffffff8010daa2:	48 85 ff             	test   rdi,rdi
ffffffff8010daa5:	0f 84 75 01 00 00    	je     ffffffff8010dc20 <CopyString+0x290>
ffffffff8010daab:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffffffff8010daae:	4c 8d 48 01          	lea    r9,[rax+0x1]
ffffffff8010dab2:	48 83 ff 01          	cmp    rdi,0x1
ffffffff8010dab6:	74 66                	je     ffffffff8010db1e <CopyString+0x18e>
ffffffff8010dab8:	c6 40 01 00          	mov    BYTE PTR [rax+0x1],0x0
ffffffff8010dabc:	4c 8d 48 02          	lea    r9,[rax+0x2]
ffffffff8010dac0:	4c 8d 46 fe          	lea    r8,[rsi-0x2]
ffffffff8010dac4:	48 83 ff 02          	cmp    rdi,0x2
ffffffff8010dac8:	74 54                	je     ffffffff8010db1e <CopyString+0x18e>
ffffffff8010daca:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
ffffffff8010dace:	4c 8d 48 03          	lea    r9,[rax+0x3]
ffffffff8010dad2:	4c 8d 46 fd          	lea    r8,[rsi-0x3]
ffffffff8010dad6:	48 83 ff 03          	cmp    rdi,0x3
ffffffff8010dada:	74 42                	je     ffffffff8010db1e <CopyString+0x18e>
ffffffff8010dadc:	c6 40 03 00          	mov    BYTE PTR [rax+0x3],0x0
ffffffff8010dae0:	4c 8d 48 04          	lea    r9,[rax+0x4]
ffffffff8010dae4:	4c 8d 46 fc          	lea    r8,[rsi-0x4]
ffffffff8010dae8:	48 83 ff 04          	cmp    rdi,0x4
ffffffff8010daec:	74 30                	je     ffffffff8010db1e <CopyString+0x18e>
ffffffff8010daee:	c6 40 04 00          	mov    BYTE PTR [rax+0x4],0x0
ffffffff8010daf2:	4c 8d 48 05          	lea    r9,[rax+0x5]
ffffffff8010daf6:	4c 8d 46 fb          	lea    r8,[rsi-0x5]
ffffffff8010dafa:	48 83 ff 05          	cmp    rdi,0x5
ffffffff8010dafe:	74 1e                	je     ffffffff8010db1e <CopyString+0x18e>
ffffffff8010db00:	c6 40 05 00          	mov    BYTE PTR [rax+0x5],0x0
ffffffff8010db04:	4c 8d 48 06          	lea    r9,[rax+0x6]
ffffffff8010db08:	4c 8d 46 fa          	lea    r8,[rsi-0x6]
ffffffff8010db0c:	48 83 ff 07          	cmp    rdi,0x7
ffffffff8010db10:	75 0c                	jne    ffffffff8010db1e <CopyString+0x18e>
ffffffff8010db12:	c6 40 06 00          	mov    BYTE PTR [rax+0x6],0x0
ffffffff8010db16:	4c 8d 48 07          	lea    r9,[rax+0x7]
ffffffff8010db1a:	4c 8d 46 f9          	lea    r8,[rsi-0x7]
ffffffff8010db1e:	48 29 fe             	sub    rsi,rdi
ffffffff8010db21:	48 01 fa             	add    rdx,rdi
ffffffff8010db24:	31 c0                	xor    eax,eax
ffffffff8010db26:	49 89 f2             	mov    r10,rsi
ffffffff8010db29:	48 8d 76 f8          	lea    rsi,[rsi-0x8]
ffffffff8010db2d:	48 01 d1             	add    rcx,rdx
ffffffff8010db30:	48 c1 ee 03          	shr    rsi,0x3
ffffffff8010db34:	48 83 c6 01          	add    rsi,0x1
ffffffff8010db38:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010db40:	48 c7 04 c1 00 00 00 00 	mov    QWORD PTR [rcx+rax*8],0x0
ffffffff8010db48:	48 83 c0 01          	add    rax,0x1
ffffffff8010db4c:	48 39 c6             	cmp    rsi,rax
ffffffff8010db4f:	77 ef                	ja     ffffffff8010db40 <CopyString+0x1b0>
ffffffff8010db51:	48 8d 14 f5 00 00 00 00 	lea    rdx,[rsi*8+0x0]
ffffffff8010db59:	4c 89 c6             	mov    rsi,r8
ffffffff8010db5c:	49 8d 04 11          	lea    rax,[r9+rdx*1]
ffffffff8010db60:	48 29 d6             	sub    rsi,rdx
ffffffff8010db63:	49 39 d2             	cmp    r10,rdx
ffffffff8010db66:	0f 84 88 00 00 00    	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010db6c:	4c 8d 56 ff          	lea    r10,[rsi-0x1]
ffffffff8010db70:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffffffff8010db73:	4d 85 d2             	test   r10,r10
ffffffff8010db76:	74 7c                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010db78:	c6 40 01 00          	mov    BYTE PTR [rax+0x1],0x0
ffffffff8010db7c:	48 83 fe 02          	cmp    rsi,0x2
ffffffff8010db80:	74 72                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010db82:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
ffffffff8010db86:	48 83 fe 03          	cmp    rsi,0x3
ffffffff8010db8a:	74 68                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010db8c:	c6 40 03 00          	mov    BYTE PTR [rax+0x3],0x0
ffffffff8010db90:	48 83 fe 04          	cmp    rsi,0x4
ffffffff8010db94:	74 5e                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010db96:	c6 40 04 00          	mov    BYTE PTR [rax+0x4],0x0
ffffffff8010db9a:	48 83 fe 05          	cmp    rsi,0x5
ffffffff8010db9e:	74 54                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010dba0:	c6 40 05 00          	mov    BYTE PTR [rax+0x5],0x0
ffffffff8010dba4:	48 83 fe 06          	cmp    rsi,0x6
ffffffff8010dba8:	74 4a                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010dbaa:	c6 40 06 00          	mov    BYTE PTR [rax+0x6],0x0
ffffffff8010dbae:	48 83 fe 07          	cmp    rsi,0x7
ffffffff8010dbb2:	74 40                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010dbb4:	c6 40 07 00          	mov    BYTE PTR [rax+0x7],0x0
ffffffff8010dbb8:	48 83 fe 08          	cmp    rsi,0x8
ffffffff8010dbbc:	74 36                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010dbbe:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
ffffffff8010dbc2:	48 83 fe 09          	cmp    rsi,0x9
ffffffff8010dbc6:	74 2c                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010dbc8:	c6 40 09 00          	mov    BYTE PTR [rax+0x9],0x0
ffffffff8010dbcc:	48 83 fe 0a          	cmp    rsi,0xa
ffffffff8010dbd0:	74 22                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010dbd2:	c6 40 0a 00          	mov    BYTE PTR [rax+0xa],0x0
ffffffff8010dbd6:	48 83 fe 0b          	cmp    rsi,0xb
ffffffff8010dbda:	74 18                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010dbdc:	c6 40 0b 00          	mov    BYTE PTR [rax+0xb],0x0
ffffffff8010dbe0:	48 83 fe 0c          	cmp    rsi,0xc
ffffffff8010dbe4:	74 0e                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010dbe6:	c6 40 0c 00          	mov    BYTE PTR [rax+0xc],0x0
ffffffff8010dbea:	48 83 fe 0d          	cmp    rsi,0xd
ffffffff8010dbee:	74 04                	je     ffffffff8010dbf4 <CopyString+0x264>
ffffffff8010dbf0:	c6 40 0d 00          	mov    BYTE PTR [rax+0xd],0x0
ffffffff8010dbf4:	c3                   	ret    
ffffffff8010dbf5:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010dbf8:	31 c0                	xor    eax,eax
ffffffff8010dbfa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010dc00:	44 0f b6 04 07       	movzx  r8d,BYTE PTR [rdi+rax*1]
ffffffff8010dc05:	44 88 04 01          	mov    BYTE PTR [rcx+rax*1],r8b
ffffffff8010dc09:	48 83 c0 01          	add    rax,0x1
ffffffff8010dc0d:	48 39 c2             	cmp    rdx,rax
ffffffff8010dc10:	75 ee                	jne    ffffffff8010dc00 <CopyString+0x270>
ffffffff8010dc12:	e9 53 fe ff ff       	jmp    ffffffff8010da6a <CopyString+0xda>
ffffffff8010dc17:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010dc20:	49 89 f0             	mov    r8,rsi
ffffffff8010dc23:	49 89 c1             	mov    r9,rax
ffffffff8010dc26:	e9 f3 fe ff ff       	jmp    ffffffff8010db1e <CopyString+0x18e>
ffffffff8010dc2b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010dc30 <strcmp>:
ffffffff8010dc30:	48 85 d2             	test   rdx,rdx
ffffffff8010dc33:	74 2b                	je     ffffffff8010dc60 <strcmp+0x30>
ffffffff8010dc35:	31 c0                	xor    eax,eax
ffffffff8010dc37:	eb 10                	jmp    ffffffff8010dc49 <strcmp+0x19>
ffffffff8010dc39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010dc40:	48 83 c0 01          	add    rax,0x1
ffffffff8010dc44:	48 39 d0             	cmp    rax,rdx
ffffffff8010dc47:	74 17                	je     ffffffff8010dc60 <strcmp+0x30>
ffffffff8010dc49:	0f b6 0c 06          	movzx  ecx,BYTE PTR [rsi+rax*1]
ffffffff8010dc4d:	38 0c 07             	cmp    BYTE PTR [rdi+rax*1],cl
ffffffff8010dc50:	74 ee                	je     ffffffff8010dc40 <strcmp+0x10>
ffffffff8010dc52:	b8 01 00 00 00       	mov    eax,0x1
ffffffff8010dc57:	c3                   	ret    
ffffffff8010dc58:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010dc60:	31 c0                	xor    eax,eax
ffffffff8010dc62:	c3                   	ret    
ffffffff8010dc63:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010dc6e:	66 90                	xchg   ax,ax

ffffffff8010dc70 <strlen>:
ffffffff8010dc70:	31 c0                	xor    eax,eax
ffffffff8010dc72:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
ffffffff8010dc75:	74 19                	je     ffffffff8010dc90 <strlen+0x20>
ffffffff8010dc77:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010dc80:	48 83 c0 01          	add    rax,0x1
ffffffff8010dc84:	80 3c 07 00          	cmp    BYTE PTR [rdi+rax*1],0x0
ffffffff8010dc88:	75 f6                	jne    ffffffff8010dc80 <strlen+0x10>
ffffffff8010dc8a:	c3                   	ret    
ffffffff8010dc8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010dc90:	c3                   	ret    
ffffffff8010dc91:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010dc9c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010dca0 <strlen_s>:
ffffffff8010dca0:	31 c0                	xor    eax,eax
ffffffff8010dca2:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
ffffffff8010dca5:	74 18                	je     ffffffff8010dcbf <strlen_s+0x1f>
ffffffff8010dca7:	48 85 f6             	test   rsi,rsi
ffffffff8010dcaa:	75 09                	jne    ffffffff8010dcb5 <strlen_s+0x15>
ffffffff8010dcac:	eb 11                	jmp    ffffffff8010dcbf <strlen_s+0x1f>
ffffffff8010dcae:	66 90                	xchg   ax,ax
ffffffff8010dcb0:	48 39 c6             	cmp    rsi,rax
ffffffff8010dcb3:	76 0b                	jbe    ffffffff8010dcc0 <strlen_s+0x20>
ffffffff8010dcb5:	48 83 c0 01          	add    rax,0x1
ffffffff8010dcb9:	80 3c 07 00          	cmp    BYTE PTR [rdi+rax*1],0x0
ffffffff8010dcbd:	75 f1                	jne    ffffffff8010dcb0 <strlen_s+0x10>
ffffffff8010dcbf:	c3                   	ret    
ffffffff8010dcc0:	c3                   	ret    
ffffffff8010dcc1:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010dccc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010dcd0 <inportb>:
ffffffff8010dcd0:	89 fa                	mov    edx,edi
ffffffff8010dcd2:	ec                   	in     al,dx
ffffffff8010dcd3:	c3                   	ret    
ffffffff8010dcd4:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010dcdf:	90                   	nop

ffffffff8010dce0 <outportb>:
ffffffff8010dce0:	89 fa                	mov    edx,edi
ffffffff8010dce2:	89 f0                	mov    eax,esi
ffffffff8010dce4:	ee                   	out    dx,al
ffffffff8010dce5:	c3                   	ret    
ffffffff8010dce6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]

ffffffff8010dcf0 <inportsb>:
ffffffff8010dcf0:	89 fa                	mov    edx,edi
ffffffff8010dcf2:	ec                   	in     al,dx
ffffffff8010dcf3:	c3                   	ret    
ffffffff8010dcf4:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010dcff:	90                   	nop

ffffffff8010dd00 <inportw>:
ffffffff8010dd00:	89 fa                	mov    edx,edi
ffffffff8010dd02:	66 ed                	in     ax,dx
ffffffff8010dd04:	c3                   	ret    
ffffffff8010dd05:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]

ffffffff8010dd10 <outportw>:
ffffffff8010dd10:	89 fa                	mov    edx,edi
ffffffff8010dd12:	89 f0                	mov    eax,esi
ffffffff8010dd14:	66 ef                	out    dx,ax
ffffffff8010dd16:	c3                   	ret    
ffffffff8010dd17:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]

ffffffff8010dd20 <inportdw>:
ffffffff8010dd20:	89 fa                	mov    edx,edi
ffffffff8010dd22:	ed                   	in     eax,dx
ffffffff8010dd23:	c3                   	ret    
ffffffff8010dd24:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010dd2f:	90                   	nop

ffffffff8010dd30 <outportdw>:
ffffffff8010dd30:	89 fa                	mov    edx,edi
ffffffff8010dd32:	89 f0                	mov    eax,esi
ffffffff8010dd34:	ef                   	out    dx,eax
ffffffff8010dd35:	c3                   	ret    
ffffffff8010dd36:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]

ffffffff8010dd40 <imalloc>:
ffffffff8010dd40:	41 57                	push   r15
ffffffff8010dd42:	49 89 f8             	mov    r8,rdi
ffffffff8010dd45:	41 56                	push   r14
ffffffff8010dd47:	41 55                	push   r13
ffffffff8010dd49:	41 54                	push   r12
ffffffff8010dd4b:	55                   	push   rbp
ffffffff8010dd4c:	53                   	push   rbx
ffffffff8010dd4d:	48 83 ec 48          	sub    rsp,0x48
ffffffff8010dd51:	49 83 c0 20          	add    r8,0x20
ffffffff8010dd55:	0f 84 7d 03 00 00    	je     ffffffff8010e0d8 <imalloc+0x398>
ffffffff8010dd5b:	48 8b 05 2e 84 00 00 	mov    rax,QWORD PTR [rip+0x842e]        # ffffffff80116190 <l_memRoot>
ffffffff8010dd62:	49 89 fe             	mov    r14,rdi
ffffffff8010dd65:	48 85 c0             	test   rax,rax
ffffffff8010dd68:	0f 84 e0 03 00 00    	je     ffffffff8010e14e <imalloc+0x40e>
ffffffff8010dd6e:	48 8b 1d 13 84 00 00 	mov    rbx,QWORD PTR [rip+0x8413]        # ffffffff80116188 <l_bestBet>
ffffffff8010dd75:	49 8d 6e 48          	lea    rbp,[r14+0x48]
ffffffff8010dd79:	48 85 db             	test   rbx,rbx
ffffffff8010dd7c:	0f 84 3e 03 00 00    	je     ffffffff8010e0c0 <imalloc+0x380>
ffffffff8010dd82:	8b 7b 14             	mov    edi,DWORD PTR [rbx+0x14]
ffffffff8010dd85:	44 8b 5b 18          	mov    r11d,DWORD PTR [rbx+0x18]
ffffffff8010dd89:	41 89 fd             	mov    r13d,edi
ffffffff8010dd8c:	45 29 dd             	sub    r13d,r11d
ffffffff8010dd8f:	4c 39 ed             	cmp    rbp,r13
ffffffff8010dd92:	0f 83 48 01 00 00    	jae    ffffffff8010dee0 <imalloc+0x1a0>
ffffffff8010dd98:	41 b9 01 00 00 00    	mov    r9d,0x1
ffffffff8010dd9e:	41 8d 40 50          	lea    eax,[r8+0x50]
ffffffff8010dda2:	44 89 04 24          	mov    DWORD PTR [rsp],r8d
ffffffff8010dda6:	41 89 c4             	mov    r12d,eax
ffffffff8010dda9:	89 44 24 24          	mov    DWORD PTR [rsp+0x24],eax
ffffffff8010ddad:	41 c1 ec 0c          	shr    r12d,0xc
ffffffff8010ddb1:	25 ff 0f 00 00       	and    eax,0xfff
ffffffff8010ddb6:	45 8d 54 24 01       	lea    r10d,[r12+0x1]
ffffffff8010ddbb:	89 44 24 20          	mov    DWORD PTR [rsp+0x20],eax
ffffffff8010ddbf:	b8 10 00 00 00       	mov    eax,0x10
ffffffff8010ddc4:	45 89 d7             	mov    r15d,r10d
ffffffff8010ddc7:	45 0f 44 fc          	cmove  r15d,r12d
ffffffff8010ddcb:	41 83 ff 10          	cmp    r15d,0x10
ffffffff8010ddcf:	44 0f 42 f8          	cmovb  r15d,eax
ffffffff8010ddd3:	44 89 f8             	mov    eax,r15d
ffffffff8010ddd6:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
ffffffff8010dddb:	44 89 f8             	mov    eax,r15d
ffffffff8010ddde:	c1 e0 0c             	shl    eax,0xc
ffffffff8010dde1:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
ffffffff8010dde5:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
ffffffff8010ddea:	89 f8                	mov    eax,edi
ffffffff8010ddec:	44 29 d8             	sub    eax,r11d
ffffffff8010ddef:	4c 39 e8             	cmp    rax,r13
ffffffff8010ddf2:	76 0a                	jbe    ffffffff8010ddfe <imalloc+0xbe>
ffffffff8010ddf4:	48 89 1d 8d 83 00 00 	mov    QWORD PTR [rip+0x838d],rbx        # ffffffff80116188 <l_bestBet>
ffffffff8010ddfb:	49 89 c5             	mov    r13,rax
ffffffff8010ddfe:	48 39 c5             	cmp    rbp,rax
ffffffff8010de01:	76 26                	jbe    ffffffff8010de29 <imalloc+0xe9>
ffffffff8010de03:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
ffffffff8010de07:	48 85 d2             	test   rdx,rdx
ffffffff8010de0a:	0f 84 b0 01 00 00    	je     ffffffff8010dfc0 <imalloc+0x280>
ffffffff8010de10:	8b 7a 14             	mov    edi,DWORD PTR [rdx+0x14]
ffffffff8010de13:	44 8b 5a 18          	mov    r11d,DWORD PTR [rdx+0x18]
ffffffff8010de17:	48 89 d3             	mov    rbx,rdx
ffffffff8010de1a:	89 f8                	mov    eax,edi
ffffffff8010de1c:	44 29 d8             	sub    eax,r11d
ffffffff8010de1f:	4c 39 e8             	cmp    rax,r13
ffffffff8010de22:	77 d0                	ja     ffffffff8010ddf4 <imalloc+0xb4>
ffffffff8010de24:	48 39 c5             	cmp    rbp,rax
ffffffff8010de27:	77 da                	ja     ffffffff8010de03 <imalloc+0xc3>
ffffffff8010de29:	48 8b 53 20          	mov    rdx,QWORD PTR [rbx+0x20]
ffffffff8010de2d:	48 89 d8             	mov    rax,rbx
ffffffff8010de30:	48 85 d2             	test   rdx,rdx
ffffffff8010de33:	0f 84 15 04 00 00    	je     ffffffff8010e24e <imalloc+0x50e>
ffffffff8010de39:	48 89 d0             	mov    rax,rdx
ffffffff8010de3c:	48 29 d8             	sub    rax,rbx
ffffffff8010de3f:	48 83 e8 28          	sub    rax,0x28
ffffffff8010de43:	48 39 c5             	cmp    rbp,rax
ffffffff8010de46:	0f 86 8a 03 00 00    	jbe    ffffffff8010e1d6 <imalloc+0x496>
ffffffff8010de4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010de50:	48 89 d1             	mov    rcx,rdx
ffffffff8010de53:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
ffffffff8010de57:	8b 71 1c             	mov    esi,DWORD PTR [rcx+0x1c]
ffffffff8010de5a:	48 85 d2             	test   rdx,rdx
ffffffff8010de5d:	0f 84 95 00 00 00    	je     ffffffff8010def8 <imalloc+0x1b8>
ffffffff8010de63:	48 89 d0             	mov    rax,rdx
ffffffff8010de66:	48 29 c8             	sub    rax,rcx
ffffffff8010de69:	48 83 e8 28          	sub    rax,0x28
ffffffff8010de6d:	48 29 f0             	sub    rax,rsi
ffffffff8010de70:	48 39 c5             	cmp    rbp,rax
ffffffff8010de73:	77 db                	ja     ffffffff8010de50 <imalloc+0x110>
ffffffff8010de75:	48 01 ce             	add    rsi,rcx
ffffffff8010de78:	8b 3c 24             	mov    edi,DWORD PTR [rsp]
ffffffff8010de7b:	48 89 56 30          	mov    QWORD PTR [rsi+0x30],rdx
ffffffff8010de7f:	48 8b 51 08          	mov    rdx,QWORD PTR [rcx+0x8]
ffffffff8010de83:	48 8d 46 28          	lea    rax,[rsi+0x28]
ffffffff8010de87:	c7 46 40 de c0 01 c0 	mov    DWORD PTR [rsi+0x40],0xc001c0de
ffffffff8010de8e:	48 89 4e 28          	mov    QWORD PTR [rsi+0x28],rcx
ffffffff8010de92:	89 7e 44             	mov    DWORD PTR [rsi+0x44],edi
ffffffff8010de95:	44 89 76 48          	mov    DWORD PTR [rsi+0x48],r14d
ffffffff8010de99:	48 89 5e 38          	mov    QWORD PTR [rsi+0x38],rbx
ffffffff8010de9d:	48 89 02             	mov    QWORD PTR [rdx],rax
ffffffff8010dea0:	48 89 41 08          	mov    QWORD PTR [rcx+0x8],rax
ffffffff8010dea4:	42 8d 44 1f 28       	lea    eax,[rdi+r11*1+0x28]
ffffffff8010dea9:	4c 01 05 c8 82 00 00 	add    QWORD PTR [rip+0x82c8],r8        # ffffffff80116178 <l_inuse>
ffffffff8010deb0:	48 8d 4e 60          	lea    rcx,[rsi+0x60]
ffffffff8010deb4:	89 43 18             	mov    DWORD PTR [rbx+0x18],eax
ffffffff8010deb7:	83 e6 0f             	and    esi,0xf
ffffffff8010deba:	0f 85 e0 01 00 00    	jne    ffffffff8010e0a0 <imalloc+0x360>
ffffffff8010dec0:	48 89 ca             	mov    rdx,rcx
ffffffff8010dec3:	b8 10 00 00 00       	mov    eax,0x10
ffffffff8010dec8:	88 41 f0             	mov    BYTE PTR [rcx-0x10],al
ffffffff8010decb:	48 83 c4 48          	add    rsp,0x48
ffffffff8010decf:	48 89 d0             	mov    rax,rdx
ffffffff8010ded2:	5b                   	pop    rbx
ffffffff8010ded3:	5d                   	pop    rbp
ffffffff8010ded4:	41 5c                	pop    r12
ffffffff8010ded6:	41 5d                	pop    r13
ffffffff8010ded8:	41 5e                	pop    r14
ffffffff8010deda:	41 5f                	pop    r15
ffffffff8010dedc:	c3                   	ret    
ffffffff8010dedd:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010dee0:	8b 78 14             	mov    edi,DWORD PTR [rax+0x14]
ffffffff8010dee3:	44 8b 58 18          	mov    r11d,DWORD PTR [rax+0x18]
ffffffff8010dee7:	48 89 c3             	mov    rbx,rax
ffffffff8010deea:	45 31 c9             	xor    r9d,r9d
ffffffff8010deed:	e9 ac fe ff ff       	jmp    ffffffff8010dd9e <imalloc+0x5e>
ffffffff8010def2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010def8:	48 8d 44 3b d8       	lea    rax,[rbx+rdi*1-0x28]
ffffffff8010defd:	48 29 c8             	sub    rax,rcx
ffffffff8010df00:	48 29 f0             	sub    rax,rsi
ffffffff8010df03:	48 39 c5             	cmp    rbp,rax
ffffffff8010df06:	0f 86 fc 01 00 00    	jbe    ffffffff8010e108 <imalloc+0x3c8>
ffffffff8010df0c:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
ffffffff8010df10:	48 85 d2             	test   rdx,rdx
ffffffff8010df13:	0f 85 f7 fe ff ff    	jne    ffffffff8010de10 <imalloc+0xd0>
ffffffff8010df19:	41 83 f9 01          	cmp    r9d,0x1
ffffffff8010df1d:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
ffffffff8010df22:	44 89 4c 24 30       	mov    DWORD PTR [rsp+0x30],r9d
ffffffff8010df27:	74 77                	je     ffffffff8010dfa0 <imalloc+0x260>
ffffffff8010df29:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
ffffffff8010df2e:	48 8b 3d 8b 81 00 00 	mov    rdi,QWORD PTR [rip+0x818b]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010df35:	4c 89 44 24 38       	mov    QWORD PTR [rsp+0x38],r8
ffffffff8010df3a:	44 89 54 24 34       	mov    DWORD PTR [rsp+0x34],r10d
ffffffff8010df3f:	e8 8c 55 00 00       	call   ffffffff801134d0 <AllocateVirtualMemoryInAddressSpace>
ffffffff8010df44:	44 8b 54 24 34       	mov    r10d,DWORD PTR [rsp+0x34]
ffffffff8010df49:	4c 8b 44 24 38       	mov    r8,QWORD PTR [rsp+0x38]
ffffffff8010df4e:	48 85 c0             	test   rax,rax
ffffffff8010df51:	44 8b 4c 24 30       	mov    r9d,DWORD PTR [rsp+0x30]
ffffffff8010df56:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
ffffffff8010df5b:	0f 84 d8 01 00 00    	je     ffffffff8010e139 <imalloc+0x3f9>
ffffffff8010df61:	8b 7c 24 10          	mov    edi,DWORD PTR [rsp+0x10]
ffffffff8010df65:	44 89 78 10          	mov    DWORD PTR [rax+0x10],r15d
ffffffff8010df69:	48 89 c2             	mov    rdx,rax
ffffffff8010df6c:	48 c7 40 08 00 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
ffffffff8010df74:	89 78 14             	mov    DWORD PTR [rax+0x14],edi
ffffffff8010df77:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
ffffffff8010df7c:	c7 40 18 28 00 00 00 	mov    DWORD PTR [rax+0x18],0x28
ffffffff8010df83:	48 c7 40 20 00 00 00 00 	mov    QWORD PTR [rax+0x20],0x0
ffffffff8010df8b:	48 01 3d ee 81 00 00 	add    QWORD PTR [rip+0x81ee],rdi        # ffffffff80116180 <l_allocated>
ffffffff8010df92:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
ffffffff8010df96:	48 89 18             	mov    QWORD PTR [rax],rbx
ffffffff8010df99:	e9 72 fe ff ff       	jmp    ffffffff8010de10 <imalloc+0xd0>
ffffffff8010df9e:	66 90                	xchg   ax,ax
ffffffff8010dfa0:	48 8b 15 e9 81 00 00 	mov    rdx,QWORD PTR [rip+0x81e9]        # ffffffff80116190 <l_memRoot>
ffffffff8010dfa7:	48 85 d2             	test   rdx,rdx
ffffffff8010dfaa:	0f 84 1b ff ff ff    	je     ffffffff8010decb <imalloc+0x18b>
ffffffff8010dfb0:	45 31 c9             	xor    r9d,r9d
ffffffff8010dfb3:	e9 58 fe ff ff       	jmp    ffffffff8010de10 <imalloc+0xd0>
ffffffff8010dfb8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010dfc0:	41 83 f9 01          	cmp    r9d,0x1
ffffffff8010dfc4:	74 da                	je     ffffffff8010dfa0 <imalloc+0x260>
ffffffff8010dfc6:	8b 44 24 20          	mov    eax,DWORD PTR [rsp+0x20]
ffffffff8010dfca:	48 8b 3d ef 80 00 00 	mov    rdi,QWORD PTR [rip+0x80ef]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010dfd1:	4c 89 44 24 10       	mov    QWORD PTR [rsp+0x10],r8
ffffffff8010dfd6:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
ffffffff8010dfdb:	85 c0                	test   eax,eax
ffffffff8010dfdd:	b8 10 00 00 00       	mov    eax,0x10
ffffffff8010dfe2:	45 0f 45 e2          	cmovne r12d,r10d
ffffffff8010dfe6:	41 83 fc 10          	cmp    r12d,0x10
ffffffff8010dfea:	44 0f 42 e0          	cmovb  r12d,eax
ffffffff8010dfee:	44 89 e6             	mov    esi,r12d
ffffffff8010dff1:	e8 da 54 00 00       	call   ffffffff801134d0 <AllocateVirtualMemoryInAddressSpace>
ffffffff8010dff6:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
ffffffff8010dffb:	4c 8b 44 24 10       	mov    r8,QWORD PTR [rsp+0x10]
ffffffff8010e000:	48 85 c0             	test   rax,rax
ffffffff8010e003:	0f 84 30 01 00 00    	je     ffffffff8010e139 <imalloc+0x3f9>
ffffffff8010e009:	44 89 60 10          	mov    DWORD PTR [rax+0x10],r12d
ffffffff8010e00d:	41 c1 e4 0c          	shl    r12d,0xc
ffffffff8010e011:	4c 01 25 68 81 00 00 	add    QWORD PTR [rip+0x8168],r12        # ffffffff80116180 <l_allocated>
ffffffff8010e018:	48 c7 40 08 00 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
ffffffff8010e020:	44 89 60 14          	mov    DWORD PTR [rax+0x14],r12d
ffffffff8010e024:	c7 40 18 28 00 00 00 	mov    DWORD PTR [rax+0x18],0x28
ffffffff8010e02b:	48 c7 40 20 00 00 00 00 	mov    QWORD PTR [rax+0x20],0x0
ffffffff8010e033:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
ffffffff8010e037:	48 89 18             	mov    QWORD PTR [rax],rbx
ffffffff8010e03a:	8b 1c 24             	mov    ebx,DWORD PTR [rsp]
ffffffff8010e03d:	48 8d 50 28          	lea    rdx,[rax+0x28]
ffffffff8010e041:	4c 01 05 30 81 00 00 	add    QWORD PTR [rip+0x8130],r8        # ffffffff80116178 <l_inuse>
ffffffff8010e048:	48 8d 48 60          	lea    rcx,[rax+0x60]
ffffffff8010e04c:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
ffffffff8010e050:	89 58 44             	mov    DWORD PTR [rax+0x44],ebx
ffffffff8010e053:	8b 5c 24 24          	mov    ebx,DWORD PTR [rsp+0x24]
ffffffff8010e057:	c7 40 40 de c0 01 c0 	mov    DWORD PTR [rax+0x40],0xc001c0de
ffffffff8010e05e:	48 c7 40 28 00 00 00 00 	mov    QWORD PTR [rax+0x28],0x0
ffffffff8010e066:	48 c7 40 30 00 00 00 00 	mov    QWORD PTR [rax+0x30],0x0
ffffffff8010e06e:	48 89 40 38          	mov    QWORD PTR [rax+0x38],rax
ffffffff8010e072:	44 89 70 48          	mov    DWORD PTR [rax+0x48],r14d
ffffffff8010e076:	89 58 18             	mov    DWORD PTR [rax+0x18],ebx
ffffffff8010e079:	83 e0 0f             	and    eax,0xf
ffffffff8010e07c:	0f 84 3e fe ff ff    	je     ffffffff8010dec0 <imalloc+0x180>
ffffffff8010e082:	ba 10 00 00 00       	mov    edx,0x10
ffffffff8010e087:	48 29 c2             	sub    rdx,rax
ffffffff8010e08a:	48 89 d0             	mov    rax,rdx
ffffffff8010e08d:	48 01 d1             	add    rcx,rdx
ffffffff8010e090:	48 89 ca             	mov    rdx,rcx
ffffffff8010e093:	83 c0 10             	add    eax,0x10
ffffffff8010e096:	e9 2d fe ff ff       	jmp    ffffffff8010dec8 <imalloc+0x188>
ffffffff8010e09b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010e0a0:	b8 10 00 00 00       	mov    eax,0x10
ffffffff8010e0a5:	48 29 f0             	sub    rax,rsi
ffffffff8010e0a8:	48 01 c1             	add    rcx,rax
ffffffff8010e0ab:	83 c0 10             	add    eax,0x10
ffffffff8010e0ae:	48 89 ca             	mov    rdx,rcx
ffffffff8010e0b1:	e9 12 fe ff ff       	jmp    ffffffff8010dec8 <imalloc+0x188>
ffffffff8010e0b6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010e0c0:	8b 78 14             	mov    edi,DWORD PTR [rax+0x14]
ffffffff8010e0c3:	44 8b 58 18          	mov    r11d,DWORD PTR [rax+0x18]
ffffffff8010e0c7:	48 89 c3             	mov    rbx,rax
ffffffff8010e0ca:	45 31 ed             	xor    r13d,r13d
ffffffff8010e0cd:	45 31 c9             	xor    r9d,r9d
ffffffff8010e0d0:	e9 c9 fc ff ff       	jmp    ffffffff8010dd9e <imalloc+0x5e>
ffffffff8010e0d5:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010e0d8:	48 8b 05 b1 80 00 00 	mov    rax,QWORD PTR [rip+0x80b1]        # ffffffff80116190 <l_memRoot>
ffffffff8010e0df:	48 83 05 89 80 00 00 01 	add    QWORD PTR [rip+0x8089],0x1        # ffffffff80116170 <l_warningCount>
ffffffff8010e0e7:	48 85 c0             	test   rax,rax
ffffffff8010e0ea:	0f 84 d3 00 00 00    	je     ffffffff8010e1c3 <imalloc+0x483>
ffffffff8010e0f0:	41 be 01 00 00 00    	mov    r14d,0x1
ffffffff8010e0f6:	41 b8 21 00 00 00    	mov    r8d,0x21
ffffffff8010e0fc:	e9 6d fc ff ff       	jmp    ffffffff8010dd6e <imalloc+0x2e>
ffffffff8010e101:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010e108:	48 01 ce             	add    rsi,rcx
ffffffff8010e10b:	8b 3c 24             	mov    edi,DWORD PTR [rsp]
ffffffff8010e10e:	48 8d 46 28          	lea    rax,[rsi+0x28]
ffffffff8010e112:	48 89 41 08          	mov    QWORD PTR [rcx+0x8],rax
ffffffff8010e116:	48 89 4e 28          	mov    QWORD PTR [rsi+0x28],rcx
ffffffff8010e11a:	48 c7 46 30 00 00 00 00 	mov    QWORD PTR [rsi+0x30],0x0
ffffffff8010e122:	c7 46 40 de c0 01 c0 	mov    DWORD PTR [rsi+0x40],0xc001c0de
ffffffff8010e129:	48 89 5e 38          	mov    QWORD PTR [rsi+0x38],rbx
ffffffff8010e12d:	89 7e 44             	mov    DWORD PTR [rsi+0x44],edi
ffffffff8010e130:	44 89 76 48          	mov    DWORD PTR [rsi+0x48],r14d
ffffffff8010e134:	e9 6b fd ff ff       	jmp    ffffffff8010dea4 <imalloc+0x164>
ffffffff8010e139:	48 83 05 2f 80 00 00 01 	add    QWORD PTR [rip+0x802f],0x1        # ffffffff80116170 <l_warningCount>
ffffffff8010e141:	48 c7 43 08 00 00 00 00 	mov    QWORD PTR [rbx+0x8],0x0
ffffffff8010e149:	e9 7d fd ff ff       	jmp    ffffffff8010decb <imalloc+0x18b>
ffffffff8010e14e:	41 8d 50 50          	lea    edx,[r8+0x50]
ffffffff8010e152:	89 d0                	mov    eax,edx
ffffffff8010e154:	c1 e8 0c             	shr    eax,0xc
ffffffff8010e157:	81 e2 ff 0f 00 00    	and    edx,0xfff
ffffffff8010e15d:	75 72                	jne    ffffffff8010e1d1 <imalloc+0x491>
ffffffff8010e15f:	83 f8 10             	cmp    eax,0x10
ffffffff8010e162:	bb 10 00 00 00       	mov    ebx,0x10
ffffffff8010e167:	48 8b 3d 52 7f 00 00 	mov    rdi,QWORD PTR [rip+0x7f52]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010e16e:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
ffffffff8010e172:	0f 43 d8             	cmovae ebx,eax
ffffffff8010e175:	89 de                	mov    esi,ebx
ffffffff8010e177:	e8 54 53 00 00       	call   ffffffff801134d0 <AllocateVirtualMemoryInAddressSpace>
ffffffff8010e17c:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
ffffffff8010e180:	48 85 c0             	test   rax,rax
ffffffff8010e183:	0f 84 ab 00 00 00    	je     ffffffff8010e234 <imalloc+0x4f4>
ffffffff8010e189:	89 58 10             	mov    DWORD PTR [rax+0x10],ebx
ffffffff8010e18c:	c1 e3 0c             	shl    ebx,0xc
ffffffff8010e18f:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
ffffffff8010e196:	48 01 1d e3 7f 00 00 	add    QWORD PTR [rip+0x7fe3],rbx        # ffffffff80116180 <l_allocated>
ffffffff8010e19d:	48 c7 40 08 00 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
ffffffff8010e1a5:	89 58 14             	mov    DWORD PTR [rax+0x14],ebx
ffffffff8010e1a8:	c7 40 18 28 00 00 00 	mov    DWORD PTR [rax+0x18],0x28
ffffffff8010e1af:	48 c7 40 20 00 00 00 00 	mov    QWORD PTR [rax+0x20],0x0
ffffffff8010e1b7:	48 89 05 d2 7f 00 00 	mov    QWORD PTR [rip+0x7fd2],rax        # ffffffff80116190 <l_memRoot>
ffffffff8010e1be:	e9 ab fb ff ff       	jmp    ffffffff8010dd6e <imalloc+0x2e>
ffffffff8010e1c3:	31 c0                	xor    eax,eax
ffffffff8010e1c5:	41 be 01 00 00 00    	mov    r14d,0x1
ffffffff8010e1cb:	41 b8 21 00 00 00    	mov    r8d,0x21
ffffffff8010e1d1:	83 c0 01             	add    eax,0x1
ffffffff8010e1d4:	eb 89                	jmp    ffffffff8010e15f <imalloc+0x41f>
ffffffff8010e1d6:	8b 3c 24             	mov    edi,DWORD PTR [rsp]
ffffffff8010e1d9:	48 8d 43 28          	lea    rax,[rbx+0x28]
ffffffff8010e1dd:	4c 01 05 94 7f 00 00 	add    QWORD PTR [rip+0x7f94],r8        # ffffffff80116178 <l_inuse>
ffffffff8010e1e4:	48 8d 4b 60          	lea    rcx,[rbx+0x60]
ffffffff8010e1e8:	48 89 02             	mov    QWORD PTR [rdx],rax
ffffffff8010e1eb:	48 89 43 20          	mov    QWORD PTR [rbx+0x20],rax
ffffffff8010e1ef:	42 8d 44 1f 28       	lea    eax,[rdi+r11*1+0x28]
ffffffff8010e1f4:	48 89 53 30          	mov    QWORD PTR [rbx+0x30],rdx
ffffffff8010e1f8:	c7 43 40 de c0 01 c0 	mov    DWORD PTR [rbx+0x40],0xc001c0de
ffffffff8010e1ff:	48 c7 43 28 00 00 00 00 	mov    QWORD PTR [rbx+0x28],0x0
ffffffff8010e207:	48 89 5b 38          	mov    QWORD PTR [rbx+0x38],rbx
ffffffff8010e20b:	89 7b 44             	mov    DWORD PTR [rbx+0x44],edi
ffffffff8010e20e:	44 89 73 48          	mov    DWORD PTR [rbx+0x48],r14d
ffffffff8010e212:	89 43 18             	mov    DWORD PTR [rbx+0x18],eax
ffffffff8010e215:	83 e3 0f             	and    ebx,0xf
ffffffff8010e218:	0f 84 a2 fc ff ff    	je     ffffffff8010dec0 <imalloc+0x180>
ffffffff8010e21e:	b8 10 00 00 00       	mov    eax,0x10
ffffffff8010e223:	48 29 d8             	sub    rax,rbx
ffffffff8010e226:	48 01 c1             	add    rcx,rax
ffffffff8010e229:	83 c0 10             	add    eax,0x10
ffffffff8010e22c:	48 89 ca             	mov    rdx,rcx
ffffffff8010e22f:	e9 94 fc ff ff       	jmp    ffffffff8010dec8 <imalloc+0x188>
ffffffff8010e234:	48 83 05 34 7f 00 00 01 	add    QWORD PTR [rip+0x7f34],0x1        # ffffffff80116170 <l_warningCount>
ffffffff8010e23c:	31 d2                	xor    edx,edx
ffffffff8010e23e:	48 c7 05 47 7f 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x7f47],0x0        # ffffffff80116190 <l_memRoot>
ffffffff8010e249:	e9 7d fc ff ff       	jmp    ffffffff8010decb <imalloc+0x18b>
ffffffff8010e24e:	8b 1c 24             	mov    ebx,DWORD PTR [rsp]
ffffffff8010e251:	42 8d 5c 1b 28       	lea    ebx,[rbx+r11*1+0x28]
ffffffff8010e256:	89 5c 24 24          	mov    DWORD PTR [rsp+0x24],ebx
ffffffff8010e25a:	e9 db fd ff ff       	jmp    ffffffff8010e03a <imalloc+0x2fa>
ffffffff8010e25f:	90                   	nop

ffffffff8010e260 <malloc>:
ffffffff8010e260:	e9 db fa ff ff       	jmp    ffffffff8010dd40 <imalloc>
ffffffff8010e265:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]

ffffffff8010e270 <ifree>:
ffffffff8010e270:	48 85 ff             	test   rdi,rdi
ffffffff8010e273:	0f 84 cf 00 00 00    	je     ffffffff8010e348 <ifree+0xd8>
ffffffff8010e279:	48 0f be 57 f0       	movsx  rdx,BYTE PTR [rdi-0x10]
ffffffff8010e27e:	48 89 f8             	mov    rax,rdi
ffffffff8010e281:	48 29 d0             	sub    rax,rdx
ffffffff8010e284:	48 83 fa 20          	cmp    rdx,0x20
ffffffff8010e288:	48 0f 42 f8          	cmovb  rdi,rax
ffffffff8010e28c:	8b 57 f0             	mov    edx,DWORD PTR [rdi-0x10]
ffffffff8010e28f:	48 8d 47 d8          	lea    rax,[rdi-0x28]
ffffffff8010e293:	81 fa de c0 01 c0    	cmp    edx,0xc001c0de
ffffffff8010e299:	75 75                	jne    ffffffff8010e310 <ifree+0xa0>
ffffffff8010e29b:	8b 48 1c             	mov    ecx,DWORD PTR [rax+0x1c]
ffffffff8010e29e:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
ffffffff8010e2a2:	48 29 0d cf 7e 00 00 	sub    QWORD PTR [rip+0x7ecf],rcx        # ffffffff80116178 <l_inuse>
ffffffff8010e2a9:	48 8b 7f d8          	mov    rdi,QWORD PTR [rdi-0x28]
ffffffff8010e2ad:	48 89 ca             	mov    rdx,rcx
ffffffff8010e2b0:	8b 4e 18             	mov    ecx,DWORD PTR [rsi+0x18]
ffffffff8010e2b3:	29 d1                	sub    ecx,edx
ffffffff8010e2b5:	89 ca                	mov    edx,ecx
ffffffff8010e2b7:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
ffffffff8010e2bb:	83 ea 28             	sub    edx,0x28
ffffffff8010e2be:	89 56 18             	mov    DWORD PTR [rsi+0x18],edx
ffffffff8010e2c1:	c7 40 18 ad de ad de 	mov    DWORD PTR [rax+0x18],0xdeaddead
ffffffff8010e2c8:	48 85 c9             	test   rcx,rcx
ffffffff8010e2cb:	74 06                	je     ffffffff8010e2d3 <ifree+0x63>
ffffffff8010e2cd:	48 89 39             	mov    QWORD PTR [rcx],rdi
ffffffff8010e2d0:	48 8b 38             	mov    rdi,QWORD PTR [rax]
ffffffff8010e2d3:	48 85 ff             	test   rdi,rdi
ffffffff8010e2d6:	0f 84 c4 00 00 00    	je     ffffffff8010e3a0 <ifree+0x130>
ffffffff8010e2dc:	48 89 4f 08          	mov    QWORD PTR [rdi+0x8],rcx
ffffffff8010e2e0:	48 8b 4e 20          	mov    rcx,QWORD PTR [rsi+0x20]
ffffffff8010e2e4:	48 8b 05 9d 7e 00 00 	mov    rax,QWORD PTR [rip+0x7e9d]        # ffffffff80116188 <l_bestBet>
ffffffff8010e2eb:	48 85 c9             	test   rcx,rcx
ffffffff8010e2ee:	74 68                	je     ffffffff8010e358 <ifree+0xe8>
ffffffff8010e2f0:	48 85 c0             	test   rax,rax
ffffffff8010e2f3:	74 3d                	je     ffffffff8010e332 <ifree+0xc2>
ffffffff8010e2f5:	8b 48 14             	mov    ecx,DWORD PTR [rax+0x14]
ffffffff8010e2f8:	2b 48 18             	sub    ecx,DWORD PTR [rax+0x18]
ffffffff8010e2fb:	8b 46 14             	mov    eax,DWORD PTR [rsi+0x14]
ffffffff8010e2fe:	29 d0                	sub    eax,edx
ffffffff8010e300:	39 c1                	cmp    ecx,eax
ffffffff8010e302:	7d 2e                	jge    ffffffff8010e332 <ifree+0xc2>
ffffffff8010e304:	48 89 35 7d 7e 00 00 	mov    QWORD PTR [rip+0x7e7d],rsi        # ffffffff80116188 <l_bestBet>
ffffffff8010e30b:	c3                   	ret    
ffffffff8010e30c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010e310:	89 d0                	mov    eax,edx
ffffffff8010e312:	48 83 05 4e 7e 00 00 01 	add    QWORD PTR [rip+0x7e4e],0x1        # ffffffff80116168 <l_errorCount>
ffffffff8010e31a:	25 ff ff ff 00       	and    eax,0xffffff
ffffffff8010e31f:	3d de c0 01 00       	cmp    eax,0x1c0de
ffffffff8010e324:	74 12                	je     ffffffff8010e338 <ifree+0xc8>
ffffffff8010e326:	66 81 fa de c0       	cmp    dx,0xc0de
ffffffff8010e32b:	74 0b                	je     ffffffff8010e338 <ifree+0xc8>
ffffffff8010e32d:	80 fa de             	cmp    dl,0xde
ffffffff8010e330:	74 06                	je     ffffffff8010e338 <ifree+0xc8>
ffffffff8010e332:	c3                   	ret    
ffffffff8010e333:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010e338:	48 83 05 20 7e 00 00 01 	add    QWORD PTR [rip+0x7e20],0x1        # ffffffff80116160 <l_possibleOverruns>
ffffffff8010e340:	c3                   	ret    
ffffffff8010e341:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010e348:	48 83 05 20 7e 00 00 01 	add    QWORD PTR [rip+0x7e20],0x1        # ffffffff80116170 <l_warningCount>
ffffffff8010e350:	c3                   	ret    
ffffffff8010e351:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010e358:	48 39 35 31 7e 00 00 	cmp    QWORD PTR [rip+0x7e31],rsi        # ffffffff80116190 <l_memRoot>
ffffffff8010e35f:	48 8b 56 08          	mov    rdx,QWORD PTR [rsi+0x8]
ffffffff8010e363:	74 4b                	je     ffffffff8010e3b0 <ifree+0x140>
ffffffff8010e365:	48 39 c6             	cmp    rsi,rax
ffffffff8010e368:	74 56                	je     ffffffff8010e3c0 <ifree+0x150>
ffffffff8010e36a:	48 8b 06             	mov    rax,QWORD PTR [rsi]
ffffffff8010e36d:	48 85 c0             	test   rax,rax
ffffffff8010e370:	74 08                	je     ffffffff8010e37a <ifree+0x10a>
ffffffff8010e372:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffffffff8010e376:	48 8b 56 08          	mov    rdx,QWORD PTR [rsi+0x8]
ffffffff8010e37a:	48 85 d2             	test   rdx,rdx
ffffffff8010e37d:	74 03                	je     ffffffff8010e382 <ifree+0x112>
ffffffff8010e37f:	48 89 02             	mov    QWORD PTR [rdx],rax
ffffffff8010e382:	8b 46 14             	mov    eax,DWORD PTR [rsi+0x14]
ffffffff8010e385:	48 29 05 f4 7d 00 00 	sub    QWORD PTR [rip+0x7df4],rax        # ffffffff80116180 <l_allocated>
ffffffff8010e38c:	8b 56 10             	mov    edx,DWORD PTR [rsi+0x10]
ffffffff8010e38f:	48 8b 3d 2a 7d 00 00 	mov    rdi,QWORD PTR [rip+0x7d2a]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010e396:	e9 95 47 00 00       	jmp    ffffffff80112b30 <ReleaseVirtualMemoryInAddressSpace>
ffffffff8010e39b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010e3a0:	48 89 4e 20          	mov    QWORD PTR [rsi+0x20],rcx
ffffffff8010e3a4:	e9 3b ff ff ff       	jmp    ffffffff8010e2e4 <ifree+0x74>
ffffffff8010e3a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010e3b0:	48 89 15 d9 7d 00 00 	mov    QWORD PTR [rip+0x7dd9],rdx        # ffffffff80116190 <l_memRoot>
ffffffff8010e3b7:	eb ac                	jmp    ffffffff8010e365 <ifree+0xf5>
ffffffff8010e3b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010e3c0:	48 c7 05 bd 7d 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x7dbd],0x0        # ffffffff80116188 <l_bestBet>
ffffffff8010e3cb:	eb 9d                	jmp    ffffffff8010e36a <ifree+0xfa>
ffffffff8010e3cd:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010e3d0 <free>:
ffffffff8010e3d0:	48 85 ff             	test   rdi,rdi
ffffffff8010e3d3:	0f 84 cf 00 00 00    	je     ffffffff8010e4a8 <free+0xd8>
ffffffff8010e3d9:	48 0f be 57 f0       	movsx  rdx,BYTE PTR [rdi-0x10]
ffffffff8010e3de:	48 89 f8             	mov    rax,rdi
ffffffff8010e3e1:	48 29 d0             	sub    rax,rdx
ffffffff8010e3e4:	48 83 fa 20          	cmp    rdx,0x20
ffffffff8010e3e8:	48 0f 42 f8          	cmovb  rdi,rax
ffffffff8010e3ec:	8b 57 f0             	mov    edx,DWORD PTR [rdi-0x10]
ffffffff8010e3ef:	48 8d 47 d8          	lea    rax,[rdi-0x28]
ffffffff8010e3f3:	81 fa de c0 01 c0    	cmp    edx,0xc001c0de
ffffffff8010e3f9:	75 75                	jne    ffffffff8010e470 <free+0xa0>
ffffffff8010e3fb:	8b 48 1c             	mov    ecx,DWORD PTR [rax+0x1c]
ffffffff8010e3fe:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
ffffffff8010e402:	48 29 0d 6f 7d 00 00 	sub    QWORD PTR [rip+0x7d6f],rcx        # ffffffff80116178 <l_inuse>
ffffffff8010e409:	48 8b 7f d8          	mov    rdi,QWORD PTR [rdi-0x28]
ffffffff8010e40d:	48 89 ca             	mov    rdx,rcx
ffffffff8010e410:	8b 4e 18             	mov    ecx,DWORD PTR [rsi+0x18]
ffffffff8010e413:	29 d1                	sub    ecx,edx
ffffffff8010e415:	89 ca                	mov    edx,ecx
ffffffff8010e417:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
ffffffff8010e41b:	83 ea 28             	sub    edx,0x28
ffffffff8010e41e:	89 56 18             	mov    DWORD PTR [rsi+0x18],edx
ffffffff8010e421:	c7 40 18 ad de ad de 	mov    DWORD PTR [rax+0x18],0xdeaddead
ffffffff8010e428:	48 85 c9             	test   rcx,rcx
ffffffff8010e42b:	74 06                	je     ffffffff8010e433 <free+0x63>
ffffffff8010e42d:	48 89 39             	mov    QWORD PTR [rcx],rdi
ffffffff8010e430:	48 8b 38             	mov    rdi,QWORD PTR [rax]
ffffffff8010e433:	48 85 ff             	test   rdi,rdi
ffffffff8010e436:	0f 84 c4 00 00 00    	je     ffffffff8010e500 <free+0x130>
ffffffff8010e43c:	48 89 4f 08          	mov    QWORD PTR [rdi+0x8],rcx
ffffffff8010e440:	48 8b 4e 20          	mov    rcx,QWORD PTR [rsi+0x20]
ffffffff8010e444:	48 8b 05 3d 7d 00 00 	mov    rax,QWORD PTR [rip+0x7d3d]        # ffffffff80116188 <l_bestBet>
ffffffff8010e44b:	48 85 c9             	test   rcx,rcx
ffffffff8010e44e:	74 68                	je     ffffffff8010e4b8 <free+0xe8>
ffffffff8010e450:	48 85 c0             	test   rax,rax
ffffffff8010e453:	74 3d                	je     ffffffff8010e492 <free+0xc2>
ffffffff8010e455:	8b 48 14             	mov    ecx,DWORD PTR [rax+0x14]
ffffffff8010e458:	2b 48 18             	sub    ecx,DWORD PTR [rax+0x18]
ffffffff8010e45b:	8b 46 14             	mov    eax,DWORD PTR [rsi+0x14]
ffffffff8010e45e:	29 d0                	sub    eax,edx
ffffffff8010e460:	39 c1                	cmp    ecx,eax
ffffffff8010e462:	7d 2e                	jge    ffffffff8010e492 <free+0xc2>
ffffffff8010e464:	48 89 35 1d 7d 00 00 	mov    QWORD PTR [rip+0x7d1d],rsi        # ffffffff80116188 <l_bestBet>
ffffffff8010e46b:	c3                   	ret    
ffffffff8010e46c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010e470:	89 d0                	mov    eax,edx
ffffffff8010e472:	48 83 05 ee 7c 00 00 01 	add    QWORD PTR [rip+0x7cee],0x1        # ffffffff80116168 <l_errorCount>
ffffffff8010e47a:	25 ff ff ff 00       	and    eax,0xffffff
ffffffff8010e47f:	3d de c0 01 00       	cmp    eax,0x1c0de
ffffffff8010e484:	74 12                	je     ffffffff8010e498 <free+0xc8>
ffffffff8010e486:	66 81 fa de c0       	cmp    dx,0xc0de
ffffffff8010e48b:	74 0b                	je     ffffffff8010e498 <free+0xc8>
ffffffff8010e48d:	80 fa de             	cmp    dl,0xde
ffffffff8010e490:	74 06                	je     ffffffff8010e498 <free+0xc8>
ffffffff8010e492:	c3                   	ret    
ffffffff8010e493:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010e498:	48 83 05 c0 7c 00 00 01 	add    QWORD PTR [rip+0x7cc0],0x1        # ffffffff80116160 <l_possibleOverruns>
ffffffff8010e4a0:	c3                   	ret    
ffffffff8010e4a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010e4a8:	48 83 05 c0 7c 00 00 01 	add    QWORD PTR [rip+0x7cc0],0x1        # ffffffff80116170 <l_warningCount>
ffffffff8010e4b0:	c3                   	ret    
ffffffff8010e4b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010e4b8:	48 3b 35 d1 7c 00 00 	cmp    rsi,QWORD PTR [rip+0x7cd1]        # ffffffff80116190 <l_memRoot>
ffffffff8010e4bf:	48 8b 56 08          	mov    rdx,QWORD PTR [rsi+0x8]
ffffffff8010e4c3:	74 4b                	je     ffffffff8010e510 <free+0x140>
ffffffff8010e4c5:	48 39 c6             	cmp    rsi,rax
ffffffff8010e4c8:	74 56                	je     ffffffff8010e520 <free+0x150>
ffffffff8010e4ca:	48 8b 06             	mov    rax,QWORD PTR [rsi]
ffffffff8010e4cd:	48 85 c0             	test   rax,rax
ffffffff8010e4d0:	74 08                	je     ffffffff8010e4da <free+0x10a>
ffffffff8010e4d2:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffffffff8010e4d6:	48 8b 56 08          	mov    rdx,QWORD PTR [rsi+0x8]
ffffffff8010e4da:	48 85 d2             	test   rdx,rdx
ffffffff8010e4dd:	74 03                	je     ffffffff8010e4e2 <free+0x112>
ffffffff8010e4df:	48 89 02             	mov    QWORD PTR [rdx],rax
ffffffff8010e4e2:	8b 46 14             	mov    eax,DWORD PTR [rsi+0x14]
ffffffff8010e4e5:	48 29 05 94 7c 00 00 	sub    QWORD PTR [rip+0x7c94],rax        # ffffffff80116180 <l_allocated>
ffffffff8010e4ec:	8b 56 10             	mov    edx,DWORD PTR [rsi+0x10]
ffffffff8010e4ef:	48 8b 3d ca 7b 00 00 	mov    rdi,QWORD PTR [rip+0x7bca]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010e4f6:	e9 35 46 00 00       	jmp    ffffffff80112b30 <ReleaseVirtualMemoryInAddressSpace>
ffffffff8010e4fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010e500:	48 89 4e 20          	mov    QWORD PTR [rsi+0x20],rcx
ffffffff8010e504:	e9 3b ff ff ff       	jmp    ffffffff8010e444 <free+0x74>
ffffffff8010e509:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010e510:	48 89 15 79 7c 00 00 	mov    QWORD PTR [rip+0x7c79],rdx        # ffffffff80116190 <l_memRoot>
ffffffff8010e517:	eb ac                	jmp    ffffffff8010e4c5 <free+0xf5>
ffffffff8010e519:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010e520:	48 c7 05 5d 7c 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x7c5d],0x0        # ffffffff80116188 <l_bestBet>
ffffffff8010e52b:	eb 9d                	jmp    ffffffff8010e4ca <free+0xfa>
ffffffff8010e52d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010e530 <calloc>:
ffffffff8010e530:	0f af fe             	imul   edi,esi
ffffffff8010e533:	53                   	push   rbx
ffffffff8010e534:	48 63 df             	movsxd rbx,edi
ffffffff8010e537:	48 89 df             	mov    rdi,rbx
ffffffff8010e53a:	e8 01 f8 ff ff       	call   ffffffff8010dd40 <imalloc>
ffffffff8010e53f:	48 85 db             	test   rbx,rbx
ffffffff8010e542:	74 1b                	je     ffffffff8010e55f <calloc+0x2f>
ffffffff8010e544:	31 c9                	xor    ecx,ecx
ffffffff8010e546:	31 d2                	xor    edx,edx
ffffffff8010e548:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010e550:	c6 04 10 00          	mov    BYTE PTR [rax+rdx*1],0x0
ffffffff8010e554:	8d 51 01             	lea    edx,[rcx+0x1]
ffffffff8010e557:	48 89 d1             	mov    rcx,rdx
ffffffff8010e55a:	48 39 d3             	cmp    rbx,rdx
ffffffff8010e55d:	77 f1                	ja     ffffffff8010e550 <calloc+0x20>
ffffffff8010e55f:	5b                   	pop    rbx
ffffffff8010e560:	c3                   	ret    
ffffffff8010e561:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010e56c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010e570 <realloc>:
ffffffff8010e570:	41 54                	push   r12
ffffffff8010e572:	55                   	push   rbp
ffffffff8010e573:	48 89 fd             	mov    rbp,rdi
ffffffff8010e576:	53                   	push   rbx
ffffffff8010e577:	48 85 f6             	test   rsi,rsi
ffffffff8010e57a:	0f 84 70 01 00 00    	je     ffffffff8010e6f0 <realloc+0x180>
ffffffff8010e580:	48 85 ff             	test   rdi,rdi
ffffffff8010e583:	0f 84 77 01 00 00    	je     ffffffff8010e700 <realloc+0x190>
ffffffff8010e589:	48 0f be 57 f0       	movsx  rdx,BYTE PTR [rdi-0x10]
ffffffff8010e58e:	48 89 f8             	mov    rax,rdi
ffffffff8010e591:	48 29 d0             	sub    rax,rdx
ffffffff8010e594:	48 83 fa 20          	cmp    rdx,0x20
ffffffff8010e598:	48 0f 43 c7          	cmovae rax,rdi
ffffffff8010e59c:	8b 50 f0             	mov    edx,DWORD PTR [rax-0x10]
ffffffff8010e59f:	48 83 e8 28          	sub    rax,0x28
ffffffff8010e5a3:	81 fa de c0 01 c0    	cmp    edx,0xc001c0de
ffffffff8010e5a9:	0f 85 01 01 00 00    	jne    ffffffff8010e6b0 <realloc+0x140>
ffffffff8010e5af:	8b 58 20             	mov    ebx,DWORD PTR [rax+0x20]
ffffffff8010e5b2:	48 39 f3             	cmp    rbx,rsi
ffffffff8010e5b5:	72 11                	jb     ffffffff8010e5c8 <realloc+0x58>
ffffffff8010e5b7:	89 70 20             	mov    DWORD PTR [rax+0x20],esi
ffffffff8010e5ba:	49 89 fc             	mov    r12,rdi
ffffffff8010e5bd:	4c 89 e0             	mov    rax,r12
ffffffff8010e5c0:	5b                   	pop    rbx
ffffffff8010e5c1:	5d                   	pop    rbp
ffffffff8010e5c2:	41 5c                	pop    r12
ffffffff8010e5c4:	c3                   	ret    
ffffffff8010e5c5:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010e5c8:	48 89 f7             	mov    rdi,rsi
ffffffff8010e5cb:	e8 70 f7 ff ff       	call   ffffffff8010dd40 <imalloc>
ffffffff8010e5d0:	49 89 c4             	mov    r12,rax
ffffffff8010e5d3:	48 83 fb 03          	cmp    rbx,0x3
ffffffff8010e5d7:	0f 86 63 01 00 00    	jbe    ffffffff8010e740 <realloc+0x1d0>
ffffffff8010e5dd:	48 8d 45 07          	lea    rax,[rbp+0x7]
ffffffff8010e5e1:	48 83 eb 04          	sub    rbx,0x4
ffffffff8010e5e5:	4c 29 e0             	sub    rax,r12
ffffffff8010e5e8:	48 83 f8 0e          	cmp    rax,0xe
ffffffff8010e5ec:	0f 97 c2             	seta   dl
ffffffff8010e5ef:	48 83 fb 13          	cmp    rbx,0x13
ffffffff8010e5f3:	0f 97 c0             	seta   al
ffffffff8010e5f6:	84 c2                	test   dl,al
ffffffff8010e5f8:	0f 84 12 01 00 00    	je     ffffffff8010e710 <realloc+0x1a0>
ffffffff8010e5fe:	48 89 e8             	mov    rax,rbp
ffffffff8010e601:	4c 09 e0             	or     rax,r12
ffffffff8010e604:	a8 07                	test   al,0x7
ffffffff8010e606:	0f 85 04 01 00 00    	jne    ffffffff8010e710 <realloc+0x1a0>
ffffffff8010e60c:	48 89 de             	mov    rsi,rbx
ffffffff8010e60f:	31 d2                	xor    edx,edx
ffffffff8010e611:	48 c1 ee 02          	shr    rsi,0x2
ffffffff8010e615:	48 83 c6 01          	add    rsi,0x1
ffffffff8010e619:	48 89 f1             	mov    rcx,rsi
ffffffff8010e61c:	48 d1 e9             	shr    rcx,1
ffffffff8010e61f:	48 c1 e1 03          	shl    rcx,0x3
ffffffff8010e623:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010e628:	48 8b 44 15 00       	mov    rax,QWORD PTR [rbp+rdx*1+0x0]
ffffffff8010e62d:	49 89 04 14          	mov    QWORD PTR [r12+rdx*1],rax
ffffffff8010e631:	48 83 c2 08          	add    rdx,0x8
ffffffff8010e635:	48 39 ca             	cmp    rdx,rcx
ffffffff8010e638:	75 ee                	jne    ffffffff8010e628 <realloc+0xb8>
ffffffff8010e63a:	48 89 f1             	mov    rcx,rsi
ffffffff8010e63d:	48 83 e1 fe          	and    rcx,0xfffffffffffffffe
ffffffff8010e641:	48 8d 04 8d 00 00 00 00 	lea    rax,[rcx*4+0x0]
ffffffff8010e649:	49 8d 14 04          	lea    rdx,[r12+rax*1]
ffffffff8010e64d:	48 01 e8             	add    rax,rbp
ffffffff8010e650:	48 39 ce             	cmp    rsi,rcx
ffffffff8010e653:	74 04                	je     ffffffff8010e659 <realloc+0xe9>
ffffffff8010e655:	8b 00                	mov    eax,DWORD PTR [rax]
ffffffff8010e657:	89 02                	mov    DWORD PTR [rdx],eax
ffffffff8010e659:	48 89 da             	mov    rdx,rbx
ffffffff8010e65c:	48 c1 ea 02          	shr    rdx,0x2
ffffffff8010e660:	48 8d 04 95 04 00 00 00 	lea    rax,[rdx*4+0x4]
ffffffff8010e668:	48 f7 da             	neg    rdx
ffffffff8010e66b:	49 8d 0c 04          	lea    rcx,[r12+rax*1]
ffffffff8010e66f:	48 8d 1c 93          	lea    rbx,[rbx+rdx*4]
ffffffff8010e673:	48 01 e8             	add    rax,rbp
ffffffff8010e676:	48 85 db             	test   rbx,rbx
ffffffff8010e679:	74 1f                	je     ffffffff8010e69a <realloc+0x12a>
ffffffff8010e67b:	0f b6 10             	movzx  edx,BYTE PTR [rax]
ffffffff8010e67e:	88 11                	mov    BYTE PTR [rcx],dl
ffffffff8010e680:	48 83 eb 01          	sub    rbx,0x1
ffffffff8010e684:	74 14                	je     ffffffff8010e69a <realloc+0x12a>
ffffffff8010e686:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
ffffffff8010e68a:	88 51 01             	mov    BYTE PTR [rcx+0x1],dl
ffffffff8010e68d:	48 83 fb 01          	cmp    rbx,0x1
ffffffff8010e691:	74 07                	je     ffffffff8010e69a <realloc+0x12a>
ffffffff8010e693:	0f b6 40 02          	movzx  eax,BYTE PTR [rax+0x2]
ffffffff8010e697:	88 41 02             	mov    BYTE PTR [rcx+0x2],al
ffffffff8010e69a:	48 89 ef             	mov    rdi,rbp
ffffffff8010e69d:	e8 ce fb ff ff       	call   ffffffff8010e270 <ifree>
ffffffff8010e6a2:	4c 89 e0             	mov    rax,r12
ffffffff8010e6a5:	5b                   	pop    rbx
ffffffff8010e6a6:	5d                   	pop    rbp
ffffffff8010e6a7:	41 5c                	pop    r12
ffffffff8010e6a9:	c3                   	ret    
ffffffff8010e6aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010e6b0:	89 d0                	mov    eax,edx
ffffffff8010e6b2:	48 83 05 ae 7a 00 00 01 	add    QWORD PTR [rip+0x7aae],0x1        # ffffffff80116168 <l_errorCount>
ffffffff8010e6ba:	25 ff ff ff 00       	and    eax,0xffffff
ffffffff8010e6bf:	3d de c0 01 00       	cmp    eax,0x1c0de
ffffffff8010e6c4:	74 13                	je     ffffffff8010e6d9 <realloc+0x169>
ffffffff8010e6c6:	66 81 fa de c0       	cmp    dx,0xc0de
ffffffff8010e6cb:	74 0c                	je     ffffffff8010e6d9 <realloc+0x169>
ffffffff8010e6cd:	45 31 e4             	xor    r12d,r12d
ffffffff8010e6d0:	80 fa de             	cmp    dl,0xde
ffffffff8010e6d3:	0f 85 e4 fe ff ff    	jne    ffffffff8010e5bd <realloc+0x4d>
ffffffff8010e6d9:	45 31 e4             	xor    r12d,r12d
ffffffff8010e6dc:	5b                   	pop    rbx
ffffffff8010e6dd:	48 83 05 7b 7a 00 00 01 	add    QWORD PTR [rip+0x7a7b],0x1        # ffffffff80116160 <l_possibleOverruns>
ffffffff8010e6e5:	4c 89 e0             	mov    rax,r12
ffffffff8010e6e8:	5d                   	pop    rbp
ffffffff8010e6e9:	41 5c                	pop    r12
ffffffff8010e6eb:	c3                   	ret    
ffffffff8010e6ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010e6f0:	e8 7b fb ff ff       	call   ffffffff8010e270 <ifree>
ffffffff8010e6f5:	45 31 e4             	xor    r12d,r12d
ffffffff8010e6f8:	e9 c0 fe ff ff       	jmp    ffffffff8010e5bd <realloc+0x4d>
ffffffff8010e6fd:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010e700:	5b                   	pop    rbx
ffffffff8010e701:	48 89 f7             	mov    rdi,rsi
ffffffff8010e704:	5d                   	pop    rbp
ffffffff8010e705:	41 5c                	pop    r12
ffffffff8010e707:	e9 34 f6 ff ff       	jmp    ffffffff8010dd40 <imalloc>
ffffffff8010e70c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010e710:	48 89 d8             	mov    rax,rbx
ffffffff8010e713:	48 c1 e8 02          	shr    rax,0x2
ffffffff8010e717:	48 8d 0c 85 04 00 00 00 	lea    rcx,[rax*4+0x4]
ffffffff8010e71f:	31 c0                	xor    eax,eax
ffffffff8010e721:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010e728:	8b 54 05 00          	mov    edx,DWORD PTR [rbp+rax*1+0x0]
ffffffff8010e72c:	41 89 14 04          	mov    DWORD PTR [r12+rax*1],edx
ffffffff8010e730:	48 83 c0 04          	add    rax,0x4
ffffffff8010e734:	48 39 c8             	cmp    rax,rcx
ffffffff8010e737:	75 ef                	jne    ffffffff8010e728 <realloc+0x1b8>
ffffffff8010e739:	e9 1b ff ff ff       	jmp    ffffffff8010e659 <realloc+0xe9>
ffffffff8010e73e:	66 90                	xchg   ax,ax
ffffffff8010e740:	48 89 e8             	mov    rax,rbp
ffffffff8010e743:	4c 89 e1             	mov    rcx,r12
ffffffff8010e746:	e9 2b ff ff ff       	jmp    ffffffff8010e676 <realloc+0x106>
ffffffff8010e74b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010e750 <liballoc_lock>:
ffffffff8010e750:	31 c0                	xor    eax,eax
ffffffff8010e752:	c3                   	ret    
ffffffff8010e753:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010e75e:	66 90                	xchg   ax,ax

ffffffff8010e760 <liballoc_unlock>:
ffffffff8010e760:	31 c0                	xor    eax,eax
ffffffff8010e762:	c3                   	ret    
ffffffff8010e763:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010e76e:	66 90                	xchg   ax,ax

ffffffff8010e770 <liballoc_alloc>:
ffffffff8010e770:	48 89 fe             	mov    rsi,rdi
ffffffff8010e773:	48 8b 3d 46 79 00 00 	mov    rdi,QWORD PTR [rip+0x7946]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010e77a:	e9 51 4d 00 00       	jmp    ffffffff801134d0 <AllocateVirtualMemoryInAddressSpace>
ffffffff8010e77f:	90                   	nop

ffffffff8010e780 <liballoc_free>:
ffffffff8010e780:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010e784:	48 89 f2             	mov    rdx,rsi
ffffffff8010e787:	48 89 fe             	mov    rsi,rdi
ffffffff8010e78a:	48 8b 3d 2f 79 00 00 	mov    rdi,QWORD PTR [rip+0x792f]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010e791:	e8 9a 43 00 00       	call   ffffffff80112b30 <ReleaseVirtualMemoryInAddressSpace>
ffffffff8010e796:	31 c0                	xor    eax,eax
ffffffff8010e798:	48 83 c4 08          	add    rsp,0x8
ffffffff8010e79c:	c3                   	ret    
ffffffff8010e79d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010e7a0 <kmain>:
ffffffff8010e7a0:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010e7a4:	81 3d c9 19 ff 7f 89 62 d7 36 	cmp    DWORD PTR [rip+0x7fff19c9],0x36d76289        # 100177 <MultibootInfo>
ffffffff8010e7ae:	74 0d                	je     ffffffff8010e7bd <kmain+0x1d>
ffffffff8010e7b0:	48 c7 c7 e8 54 11 80 	mov    rdi,0xffffffff801154e8
ffffffff8010e7b7:	e8 94 29 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010e7bc:	f4                   	hlt    
ffffffff8010e7bd:	31 c0                	xor    eax,eax
ffffffff8010e7bf:	e8 4c 0b 00 00       	call   ffffffff8010f310 <InitializePhysicalAllocator>
ffffffff8010e7c4:	31 c0                	xor    eax,eax
ffffffff8010e7c6:	e8 45 4b 00 00       	call   ffffffff80113310 <InitializeVirtualAllocator>
ffffffff8010e7cb:	31 c0                	xor    eax,eax
ffffffff8010e7cd:	e8 7e 09 00 00       	call   ffffffff8010f150 <InitializeObjectPools>
ffffffff8010e7d2:	31 c0                	xor    eax,eax
ffffffff8010e7d4:	e8 e7 32 00 00       	call   ffffffff80111ac0 <InitializeTss>
ffffffff8010e7d9:	31 c0                	xor    eax,eax
ffffffff8010e7db:	e8 70 eb ff ff       	call   ffffffff8010d350 <InitializeInterrupts>
ffffffff8010e7e0:	31 c0                	xor    eax,eax
ffffffff8010e7e2:	e8 b9 1f 00 00       	call   ffffffff801107a0 <InitializeSystemCalls>
ffffffff8010e7e7:	31 c0                	xor    eax,eax
ffffffff8010e7e9:	e8 a2 0d 00 00       	call   ffffffff8010f590 <InitializeProcesses>
ffffffff8010e7ee:	31 c0                	xor    eax,eax
ffffffff8010e7f0:	e8 9b 2c 00 00       	call   ffffffff80111490 <InitializeThreads>
ffffffff8010e7f5:	31 c0                	xor    eax,eax
ffffffff8010e7f7:	e8 94 17 00 00       	call   ffffffff8010ff90 <InitializeServices>
ffffffff8010e7fc:	31 c0                	xor    eax,eax
ffffffff8010e7fe:	e8 4d 15 00 00       	call   ffffffff8010fd50 <InitializeScheduler>
ffffffff8010e803:	31 c0                	xor    eax,eax
ffffffff8010e805:	e8 76 32 00 00       	call   ffffffff80111a80 <InitializeTimer>
ffffffff8010e80a:	31 c0                	xor    eax,eax
ffffffff8010e80c:	e8 1f 07 00 00       	call   ffffffff8010ef30 <LoadMultibootModules>
ffffffff8010e811:	31 c0                	xor    eax,eax
ffffffff8010e813:	e8 f8 e4 ff ff       	call   ffffffff8010cd10 <MaybeLoadFramebuffer>
ffffffff8010e818:	31 c0                	xor    eax,eax
ffffffff8010e81a:	e8 61 0c 00 00       	call   ffffffff8010f480 <DoneWithMultibootMemory>
ffffffff8010e81f:	fb                   	sti    
ffffffff8010e820:	f4                   	hlt    
ffffffff8010e821:	eb fd                	jmp    ffffffff8010e820 <kmain+0x80>
ffffffff8010e823:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010e82d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010e830 <LoadMessageIntoThread>:
ffffffff8010e830:	48 8b 46 10          	mov    rax,QWORD PTR [rsi+0x10]
ffffffff8010e834:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
ffffffff8010e837:	48 8b 4f 08          	mov    rcx,QWORD PTR [rdi+0x8]
ffffffff8010e83b:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff8010e83f:	48 89 48 58          	mov    QWORD PTR [rax+0x58],rcx
ffffffff8010e843:	48 8b 57 10          	mov    rdx,QWORD PTR [rdi+0x10]
ffffffff8010e847:	48 8b 4f 18          	mov    rcx,QWORD PTR [rdi+0x18]
ffffffff8010e84b:	48 8b 77 20          	mov    rsi,QWORD PTR [rdi+0x20]
ffffffff8010e84f:	4c 8b 47 28          	mov    r8,QWORD PTR [rdi+0x28]
ffffffff8010e853:	4c 8b 4f 30          	mov    r9,QWORD PTR [rdi+0x30]
ffffffff8010e857:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
ffffffff8010e85b:	48 89 70 38          	mov    QWORD PTR [rax+0x38],rsi
ffffffff8010e85f:	4c 89 48 28          	mov    QWORD PTR [rax+0x28],r9
ffffffff8010e863:	4c 89 40 30          	mov    QWORD PTR [rax+0x30],r8
ffffffff8010e867:	48 89 48 40          	mov    QWORD PTR [rax+0x40],rcx
ffffffff8010e86b:	48 8b 57 38          	mov    rdx,QWORD PTR [rdi+0x38]
ffffffff8010e86f:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff8010e873:	e9 c8 07 00 00       	jmp    ffffffff8010f040 <ReleaseMessage>
ffffffff8010e878:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010e880 <IsPagingMessage>:
ffffffff8010e880:	53                   	push   rbx
ffffffff8010e881:	48 89 fb             	mov    rbx,rdi
ffffffff8010e884:	83 e3 01             	and    ebx,0x1
ffffffff8010e887:	75 07                	jne    ffffffff8010e890 <IsPagingMessage+0x10>
ffffffff8010e889:	89 d8                	mov    eax,ebx
ffffffff8010e88b:	5b                   	pop    rbx
ffffffff8010e88c:	c3                   	ret    
ffffffff8010e88d:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010e890:	48 c7 c7 18 55 11 80 	mov    rdi,0xffffffff80115518
ffffffff8010e897:	e8 b4 28 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010e89c:	89 d8                	mov    eax,ebx
ffffffff8010e89e:	5b                   	pop    rbx
ffffffff8010e89f:	c3                   	ret    

ffffffff8010e8a0 <SendMessageToProcess>:
ffffffff8010e8a0:	41 54                	push   r12
ffffffff8010e8a2:	55                   	push   rbp
ffffffff8010e8a3:	48 89 fd             	mov    rbp,rdi
ffffffff8010e8a6:	53                   	push   rbx
ffffffff8010e8a7:	4c 8b a6 90 00 00 00 	mov    r12,QWORD PTR [rsi+0x90]
ffffffff8010e8ae:	48 89 f3             	mov    rbx,rsi
ffffffff8010e8b1:	4d 85 e4             	test   r12,r12
ffffffff8010e8b4:	0f 84 a6 00 00 00    	je     ffffffff8010e960 <SendMessageToProcess+0xc0>
ffffffff8010e8ba:	48 83 be 88 00 00 00 00 	cmp    QWORD PTR [rsi+0x88],0x0
ffffffff8010e8c2:	0f 85 e0 00 00 00    	jne    ffffffff8010e9a8 <SendMessageToProcess+0x108>
ffffffff8010e8c8:	49 8b 84 24 68 02 00 00 	mov    rax,QWORD PTR [r12+0x268]
ffffffff8010e8d0:	48 89 83 90 00 00 00 	mov    QWORD PTR [rbx+0x90],rax
ffffffff8010e8d7:	41 f6 84 24 70 02 00 00 01 	test   BYTE PTR [r12+0x270],0x1
ffffffff8010e8e0:	0f 84 da 00 00 00    	je     ffffffff8010e9c0 <SendMessageToProcess+0x120>
ffffffff8010e8e6:	41 f6 84 24 48 02 00 00 01 	test   BYTE PTR [r12+0x248],0x1
ffffffff8010e8ef:	0f 85 9b 00 00 00    	jne    ffffffff8010e990 <SendMessageToProcess+0xf0>
ffffffff8010e8f5:	48 8b 55 00          	mov    rdx,QWORD PTR [rbp+0x0]
ffffffff8010e8f9:	48 8b 4d 08          	mov    rcx,QWORD PTR [rbp+0x8]
ffffffff8010e8fd:	49 8b 44 24 10       	mov    rax,QWORD PTR [r12+0x10]
ffffffff8010e902:	48 89 48 58          	mov    QWORD PTR [rax+0x58],rcx
ffffffff8010e906:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff8010e90a:	48 8b 55 10          	mov    rdx,QWORD PTR [rbp+0x10]
ffffffff8010e90e:	48 8b 7d 28          	mov    rdi,QWORD PTR [rbp+0x28]
ffffffff8010e912:	48 8b 4d 18          	mov    rcx,QWORD PTR [rbp+0x18]
ffffffff8010e916:	48 8b 75 20          	mov    rsi,QWORD PTR [rbp+0x20]
ffffffff8010e91a:	4c 8b 45 30          	mov    r8,QWORD PTR [rbp+0x30]
ffffffff8010e91e:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
ffffffff8010e922:	48 89 78 30          	mov    QWORD PTR [rax+0x30],rdi
ffffffff8010e926:	48 89 ef             	mov    rdi,rbp
ffffffff8010e929:	4c 89 40 28          	mov    QWORD PTR [rax+0x28],r8
ffffffff8010e92d:	48 89 70 38          	mov    QWORD PTR [rax+0x38],rsi
ffffffff8010e931:	48 89 48 40          	mov    QWORD PTR [rax+0x40],rcx
ffffffff8010e935:	48 8b 55 38          	mov    rdx,QWORD PTR [rbp+0x38]
ffffffff8010e939:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff8010e93d:	e8 fe 06 00 00       	call   ffffffff8010f040 <ReleaseMessage>
ffffffff8010e942:	4c 89 e7             	mov    rdi,r12
ffffffff8010e945:	41 80 a4 24 70 02 00 00 fe 	and    BYTE PTR [r12+0x270],0xfe
ffffffff8010e94e:	5b                   	pop    rbx
ffffffff8010e94f:	5d                   	pop    rbp
ffffffff8010e950:	41 5c                	pop    r12
ffffffff8010e952:	e9 29 15 00 00       	jmp    ffffffff8010fe80 <ScheduleThread>
ffffffff8010e957:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010e960:	48 8b 86 80 00 00 00 	mov    rax,QWORD PTR [rsi+0x80]
ffffffff8010e967:	48 85 c0             	test   rax,rax
ffffffff8010e96a:	74 74                	je     ffffffff8010e9e0 <SendMessageToProcess+0x140>
ffffffff8010e96c:	48 89 78 40          	mov    QWORD PTR [rax+0x40],rdi
ffffffff8010e970:	48 89 bb 80 00 00 00 	mov    QWORD PTR [rbx+0x80],rdi
ffffffff8010e977:	48 83 86 88 00 00 00 01 	add    QWORD PTR [rsi+0x88],0x1
ffffffff8010e97f:	5b                   	pop    rbx
ffffffff8010e980:	48 c7 45 40 00 00 00 00 	mov    QWORD PTR [rbp+0x40],0x0
ffffffff8010e988:	5d                   	pop    rbp
ffffffff8010e989:	41 5c                	pop    r12
ffffffff8010e98b:	c3                   	ret    
ffffffff8010e98c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010e990:	48 c7 c7 c0 55 11 80 	mov    rdi,0xffffffff801155c0
ffffffff8010e997:	e8 b4 27 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010e99c:	e9 54 ff ff ff       	jmp    ffffffff8010e8f5 <SendMessageToProcess+0x55>
ffffffff8010e9a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010e9a8:	48 c7 c7 48 55 11 80 	mov    rdi,0xffffffff80115548
ffffffff8010e9af:	e8 9c 27 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010e9b4:	4c 8b a3 90 00 00 00 	mov    r12,QWORD PTR [rbx+0x90]
ffffffff8010e9bb:	e9 08 ff ff ff       	jmp    ffffffff8010e8c8 <SendMessageToProcess+0x28>
ffffffff8010e9c0:	48 c7 c7 98 55 11 80 	mov    rdi,0xffffffff80115598
ffffffff8010e9c7:	e8 84 27 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010e9cc:	41 f6 84 24 48 02 00 00 01 	test   BYTE PTR [r12+0x248],0x1
ffffffff8010e9d5:	0f 84 1a ff ff ff    	je     ffffffff8010e8f5 <SendMessageToProcess+0x55>
ffffffff8010e9db:	eb b3                	jmp    ffffffff8010e990 <SendMessageToProcess+0xf0>
ffffffff8010e9dd:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010e9e0:	48 89 7b 78          	mov    QWORD PTR [rbx+0x78],rdi
ffffffff8010e9e4:	48 89 bb 80 00 00 00 	mov    QWORD PTR [rbx+0x80],rdi
ffffffff8010e9eb:	48 c7 86 88 00 00 00 01 00 00 00 	mov    QWORD PTR [rsi+0x88],0x1
ffffffff8010e9f6:	5b                   	pop    rbx
ffffffff8010e9f7:	48 c7 45 40 00 00 00 00 	mov    QWORD PTR [rbp+0x40],0x0
ffffffff8010e9ff:	5d                   	pop    rbp
ffffffff8010ea00:	41 5c                	pop    r12
ffffffff8010ea02:	c3                   	ret    
ffffffff8010ea03:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010ea0e:	66 90                	xchg   ax,ax

ffffffff8010ea10 <CanProcessReceiveMessage>:
ffffffff8010ea10:	48 81 bf 88 00 00 00 ff 03 00 00 	cmp    QWORD PTR [rdi+0x88],0x3ff
ffffffff8010ea1b:	0f 96 c0             	setbe  al
ffffffff8010ea1e:	c3                   	ret    
ffffffff8010ea1f:	90                   	nop

ffffffff8010ea20 <SendKernelMessageToProcess>:
ffffffff8010ea20:	41 57                	push   r15
ffffffff8010ea22:	41 56                	push   r14
ffffffff8010ea24:	49 89 ce             	mov    r14,rcx
ffffffff8010ea27:	41 55                	push   r13
ffffffff8010ea29:	41 54                	push   r12
ffffffff8010ea2b:	55                   	push   rbp
ffffffff8010ea2c:	53                   	push   rbx
ffffffff8010ea2d:	48 83 ec 18          	sub    rsp,0x18
ffffffff8010ea31:	48 81 bf 88 00 00 00 ff 03 00 00 	cmp    QWORD PTR [rdi+0x88],0x3ff
ffffffff8010ea3c:	48 8b 4c 24 50       	mov    rcx,QWORD PTR [rsp+0x50]
ffffffff8010ea41:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
ffffffff8010ea46:	48 89 0c 24          	mov    QWORD PTR [rsp],rcx
ffffffff8010ea4a:	76 14                	jbe    ffffffff8010ea60 <SendKernelMessageToProcess+0x40>
ffffffff8010ea4c:	48 83 c4 18          	add    rsp,0x18
ffffffff8010ea50:	5b                   	pop    rbx
ffffffff8010ea51:	5d                   	pop    rbp
ffffffff8010ea52:	41 5c                	pop    r12
ffffffff8010ea54:	41 5d                	pop    r13
ffffffff8010ea56:	41 5e                	pop    r14
ffffffff8010ea58:	41 5f                	pop    r15
ffffffff8010ea5a:	c3                   	ret    
ffffffff8010ea5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010ea60:	31 c0                	xor    eax,eax
ffffffff8010ea62:	48 89 fb             	mov    rbx,rdi
ffffffff8010ea65:	49 89 f7             	mov    r15,rsi
ffffffff8010ea68:	4d 89 c5             	mov    r13,r8
ffffffff8010ea6b:	4d 89 cc             	mov    r12,r9
ffffffff8010ea6e:	e8 9d 05 00 00       	call   ffffffff8010f010 <AllocateMessage>
ffffffff8010ea73:	48 89 c5             	mov    rbp,rax
ffffffff8010ea76:	48 85 c0             	test   rax,rax
ffffffff8010ea79:	74 d1                	je     ffffffff8010ea4c <SendKernelMessageToProcess+0x2c>
ffffffff8010ea7b:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
ffffffff8010ea80:	48 8b 0c 24          	mov    rcx,QWORD PTR [rsp]
ffffffff8010ea84:	4c 89 60 30          	mov    QWORD PTR [rax+0x30],r12
ffffffff8010ea88:	4c 8b a3 90 00 00 00 	mov    r12,QWORD PTR [rbx+0x90]
ffffffff8010ea8f:	4c 89 38             	mov    QWORD PTR [rax],r15
ffffffff8010ea92:	48 c7 40 08 00 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
ffffffff8010ea9a:	48 c7 40 10 00 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
ffffffff8010eaa2:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff8010eaa6:	4c 89 70 20          	mov    QWORD PTR [rax+0x20],r14
ffffffff8010eaaa:	4c 89 68 28          	mov    QWORD PTR [rax+0x28],r13
ffffffff8010eaae:	48 89 48 38          	mov    QWORD PTR [rax+0x38],rcx
ffffffff8010eab2:	4d 85 e4             	test   r12,r12
ffffffff8010eab5:	0f 84 ad 00 00 00    	je     ffffffff8010eb68 <SendKernelMessageToProcess+0x148>
ffffffff8010eabb:	48 83 bb 88 00 00 00 00 	cmp    QWORD PTR [rbx+0x88],0x0
ffffffff8010eac3:	0f 85 07 01 00 00    	jne    ffffffff8010ebd0 <SendKernelMessageToProcess+0x1b0>
ffffffff8010eac9:	49 8b 84 24 68 02 00 00 	mov    rax,QWORD PTR [r12+0x268]
ffffffff8010ead1:	48 89 83 90 00 00 00 	mov    QWORD PTR [rbx+0x90],rax
ffffffff8010ead8:	41 f6 84 24 70 02 00 00 01 	test   BYTE PTR [r12+0x270],0x1
ffffffff8010eae1:	0f 84 d1 00 00 00    	je     ffffffff8010ebb8 <SendKernelMessageToProcess+0x198>
ffffffff8010eae7:	41 f6 84 24 48 02 00 00 01 	test   BYTE PTR [r12+0x248],0x1
ffffffff8010eaf0:	0f 85 aa 00 00 00    	jne    ffffffff8010eba0 <SendKernelMessageToProcess+0x180>
ffffffff8010eaf6:	48 8b 55 00          	mov    rdx,QWORD PTR [rbp+0x0]
ffffffff8010eafa:	48 8b 4d 08          	mov    rcx,QWORD PTR [rbp+0x8]
ffffffff8010eafe:	49 8b 44 24 10       	mov    rax,QWORD PTR [r12+0x10]
ffffffff8010eb03:	48 89 48 58          	mov    QWORD PTR [rax+0x58],rcx
ffffffff8010eb07:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff8010eb0b:	48 8b 55 10          	mov    rdx,QWORD PTR [rbp+0x10]
ffffffff8010eb0f:	48 8b 7d 28          	mov    rdi,QWORD PTR [rbp+0x28]
ffffffff8010eb13:	48 8b 4d 18          	mov    rcx,QWORD PTR [rbp+0x18]
ffffffff8010eb17:	48 8b 75 20          	mov    rsi,QWORD PTR [rbp+0x20]
ffffffff8010eb1b:	4c 8b 45 30          	mov    r8,QWORD PTR [rbp+0x30]
ffffffff8010eb1f:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
ffffffff8010eb23:	48 89 78 30          	mov    QWORD PTR [rax+0x30],rdi
ffffffff8010eb27:	48 89 ef             	mov    rdi,rbp
ffffffff8010eb2a:	4c 89 40 28          	mov    QWORD PTR [rax+0x28],r8
ffffffff8010eb2e:	48 89 70 38          	mov    QWORD PTR [rax+0x38],rsi
ffffffff8010eb32:	48 89 48 40          	mov    QWORD PTR [rax+0x40],rcx
ffffffff8010eb36:	48 8b 55 38          	mov    rdx,QWORD PTR [rbp+0x38]
ffffffff8010eb3a:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff8010eb3e:	e8 fd 04 00 00       	call   ffffffff8010f040 <ReleaseMessage>
ffffffff8010eb43:	4c 89 e7             	mov    rdi,r12
ffffffff8010eb46:	41 80 a4 24 70 02 00 00 fe 	and    BYTE PTR [r12+0x270],0xfe
ffffffff8010eb4f:	48 83 c4 18          	add    rsp,0x18
ffffffff8010eb53:	5b                   	pop    rbx
ffffffff8010eb54:	5d                   	pop    rbp
ffffffff8010eb55:	41 5c                	pop    r12
ffffffff8010eb57:	41 5d                	pop    r13
ffffffff8010eb59:	41 5e                	pop    r14
ffffffff8010eb5b:	41 5f                	pop    r15
ffffffff8010eb5d:	e9 1e 13 00 00       	jmp    ffffffff8010fe80 <ScheduleThread>
ffffffff8010eb62:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010eb68:	48 8b 83 80 00 00 00 	mov    rax,QWORD PTR [rbx+0x80]
ffffffff8010eb6f:	48 85 c0             	test   rax,rax
ffffffff8010eb72:	74 7c                	je     ffffffff8010ebf0 <SendKernelMessageToProcess+0x1d0>
ffffffff8010eb74:	48 89 68 40          	mov    QWORD PTR [rax+0x40],rbp
ffffffff8010eb78:	48 83 83 88 00 00 00 01 	add    QWORD PTR [rbx+0x88],0x1
ffffffff8010eb80:	48 89 ab 80 00 00 00 	mov    QWORD PTR [rbx+0x80],rbp
ffffffff8010eb87:	48 c7 45 40 00 00 00 00 	mov    QWORD PTR [rbp+0x40],0x0
ffffffff8010eb8f:	48 83 c4 18          	add    rsp,0x18
ffffffff8010eb93:	5b                   	pop    rbx
ffffffff8010eb94:	5d                   	pop    rbp
ffffffff8010eb95:	41 5c                	pop    r12
ffffffff8010eb97:	41 5d                	pop    r13
ffffffff8010eb99:	41 5e                	pop    r14
ffffffff8010eb9b:	41 5f                	pop    r15
ffffffff8010eb9d:	c3                   	ret    
ffffffff8010eb9e:	66 90                	xchg   ax,ax
ffffffff8010eba0:	48 c7 c7 c0 55 11 80 	mov    rdi,0xffffffff801155c0
ffffffff8010eba7:	e8 a4 25 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010ebac:	e9 45 ff ff ff       	jmp    ffffffff8010eaf6 <SendKernelMessageToProcess+0xd6>
ffffffff8010ebb1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010ebb8:	48 c7 c7 98 55 11 80 	mov    rdi,0xffffffff80115598
ffffffff8010ebbf:	e8 8c 25 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010ebc4:	e9 1e ff ff ff       	jmp    ffffffff8010eae7 <SendKernelMessageToProcess+0xc7>
ffffffff8010ebc9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010ebd0:	48 c7 c7 48 55 11 80 	mov    rdi,0xffffffff80115548
ffffffff8010ebd7:	e8 74 25 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010ebdc:	4c 8b a3 90 00 00 00 	mov    r12,QWORD PTR [rbx+0x90]
ffffffff8010ebe3:	e9 e1 fe ff ff       	jmp    ffffffff8010eac9 <SendKernelMessageToProcess+0xa9>
ffffffff8010ebe8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010ebf0:	48 89 6b 78          	mov    QWORD PTR [rbx+0x78],rbp
ffffffff8010ebf4:	48 89 ab 80 00 00 00 	mov    QWORD PTR [rbx+0x80],rbp
ffffffff8010ebfb:	48 c7 83 88 00 00 00 01 00 00 00 	mov    QWORD PTR [rbx+0x88],0x1
ffffffff8010ec06:	e9 7c ff ff ff       	jmp    ffffffff8010eb87 <SendKernelMessageToProcess+0x167>
ffffffff8010ec0b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010ec10 <SendMessageFromThreadSyscall>:
ffffffff8010ec10:	41 55                	push   r13
ffffffff8010ec12:	41 54                	push   r12
ffffffff8010ec14:	55                   	push   rbp
ffffffff8010ec15:	53                   	push   rbx
ffffffff8010ec16:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010ec1a:	4c 8b 6f 08          	mov    r13,QWORD PTR [rdi+0x8]
ffffffff8010ec1e:	48 8b 5f 10          	mov    rbx,QWORD PTR [rdi+0x10]
ffffffff8010ec22:	4d 89 ec             	mov    r12,r13
ffffffff8010ec25:	48 8b 7b 58          	mov    rdi,QWORD PTR [rbx+0x58]
ffffffff8010ec29:	49 3b 7d 00          	cmp    rdi,QWORD PTR [r13+0x0]
ffffffff8010ec2d:	0f 85 9d 00 00 00    	jne    ffffffff8010ecd0 <SendMessageFromThreadSyscall+0xc0>
ffffffff8010ec33:	49 81 bc 24 88 00 00 00 ff 03 00 00 	cmp    QWORD PTR [r12+0x88],0x3ff
ffffffff8010ec3f:	76 17                	jbe    ffffffff8010ec58 <SendMessageFromThreadSyscall+0x48>
ffffffff8010ec41:	48 c7 43 60 03 00 00 00 	mov    QWORD PTR [rbx+0x60],0x3
ffffffff8010ec49:	48 83 c4 08          	add    rsp,0x8
ffffffff8010ec4d:	5b                   	pop    rbx
ffffffff8010ec4e:	5d                   	pop    rbp
ffffffff8010ec4f:	41 5c                	pop    r12
ffffffff8010ec51:	41 5d                	pop    r13
ffffffff8010ec53:	c3                   	ret    
ffffffff8010ec54:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010ec58:	31 c0                	xor    eax,eax
ffffffff8010ec5a:	e8 b1 03 00 00       	call   ffffffff8010f010 <AllocateMessage>
ffffffff8010ec5f:	48 89 c5             	mov    rbp,rax
ffffffff8010ec62:	48 85 c0             	test   rax,rax
ffffffff8010ec65:	0f 84 c5 00 00 00    	je     ffffffff8010ed30 <SendMessageFromThreadSyscall+0x120>
ffffffff8010ec6b:	48 8b 43 60          	mov    rax,QWORD PTR [rbx+0x60]
ffffffff8010ec6f:	48 8b 53 40          	mov    rdx,QWORD PTR [rbx+0x40]
ffffffff8010ec73:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
ffffffff8010ec77:	49 8b 45 00          	mov    rax,QWORD PTR [r13+0x0]
ffffffff8010ec7b:	48 89 45 08          	mov    QWORD PTR [rbp+0x8],rax
ffffffff8010ec7f:	48 8b 43 48          	mov    rax,QWORD PTR [rbx+0x48]
ffffffff8010ec83:	48 89 55 18          	mov    QWORD PTR [rbp+0x18],rdx
ffffffff8010ec87:	48 8b 53 38          	mov    rdx,QWORD PTR [rbx+0x38]
ffffffff8010ec8b:	48 89 45 10          	mov    QWORD PTR [rbp+0x10],rax
ffffffff8010ec8f:	48 89 55 20          	mov    QWORD PTR [rbp+0x20],rdx
ffffffff8010ec93:	48 8b 53 30          	mov    rdx,QWORD PTR [rbx+0x30]
ffffffff8010ec97:	48 89 55 28          	mov    QWORD PTR [rbp+0x28],rdx
ffffffff8010ec9b:	a8 01                	test   al,0x1
ffffffff8010ec9d:	75 59                	jne    ffffffff8010ecf8 <SendMessageFromThreadSyscall+0xe8>
ffffffff8010ec9f:	48 8b 43 18          	mov    rax,QWORD PTR [rbx+0x18]
ffffffff8010eca3:	48 8b 53 28          	mov    rdx,QWORD PTR [rbx+0x28]
ffffffff8010eca7:	48 89 45 38          	mov    QWORD PTR [rbp+0x38],rax
ffffffff8010ecab:	48 89 55 30          	mov    QWORD PTR [rbp+0x30],rdx
ffffffff8010ecaf:	48 c7 43 60 00 00 00 00 	mov    QWORD PTR [rbx+0x60],0x0
ffffffff8010ecb7:	48 83 c4 08          	add    rsp,0x8
ffffffff8010ecbb:	4c 89 e6             	mov    rsi,r12
ffffffff8010ecbe:	48 89 ef             	mov    rdi,rbp
ffffffff8010ecc1:	5b                   	pop    rbx
ffffffff8010ecc2:	5d                   	pop    rbp
ffffffff8010ecc3:	41 5c                	pop    r12
ffffffff8010ecc5:	41 5d                	pop    r13
ffffffff8010ecc7:	e9 d4 fb ff ff       	jmp    ffffffff8010e8a0 <SendMessageToProcess>
ffffffff8010eccc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010ecd0:	e8 3b 0d 00 00       	call   ffffffff8010fa10 <GetProcessFromPid>
ffffffff8010ecd5:	49 89 c4             	mov    r12,rax
ffffffff8010ecd8:	48 85 c0             	test   rax,rax
ffffffff8010ecdb:	0f 85 52 ff ff ff    	jne    ffffffff8010ec33 <SendMessageFromThreadSyscall+0x23>
ffffffff8010ece1:	48 c7 43 60 01 00 00 00 	mov    QWORD PTR [rbx+0x60],0x1
ffffffff8010ece9:	48 83 c4 08          	add    rsp,0x8
ffffffff8010eced:	5b                   	pop    rbx
ffffffff8010ecee:	5d                   	pop    rbp
ffffffff8010ecef:	41 5c                	pop    r12
ffffffff8010ecf1:	41 5d                	pop    r13
ffffffff8010ecf3:	c3                   	ret    
ffffffff8010ecf4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010ecf8:	48 c7 c7 18 55 11 80 	mov    rdi,0xffffffff80115518
ffffffff8010ecff:	e8 4c 24 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010ed04:	4d 39 e5             	cmp    r13,r12
ffffffff8010ed07:	74 96                	je     ffffffff8010ec9f <SendMessageFromThreadSyscall+0x8f>
ffffffff8010ed09:	48 c7 c7 f0 55 11 80 	mov    rdi,0xffffffff801155f0
ffffffff8010ed10:	e8 3b 24 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010ed15:	48 c7 43 60 04 00 00 00 	mov    QWORD PTR [rbx+0x60],0x4
ffffffff8010ed1d:	48 89 ef             	mov    rdi,rbp
ffffffff8010ed20:	e8 1b 03 00 00       	call   ffffffff8010f040 <ReleaseMessage>
ffffffff8010ed25:	eb 88                	jmp    ffffffff8010ecaf <SendMessageFromThreadSyscall+0x9f>
ffffffff8010ed27:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010ed30:	48 c7 43 60 02 00 00 00 	mov    QWORD PTR [rbx+0x60],0x2
ffffffff8010ed38:	e9 0c ff ff ff       	jmp    ffffffff8010ec49 <SendMessageFromThreadSyscall+0x39>
ffffffff8010ed3d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010ed40 <GetNextQueuedMessage>:
ffffffff8010ed40:	48 8b 47 78          	mov    rax,QWORD PTR [rdi+0x78]
ffffffff8010ed44:	48 85 c0             	test   rax,rax
ffffffff8010ed47:	74 15                	je     ffffffff8010ed5e <GetNextQueuedMessage+0x1e>
ffffffff8010ed49:	48 8b 50 40          	mov    rdx,QWORD PTR [rax+0x40]
ffffffff8010ed4d:	48 89 57 78          	mov    QWORD PTR [rdi+0x78],rdx
ffffffff8010ed51:	48 85 d2             	test   rdx,rdx
ffffffff8010ed54:	74 0a                	je     ffffffff8010ed60 <GetNextQueuedMessage+0x20>
ffffffff8010ed56:	48 83 af 88 00 00 00 01 	sub    QWORD PTR [rdi+0x88],0x1
ffffffff8010ed5e:	c3                   	ret    
ffffffff8010ed5f:	90                   	nop
ffffffff8010ed60:	48 c7 87 80 00 00 00 00 00 00 00 	mov    QWORD PTR [rdi+0x80],0x0
ffffffff8010ed6b:	eb e9                	jmp    ffffffff8010ed56 <GetNextQueuedMessage+0x16>
ffffffff8010ed6d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010ed70 <LoadNextMessageIntoThread>:
ffffffff8010ed70:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
ffffffff8010ed74:	48 89 f8             	mov    rax,rdi
ffffffff8010ed77:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
ffffffff8010ed7b:	48 8b 7a 78          	mov    rdi,QWORD PTR [rdx+0x78]
ffffffff8010ed7f:	48 85 ff             	test   rdi,rdi
ffffffff8010ed82:	74 6c                	je     ffffffff8010edf0 <LoadNextMessageIntoThread+0x80>
ffffffff8010ed84:	48 8b 4f 40          	mov    rcx,QWORD PTR [rdi+0x40]
ffffffff8010ed88:	48 89 4a 78          	mov    QWORD PTR [rdx+0x78],rcx
ffffffff8010ed8c:	48 85 c9             	test   rcx,rcx
ffffffff8010ed8f:	74 4f                	je     ffffffff8010ede0 <LoadNextMessageIntoThread+0x70>
ffffffff8010ed91:	48 83 aa 88 00 00 00 01 	sub    QWORD PTR [rdx+0x88],0x1
ffffffff8010ed99:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
ffffffff8010ed9c:	48 8b 4f 08          	mov    rcx,QWORD PTR [rdi+0x8]
ffffffff8010eda0:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff8010eda4:	48 89 48 58          	mov    QWORD PTR [rax+0x58],rcx
ffffffff8010eda8:	48 8b 57 10          	mov    rdx,QWORD PTR [rdi+0x10]
ffffffff8010edac:	48 8b 4f 18          	mov    rcx,QWORD PTR [rdi+0x18]
ffffffff8010edb0:	48 8b 77 20          	mov    rsi,QWORD PTR [rdi+0x20]
ffffffff8010edb4:	4c 8b 47 28          	mov    r8,QWORD PTR [rdi+0x28]
ffffffff8010edb8:	4c 8b 4f 30          	mov    r9,QWORD PTR [rdi+0x30]
ffffffff8010edbc:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
ffffffff8010edc0:	48 89 70 38          	mov    QWORD PTR [rax+0x38],rsi
ffffffff8010edc4:	4c 89 48 28          	mov    QWORD PTR [rax+0x28],r9
ffffffff8010edc8:	4c 89 40 30          	mov    QWORD PTR [rax+0x30],r8
ffffffff8010edcc:	48 89 48 40          	mov    QWORD PTR [rax+0x40],rcx
ffffffff8010edd0:	48 8b 57 38          	mov    rdx,QWORD PTR [rdi+0x38]
ffffffff8010edd4:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff8010edd8:	e9 63 02 00 00       	jmp    ffffffff8010f040 <ReleaseMessage>
ffffffff8010eddd:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010ede0:	48 c7 82 80 00 00 00 00 00 00 00 	mov    QWORD PTR [rdx+0x80],0x0
ffffffff8010edeb:	eb a4                	jmp    ffffffff8010ed91 <LoadNextMessageIntoThread+0x21>
ffffffff8010eded:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010edf0:	48 c7 40 60 ff ff ff ff 	mov    QWORD PTR [rax+0x60],0xffffffffffffffff
ffffffff8010edf8:	c3                   	ret    
ffffffff8010edf9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

ffffffff8010ee00 <SleepThreadUntilMessage>:
ffffffff8010ee00:	41 54                	push   r12
ffffffff8010ee02:	53                   	push   rbx
ffffffff8010ee03:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010ee07:	0f b6 9f 48 02 00 00 	movzx  ebx,BYTE PTR [rdi+0x248]
ffffffff8010ee0e:	83 e3 01             	and    ebx,0x1
ffffffff8010ee11:	0f 84 c9 00 00 00    	je     ffffffff8010eee0 <SleepThreadUntilMessage+0xe0>
ffffffff8010ee17:	44 0f b6 a7 70 02 00 00 	movzx  r12d,BYTE PTR [rdi+0x270]
ffffffff8010ee1f:	41 83 e4 01          	and    r12d,0x1
ffffffff8010ee23:	0f 85 b7 00 00 00    	jne    ffffffff8010eee0 <SleepThreadUntilMessage+0xe0>
ffffffff8010ee29:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
ffffffff8010ee2d:	4c 8b 40 78          	mov    r8,QWORD PTR [rax+0x78]
ffffffff8010ee31:	4d 85 c0             	test   r8,r8
ffffffff8010ee34:	74 72                	je     ffffffff8010eea8 <SleepThreadUntilMessage+0xa8>
ffffffff8010ee36:	49 8b 50 40          	mov    rdx,QWORD PTR [r8+0x40]
ffffffff8010ee3a:	48 89 50 78          	mov    QWORD PTR [rax+0x78],rdx
ffffffff8010ee3e:	48 85 d2             	test   rdx,rdx
ffffffff8010ee41:	0f 84 b9 00 00 00    	je     ffffffff8010ef00 <SleepThreadUntilMessage+0x100>
ffffffff8010ee47:	48 83 a8 88 00 00 00 01 	sub    QWORD PTR [rax+0x88],0x1
ffffffff8010ee4f:	48 8b 47 10          	mov    rax,QWORD PTR [rdi+0x10]
ffffffff8010ee53:	49 8b 10             	mov    rdx,QWORD PTR [r8]
ffffffff8010ee56:	49 8b 48 08          	mov    rcx,QWORD PTR [r8+0x8]
ffffffff8010ee5a:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff8010ee5e:	48 89 48 58          	mov    QWORD PTR [rax+0x58],rcx
ffffffff8010ee62:	49 8b 50 10          	mov    rdx,QWORD PTR [r8+0x10]
ffffffff8010ee66:	49 8b 78 28          	mov    rdi,QWORD PTR [r8+0x28]
ffffffff8010ee6a:	49 8b 48 18          	mov    rcx,QWORD PTR [r8+0x18]
ffffffff8010ee6e:	49 8b 70 20          	mov    rsi,QWORD PTR [r8+0x20]
ffffffff8010ee72:	4d 8b 48 30          	mov    r9,QWORD PTR [r8+0x30]
ffffffff8010ee76:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
ffffffff8010ee7a:	48 89 78 30          	mov    QWORD PTR [rax+0x30],rdi
ffffffff8010ee7e:	4c 89 c7             	mov    rdi,r8
ffffffff8010ee81:	4c 89 48 28          	mov    QWORD PTR [rax+0x28],r9
ffffffff8010ee85:	48 89 70 38          	mov    QWORD PTR [rax+0x38],rsi
ffffffff8010ee89:	48 89 48 40          	mov    QWORD PTR [rax+0x40],rcx
ffffffff8010ee8d:	49 8b 50 38          	mov    rdx,QWORD PTR [r8+0x38]
ffffffff8010ee91:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff8010ee95:	e8 a6 01 00 00       	call   ffffffff8010f040 <ReleaseMessage>
ffffffff8010ee9a:	48 83 c4 08          	add    rsp,0x8
ffffffff8010ee9e:	44 89 e0             	mov    eax,r12d
ffffffff8010eea1:	5b                   	pop    rbx
ffffffff8010eea2:	41 5c                	pop    r12
ffffffff8010eea4:	c3                   	ret    
ffffffff8010eea5:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010eea8:	48 8b 90 90 00 00 00 	mov    rdx,QWORD PTR [rax+0x90]
ffffffff8010eeaf:	41 89 dc             	mov    r12d,ebx
ffffffff8010eeb2:	48 89 97 68 02 00 00 	mov    QWORD PTR [rdi+0x268],rdx
ffffffff8010eeb9:	48 89 b8 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdi
ffffffff8010eec0:	80 8f 70 02 00 00 01 	or     BYTE PTR [rdi+0x270],0x1
ffffffff8010eec7:	e8 14 10 00 00       	call   ffffffff8010fee0 <UnscheduleThread>
ffffffff8010eecc:	48 83 c4 08          	add    rsp,0x8
ffffffff8010eed0:	44 89 e0             	mov    eax,r12d
ffffffff8010eed3:	5b                   	pop    rbx
ffffffff8010eed4:	41 5c                	pop    r12
ffffffff8010eed6:	c3                   	ret    
ffffffff8010eed7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010eee0:	48 c7 c7 38 56 11 80 	mov    rdi,0xffffffff80115638
ffffffff8010eee7:	45 31 e4             	xor    r12d,r12d
ffffffff8010eeea:	e8 61 22 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010eeef:	48 83 c4 08          	add    rsp,0x8
ffffffff8010eef3:	44 89 e0             	mov    eax,r12d
ffffffff8010eef6:	5b                   	pop    rbx
ffffffff8010eef7:	41 5c                	pop    r12
ffffffff8010eef9:	c3                   	ret    
ffffffff8010eefa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010ef00:	48 c7 80 80 00 00 00 00 00 00 00 	mov    QWORD PTR [rax+0x80],0x0
ffffffff8010ef0b:	e9 37 ff ff ff       	jmp    ffffffff8010ee47 <SleepThreadUntilMessage+0x47>

ffffffff8010ef10 <__stack_chk_fail>:
ffffffff8010ef10:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010ef14:	fa                   	cli    
ffffffff8010ef15:	48 c7 c7 65 56 11 80 	mov    rdi,0xffffffff80115665
ffffffff8010ef1c:	e8 2f 22 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010ef21:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010ef28:	f4                   	hlt    
ffffffff8010ef29:	eb fd                	jmp    ffffffff8010ef28 <__stack_chk_fail+0x18>
ffffffff8010ef2b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010ef30 <LoadMultibootModules>:
ffffffff8010ef30:	a1 7b 01 10 80 ff ff ff ff 	movabs eax,ds:0xffffffff8010017b
ffffffff8010ef39:	53                   	push   rbx
ffffffff8010ef3a:	83 c0 08             	add    eax,0x8
ffffffff8010ef3d:	48 8d 98 00 00 00 80 	lea    rbx,[rax-0x80000000]
ffffffff8010ef44:	8b 80 00 00 00 80    	mov    eax,DWORD PTR [rax-0x80000000]
ffffffff8010ef4a:	85 c0                	test   eax,eax
ffffffff8010ef4c:	75 14                	jne    ffffffff8010ef62 <LoadMultibootModules+0x32>
ffffffff8010ef4e:	eb 40                	jmp    ffffffff8010ef90 <LoadMultibootModules+0x60>
ffffffff8010ef50:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
ffffffff8010ef53:	83 c0 07             	add    eax,0x7
ffffffff8010ef56:	83 e0 f8             	and    eax,0xfffffff8
ffffffff8010ef59:	48 01 c3             	add    rbx,rax
ffffffff8010ef5c:	8b 03                	mov    eax,DWORD PTR [rbx]
ffffffff8010ef5e:	85 c0                	test   eax,eax
ffffffff8010ef60:	74 2e                	je     ffffffff8010ef90 <LoadMultibootModules+0x60>
ffffffff8010ef62:	83 f8 03             	cmp    eax,0x3
ffffffff8010ef65:	75 e9                	jne    ffffffff8010ef50 <LoadMultibootModules+0x20>
ffffffff8010ef67:	8b 73 0c             	mov    esi,DWORD PTR [rbx+0xc]
ffffffff8010ef6a:	8b 7b 08             	mov    edi,DWORD PTR [rbx+0x8]
ffffffff8010ef6d:	48 8d 53 10          	lea    rdx,[rbx+0x10]
ffffffff8010ef71:	48 81 c6 00 00 00 80 	add    rsi,0xffffffff80000000
ffffffff8010ef78:	48 81 c7 00 00 00 80 	add    rdi,0xffffffff80000000
ffffffff8010ef7f:	e8 3c d5 ff ff       	call   ffffffff8010c4c0 <LoadElfProcess>
ffffffff8010ef84:	eb ca                	jmp    ffffffff8010ef50 <LoadMultibootModules+0x20>
ffffffff8010ef86:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010ef90:	5b                   	pop    rbx
ffffffff8010ef91:	c3                   	ret    
ffffffff8010ef92:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010ef9c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010efa0 <GrabOrAllocateObject>:
ffffffff8010efa0:	48 8b 07             	mov    rax,QWORD PTR [rdi]
ffffffff8010efa3:	48 85 c0             	test   rax,rax
ffffffff8010efa6:	74 08                	je     ffffffff8010efb0 <GrabOrAllocateObject+0x10>
ffffffff8010efa8:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffffffff8010efab:	48 89 17             	mov    QWORD PTR [rdi],rdx
ffffffff8010efae:	c3                   	ret    
ffffffff8010efaf:	90                   	nop
ffffffff8010efb0:	48 89 f7             	mov    rdi,rsi
ffffffff8010efb3:	e9 a8 f2 ff ff       	jmp    ffffffff8010e260 <malloc>
ffffffff8010efb8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010efc0 <ReleaseObjectToPool>:
ffffffff8010efc0:	48 8b 07             	mov    rax,QWORD PTR [rdi]
ffffffff8010efc3:	48 89 06             	mov    QWORD PTR [rsi],rax
ffffffff8010efc6:	48 89 37             	mov    QWORD PTR [rdi],rsi
ffffffff8010efc9:	c3                   	ret    
ffffffff8010efca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff8010efd0 <FreeObjectsInPool>:
ffffffff8010efd0:	55                   	push   rbp
ffffffff8010efd1:	53                   	push   rbx
ffffffff8010efd2:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010efd6:	48 8b 1f             	mov    rbx,QWORD PTR [rdi]
ffffffff8010efd9:	48 85 db             	test   rbx,rbx
ffffffff8010efdc:	74 1e                	je     ffffffff8010effc <FreeObjectsInPool+0x2c>
ffffffff8010efde:	48 89 fd             	mov    rbp,rdi
ffffffff8010efe1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010efe8:	48 89 df             	mov    rdi,rbx
ffffffff8010efeb:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
ffffffff8010efee:	e8 dd f3 ff ff       	call   ffffffff8010e3d0 <free>
ffffffff8010eff3:	48 89 5d 00          	mov    QWORD PTR [rbp+0x0],rbx
ffffffff8010eff7:	48 85 db             	test   rbx,rbx
ffffffff8010effa:	75 ec                	jne    ffffffff8010efe8 <FreeObjectsInPool+0x18>
ffffffff8010effc:	48 83 c4 08          	add    rsp,0x8
ffffffff8010f000:	5b                   	pop    rbx
ffffffff8010f001:	5d                   	pop    rbp
ffffffff8010f002:	c3                   	ret    
ffffffff8010f003:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010f00e:	66 90                	xchg   ax,ax

ffffffff8010f010 <AllocateMessage>:
ffffffff8010f010:	48 8b 05 99 71 00 00 	mov    rax,QWORD PTR [rip+0x7199]        # ffffffff801161b0 <message_pool>
ffffffff8010f017:	48 85 c0             	test   rax,rax
ffffffff8010f01a:	74 14                	je     ffffffff8010f030 <AllocateMessage+0x20>
ffffffff8010f01c:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffffffff8010f01f:	48 89 15 8a 71 00 00 	mov    QWORD PTR [rip+0x718a],rdx        # ffffffff801161b0 <message_pool>
ffffffff8010f026:	c3                   	ret    
ffffffff8010f027:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010f030:	bf 48 00 00 00       	mov    edi,0x48
ffffffff8010f035:	e9 26 f2 ff ff       	jmp    ffffffff8010e260 <malloc>
ffffffff8010f03a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff8010f040 <ReleaseMessage>:
ffffffff8010f040:	48 8b 05 69 71 00 00 	mov    rax,QWORD PTR [rip+0x7169]        # ffffffff801161b0 <message_pool>
ffffffff8010f047:	48 89 07             	mov    QWORD PTR [rdi],rax
ffffffff8010f04a:	48 89 3d 5f 71 00 00 	mov    QWORD PTR [rip+0x715f],rdi        # ffffffff801161b0 <message_pool>
ffffffff8010f051:	c3                   	ret    
ffffffff8010f052:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010f05d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010f060 <AllocateProcessToNotifyOnExit>:
ffffffff8010f060:	48 8b 05 41 71 00 00 	mov    rax,QWORD PTR [rip+0x7141]        # ffffffff801161a8 <process_to_notify_on_exit_pool>
ffffffff8010f067:	48 85 c0             	test   rax,rax
ffffffff8010f06a:	74 14                	je     ffffffff8010f080 <AllocateProcessToNotifyOnExit+0x20>
ffffffff8010f06c:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffffffff8010f06f:	48 89 15 32 71 00 00 	mov    QWORD PTR [rip+0x7132],rdx        # ffffffff801161a8 <process_to_notify_on_exit_pool>
ffffffff8010f076:	c3                   	ret    
ffffffff8010f077:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010f080:	bf 38 00 00 00       	mov    edi,0x38
ffffffff8010f085:	e9 d6 f1 ff ff       	jmp    ffffffff8010e260 <malloc>
ffffffff8010f08a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff8010f090 <ReleaseProcessToNotifyOnExit>:
ffffffff8010f090:	48 8b 05 11 71 00 00 	mov    rax,QWORD PTR [rip+0x7111]        # ffffffff801161a8 <process_to_notify_on_exit_pool>
ffffffff8010f097:	48 89 07             	mov    QWORD PTR [rdi],rax
ffffffff8010f09a:	48 89 3d 07 71 00 00 	mov    QWORD PTR [rip+0x7107],rdi        # ffffffff801161a8 <process_to_notify_on_exit_pool>
ffffffff8010f0a1:	c3                   	ret    
ffffffff8010f0a2:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010f0ad:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010f0b0 <AllocateService>:
ffffffff8010f0b0:	48 8b 05 e9 70 00 00 	mov    rax,QWORD PTR [rip+0x70e9]        # ffffffff801161a0 <service_pool>
ffffffff8010f0b7:	48 85 c0             	test   rax,rax
ffffffff8010f0ba:	74 14                	je     ffffffff8010f0d0 <AllocateService+0x20>
ffffffff8010f0bc:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffffffff8010f0bf:	48 89 15 da 70 00 00 	mov    QWORD PTR [rip+0x70da],rdx        # ffffffff801161a0 <service_pool>
ffffffff8010f0c6:	c3                   	ret    
ffffffff8010f0c7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010f0d0:	bf 70 00 00 00       	mov    edi,0x70
ffffffff8010f0d5:	e9 86 f1 ff ff       	jmp    ffffffff8010e260 <malloc>
ffffffff8010f0da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff8010f0e0 <ReleaseService>:
ffffffff8010f0e0:	48 8b 05 b9 70 00 00 	mov    rax,QWORD PTR [rip+0x70b9]        # ffffffff801161a0 <service_pool>
ffffffff8010f0e7:	48 89 07             	mov    QWORD PTR [rdi],rax
ffffffff8010f0ea:	48 89 3d af 70 00 00 	mov    QWORD PTR [rip+0x70af],rdi        # ffffffff801161a0 <service_pool>
ffffffff8010f0f1:	c3                   	ret    
ffffffff8010f0f2:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010f0fd:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010f100 <AllocateProcessToNotifyWhenServiceAppears>:
ffffffff8010f100:	48 8b 05 91 70 00 00 	mov    rax,QWORD PTR [rip+0x7091]        # ffffffff80116198 <process_to_notify_when_service_appears_pool>
ffffffff8010f107:	48 85 c0             	test   rax,rax
ffffffff8010f10a:	74 14                	je     ffffffff8010f120 <AllocateProcessToNotifyWhenServiceAppears+0x20>
ffffffff8010f10c:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffffffff8010f10f:	48 89 15 82 70 00 00 	mov    QWORD PTR [rip+0x7082],rdx        # ffffffff80116198 <process_to_notify_when_service_appears_pool>
ffffffff8010f116:	c3                   	ret    
ffffffff8010f117:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010f120:	bf 80 00 00 00       	mov    edi,0x80
ffffffff8010f125:	e9 36 f1 ff ff       	jmp    ffffffff8010e260 <malloc>
ffffffff8010f12a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff8010f130 <ReleaseProcessToNotifyWhenServiceAppears>:
ffffffff8010f130:	48 8b 05 61 70 00 00 	mov    rax,QWORD PTR [rip+0x7061]        # ffffffff80116198 <process_to_notify_when_service_appears_pool>
ffffffff8010f137:	48 89 07             	mov    QWORD PTR [rdi],rax
ffffffff8010f13a:	48 89 3d 57 70 00 00 	mov    QWORD PTR [rip+0x7057],rdi        # ffffffff80116198 <process_to_notify_when_service_appears_pool>
ffffffff8010f141:	c3                   	ret    
ffffffff8010f142:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010f14d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010f150 <InitializeObjectPools>:
ffffffff8010f150:	48 c7 05 55 70 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x7055],0x0        # ffffffff801161b0 <message_pool>
ffffffff8010f15b:	48 c7 05 42 70 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x7042],0x0        # ffffffff801161a8 <process_to_notify_on_exit_pool>
ffffffff8010f166:	48 c7 05 2f 70 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x702f],0x0        # ffffffff801161a0 <service_pool>
ffffffff8010f171:	48 c7 05 1c 70 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x701c],0x0        # ffffffff80116198 <process_to_notify_when_service_appears_pool>
ffffffff8010f17c:	c3                   	ret    
ffffffff8010f17d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010f180 <CleanUpObjectPools>:
ffffffff8010f180:	53                   	push   rbx
ffffffff8010f181:	48 8b 1d 28 70 00 00 	mov    rbx,QWORD PTR [rip+0x7028]        # ffffffff801161b0 <message_pool>
ffffffff8010f188:	48 85 db             	test   rbx,rbx
ffffffff8010f18b:	74 1a                	je     ffffffff8010f1a7 <CleanUpObjectPools+0x27>
ffffffff8010f18d:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010f190:	48 89 df             	mov    rdi,rbx
ffffffff8010f193:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
ffffffff8010f196:	e8 35 f2 ff ff       	call   ffffffff8010e3d0 <free>
ffffffff8010f19b:	48 89 1d 0e 70 00 00 	mov    QWORD PTR [rip+0x700e],rbx        # ffffffff801161b0 <message_pool>
ffffffff8010f1a2:	48 85 db             	test   rbx,rbx
ffffffff8010f1a5:	75 e9                	jne    ffffffff8010f190 <CleanUpObjectPools+0x10>
ffffffff8010f1a7:	48 8b 1d fa 6f 00 00 	mov    rbx,QWORD PTR [rip+0x6ffa]        # ffffffff801161a8 <process_to_notify_on_exit_pool>
ffffffff8010f1ae:	48 85 db             	test   rbx,rbx
ffffffff8010f1b1:	74 1c                	je     ffffffff8010f1cf <CleanUpObjectPools+0x4f>
ffffffff8010f1b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010f1b8:	48 89 df             	mov    rdi,rbx
ffffffff8010f1bb:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
ffffffff8010f1be:	e8 0d f2 ff ff       	call   ffffffff8010e3d0 <free>
ffffffff8010f1c3:	48 89 1d de 6f 00 00 	mov    QWORD PTR [rip+0x6fde],rbx        # ffffffff801161a8 <process_to_notify_on_exit_pool>
ffffffff8010f1ca:	48 85 db             	test   rbx,rbx
ffffffff8010f1cd:	75 e9                	jne    ffffffff8010f1b8 <CleanUpObjectPools+0x38>
ffffffff8010f1cf:	48 8b 1d ca 6f 00 00 	mov    rbx,QWORD PTR [rip+0x6fca]        # ffffffff801161a0 <service_pool>
ffffffff8010f1d6:	48 85 db             	test   rbx,rbx
ffffffff8010f1d9:	74 1c                	je     ffffffff8010f1f7 <CleanUpObjectPools+0x77>
ffffffff8010f1db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010f1e0:	48 89 df             	mov    rdi,rbx
ffffffff8010f1e3:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
ffffffff8010f1e6:	e8 e5 f1 ff ff       	call   ffffffff8010e3d0 <free>
ffffffff8010f1eb:	48 89 1d ae 6f 00 00 	mov    QWORD PTR [rip+0x6fae],rbx        # ffffffff801161a0 <service_pool>
ffffffff8010f1f2:	48 85 db             	test   rbx,rbx
ffffffff8010f1f5:	75 e9                	jne    ffffffff8010f1e0 <CleanUpObjectPools+0x60>
ffffffff8010f1f7:	48 8b 1d 9a 6f 00 00 	mov    rbx,QWORD PTR [rip+0x6f9a]        # ffffffff80116198 <process_to_notify_when_service_appears_pool>
ffffffff8010f1fe:	48 85 db             	test   rbx,rbx
ffffffff8010f201:	74 1c                	je     ffffffff8010f21f <CleanUpObjectPools+0x9f>
ffffffff8010f203:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010f208:	48 89 df             	mov    rdi,rbx
ffffffff8010f20b:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
ffffffff8010f20e:	e8 bd f1 ff ff       	call   ffffffff8010e3d0 <free>
ffffffff8010f213:	48 89 1d 7e 6f 00 00 	mov    QWORD PTR [rip+0x6f7e],rbx        # ffffffff80116198 <process_to_notify_when_service_appears_pool>
ffffffff8010f21a:	48 85 db             	test   rbx,rbx
ffffffff8010f21d:	75 e9                	jne    ffffffff8010f208 <CleanUpObjectPools+0x88>
ffffffff8010f21f:	5b                   	pop    rbx
ffffffff8010f220:	c3                   	ret    
ffffffff8010f221:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010f22b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010f230 <SafeReadUint8>:
ffffffff8010f230:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010f234:	e8 17 31 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f239:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffffffff8010f23c:	48 83 c4 08          	add    rsp,0x8
ffffffff8010f240:	c3                   	ret    
ffffffff8010f241:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010f24c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010f250 <SafeReadUint32>:
ffffffff8010f250:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010f254:	e8 f7 30 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f259:	8b 00                	mov    eax,DWORD PTR [rax]
ffffffff8010f25b:	48 83 c4 08          	add    rsp,0x8
ffffffff8010f25f:	c3                   	ret    

ffffffff8010f260 <SafeReadUint64>:
ffffffff8010f260:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010f264:	e8 e7 30 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f269:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffffffff8010f26c:	48 83 c4 08          	add    rsp,0x8
ffffffff8010f270:	c3                   	ret    
ffffffff8010f271:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010f27c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010f280 <CalculateStartOfFreeMemoryAtBoot>:
ffffffff8010f280:	53                   	push   rbx
ffffffff8010f281:	48 c7 c7 7b 01 10 00 	mov    rdi,0x10017b
ffffffff8010f288:	48 c7 05 cd 6d 00 00 c1 61 11 00 	mov    QWORD PTR [rip+0x6dcd],0x1161c1        # ffffffff80116060 <start_of_free_memory_at_boot>
ffffffff8010f293:	e8 b8 30 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f298:	8b 00                	mov    eax,DWORD PTR [rax]
ffffffff8010f29a:	8d 58 08             	lea    ebx,[rax+0x8]
ffffffff8010f29d:	eb 15                	jmp    ffffffff8010f2b4 <CalculateStartOfFreeMemoryAtBoot+0x34>
ffffffff8010f29f:	90                   	nop
ffffffff8010f2a0:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
ffffffff8010f2a4:	e8 a7 30 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f2a9:	8b 00                	mov    eax,DWORD PTR [rax]
ffffffff8010f2ab:	83 c0 07             	add    eax,0x7
ffffffff8010f2ae:	83 e0 f8             	and    eax,0xfffffff8
ffffffff8010f2b1:	48 01 c3             	add    rbx,rax
ffffffff8010f2b4:	48 89 df             	mov    rdi,rbx
ffffffff8010f2b7:	e8 94 30 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f2bc:	8b 00                	mov    eax,DWORD PTR [rax]
ffffffff8010f2be:	85 c0                	test   eax,eax
ffffffff8010f2c0:	74 2e                	je     ffffffff8010f2f0 <CalculateStartOfFreeMemoryAtBoot+0x70>
ffffffff8010f2c2:	48 89 df             	mov    rdi,rbx
ffffffff8010f2c5:	e8 86 30 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f2ca:	83 38 03             	cmp    DWORD PTR [rax],0x3
ffffffff8010f2cd:	75 d1                	jne    ffffffff8010f2a0 <CalculateStartOfFreeMemoryAtBoot+0x20>
ffffffff8010f2cf:	48 8d 7b 0c          	lea    rdi,[rbx+0xc]
ffffffff8010f2d3:	e8 78 30 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f2d8:	8b 00                	mov    eax,DWORD PTR [rax]
ffffffff8010f2da:	48 3b 05 7f 6d 00 00 	cmp    rax,QWORD PTR [rip+0x6d7f]        # ffffffff80116060 <start_of_free_memory_at_boot>
ffffffff8010f2e1:	76 bd                	jbe    ffffffff8010f2a0 <CalculateStartOfFreeMemoryAtBoot+0x20>
ffffffff8010f2e3:	48 89 05 76 6d 00 00 	mov    QWORD PTR [rip+0x6d76],rax        # ffffffff80116060 <start_of_free_memory_at_boot>
ffffffff8010f2ea:	eb b4                	jmp    ffffffff8010f2a0 <CalculateStartOfFreeMemoryAtBoot+0x20>
ffffffff8010f2ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010f2f0:	48 8b 05 69 6d 00 00 	mov    rax,QWORD PTR [rip+0x6d69]        # ffffffff80116060 <start_of_free_memory_at_boot>
ffffffff8010f2f7:	5b                   	pop    rbx
ffffffff8010f2f8:	48 05 ff 0f 00 00    	add    rax,0xfff
ffffffff8010f2fe:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff8010f304:	48 89 05 55 6d 00 00 	mov    QWORD PTR [rip+0x6d55],rax        # ffffffff80116060 <start_of_free_memory_at_boot>
ffffffff8010f30b:	c3                   	ret    
ffffffff8010f30c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010f310 <InitializePhysicalAllocator>:
ffffffff8010f310:	41 57                	push   r15
ffffffff8010f312:	31 c0                	xor    eax,eax
ffffffff8010f314:	41 56                	push   r14
ffffffff8010f316:	41 55                	push   r13
ffffffff8010f318:	41 54                	push   r12
ffffffff8010f31a:	55                   	push   rbp
ffffffff8010f31b:	53                   	push   rbx
ffffffff8010f31c:	48 83 ec 18          	sub    rsp,0x18
ffffffff8010f320:	48 c7 05 25 6d 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x6d25],0x0        # ffffffff80116050 <total_system_memory>
ffffffff8010f32b:	48 c7 05 22 6d 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x6d22],0x0        # ffffffff80116058 <free_pages>
ffffffff8010f336:	e8 45 ff ff ff       	call   ffffffff8010f280 <CalculateStartOfFreeMemoryAtBoot>
ffffffff8010f33b:	8b 05 3a 0e ff 7f    	mov    eax,DWORD PTR [rip+0x7fff0e3a]        # 10017b <MultibootInfo+0x4>
ffffffff8010f341:	48 c7 05 fc 6c 00 00 01 00 00 00 	mov    QWORD PTR [rip+0x6cfc],0x1        # ffffffff80116048 <next_free_page_address>
ffffffff8010f34c:	8d 58 08             	lea    ebx,[rax+0x8]
ffffffff8010f34f:	eb 1a                	jmp    ffffffff8010f36b <InitializePhysicalAllocator+0x5b>
ffffffff8010f351:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010f358:	4c 89 f7             	mov    rdi,r14
ffffffff8010f35b:	e8 f0 2f 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f360:	8b 00                	mov    eax,DWORD PTR [rax]
ffffffff8010f362:	83 c0 07             	add    eax,0x7
ffffffff8010f365:	83 e0 f8             	and    eax,0xfffffff8
ffffffff8010f368:	48 01 c3             	add    rbx,rax
ffffffff8010f36b:	48 89 df             	mov    rdi,rbx
ffffffff8010f36e:	e8 dd 2f 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f373:	8b 00                	mov    eax,DWORD PTR [rax]
ffffffff8010f375:	85 c0                	test   eax,eax
ffffffff8010f377:	0f 84 f3 00 00 00    	je     ffffffff8010f470 <InitializePhysicalAllocator+0x160>
ffffffff8010f37d:	4c 8d 73 04          	lea    r14,[rbx+0x4]
ffffffff8010f381:	4c 89 f7             	mov    rdi,r14
ffffffff8010f384:	e8 c7 2f 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f389:	8b 28                	mov    ebp,DWORD PTR [rax]
ffffffff8010f38b:	85 ed                	test   ebp,ebp
ffffffff8010f38d:	0f 84 dd 00 00 00    	je     ffffffff8010f470 <InitializePhysicalAllocator+0x160>
ffffffff8010f393:	48 89 df             	mov    rdi,rbx
ffffffff8010f396:	e8 b5 2f 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f39b:	66 83 38 06          	cmp    WORD PTR [rax],0x6
ffffffff8010f39f:	75 b7                	jne    ffffffff8010f358 <InitializePhysicalAllocator+0x48>
ffffffff8010f3a1:	48 8d 04 2b          	lea    rax,[rbx+rbp*1]
ffffffff8010f3a5:	4c 8d 63 10          	lea    r12,[rbx+0x10]
ffffffff8010f3a9:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
ffffffff8010f3ae:	4c 89 e5             	mov    rbp,r12
ffffffff8010f3b1:	4c 39 e0             	cmp    rax,r12
ffffffff8010f3b4:	76 a2                	jbe    ffffffff8010f358 <InitializePhysicalAllocator+0x48>
ffffffff8010f3b6:	4c 8d 7b 08          	lea    r15,[rbx+0x8]
ffffffff8010f3ba:	eb 1b                	jmp    ffffffff8010f3d7 <InitializePhysicalAllocator+0xc7>
ffffffff8010f3bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010f3c0:	4c 89 ff             	mov    rdi,r15
ffffffff8010f3c3:	e8 88 2f 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f3c8:	8b 00                	mov    eax,DWORD PTR [rax]
ffffffff8010f3ca:	48 01 c5             	add    rbp,rax
ffffffff8010f3cd:	49 89 ec             	mov    r12,rbp
ffffffff8010f3d0:	48 3b 6c 24 08       	cmp    rbp,QWORD PTR [rsp+0x8]
ffffffff8010f3d5:	73 81                	jae    ffffffff8010f358 <InitializePhysicalAllocator+0x48>
ffffffff8010f3d7:	49 8d 7c 24 08       	lea    rdi,[r12+0x8]
ffffffff8010f3dc:	e8 6f 2f 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f3e1:	49 8d 7c 24 10       	lea    rdi,[r12+0x10]
ffffffff8010f3e6:	4c 8b 28             	mov    r13,QWORD PTR [rax]
ffffffff8010f3e9:	4c 01 2d 60 6c 00 00 	add    QWORD PTR [rip+0x6c60],r13        # ffffffff80116050 <total_system_memory>
ffffffff8010f3f0:	e8 5b 2f 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f3f5:	83 38 01             	cmp    DWORD PTR [rax],0x1
ffffffff8010f3f8:	75 c6                	jne    ffffffff8010f3c0 <InitializePhysicalAllocator+0xb0>
ffffffff8010f3fa:	4c 89 e7             	mov    rdi,r12
ffffffff8010f3fd:	e8 4e 2f 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f402:	4c 8b 20             	mov    r12,QWORD PTR [rax]
ffffffff8010f405:	4d 01 e5             	add    r13,r12
ffffffff8010f408:	49 81 e5 00 f0 ff ff 	and    r13,0xfffffffffffff000
ffffffff8010f40f:	4c 39 25 4a 6c 00 00 	cmp    QWORD PTR [rip+0x6c4a],r12        # ffffffff80116060 <start_of_free_memory_at_boot>
ffffffff8010f416:	4c 0f 43 25 42 6c 00 00 	cmovae r12,QWORD PTR [rip+0x6c42]        # ffffffff80116060 <start_of_free_memory_at_boot>
ffffffff8010f41e:	49 81 c4 ff 0f 00 00 	add    r12,0xfff
ffffffff8010f425:	49 81 e4 00 f0 ff ff 	and    r12,0xfffffffffffff000
ffffffff8010f42c:	4d 39 e5             	cmp    r13,r12
ffffffff8010f42f:	76 8f                	jbe    ffffffff8010f3c0 <InitializePhysicalAllocator+0xb0>
ffffffff8010f431:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010f438:	4c 89 e7             	mov    rdi,r12
ffffffff8010f43b:	e8 10 2f 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f440:	48 8b 15 01 6c 00 00 	mov    rdx,QWORD PTR [rip+0x6c01]        # ffffffff80116048 <next_free_page_address>
ffffffff8010f447:	48 89 10             	mov    QWORD PTR [rax],rdx
ffffffff8010f44a:	4c 89 25 f7 6b 00 00 	mov    QWORD PTR [rip+0x6bf7],r12        # ffffffff80116048 <next_free_page_address>
ffffffff8010f451:	49 81 c4 00 10 00 00 	add    r12,0x1000
ffffffff8010f458:	48 83 05 f8 6b 00 00 01 	add    QWORD PTR [rip+0x6bf8],0x1        # ffffffff80116058 <free_pages>
ffffffff8010f460:	4d 39 e5             	cmp    r13,r12
ffffffff8010f463:	77 d3                	ja     ffffffff8010f438 <InitializePhysicalAllocator+0x128>
ffffffff8010f465:	e9 56 ff ff ff       	jmp    ffffffff8010f3c0 <InitializePhysicalAllocator+0xb0>
ffffffff8010f46a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010f470:	48 83 c4 18          	add    rsp,0x18
ffffffff8010f474:	5b                   	pop    rbx
ffffffff8010f475:	5d                   	pop    rbp
ffffffff8010f476:	41 5c                	pop    r12
ffffffff8010f478:	41 5d                	pop    r13
ffffffff8010f47a:	41 5e                	pop    r14
ffffffff8010f47c:	41 5f                	pop    r15
ffffffff8010f47e:	c3                   	ret    
ffffffff8010f47f:	90                   	nop

ffffffff8010f480 <DoneWithMultibootMemory>:
ffffffff8010f480:	55                   	push   rbp
ffffffff8010f481:	53                   	push   rbx
ffffffff8010f482:	48 c7 c3 c0 71 11 00 	mov    rbx,0x1171c0
ffffffff8010f489:	48 81 e3 00 f0 ff ff 	and    rbx,0xfffffffffffff000
ffffffff8010f490:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010f494:	48 8b 2d c5 6b 00 00 	mov    rbp,QWORD PTR [rip+0x6bc5]        # ffffffff80116060 <start_of_free_memory_at_boot>
ffffffff8010f49b:	48 39 eb             	cmp    rbx,rbp
ffffffff8010f49e:	73 24                	jae    ffffffff8010f4c4 <DoneWithMultibootMemory+0x44>
ffffffff8010f4a0:	48 8b 3d 19 6c 00 00 	mov    rdi,QWORD PTR [rip+0x6c19]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010f4a7:	48 8d b3 00 00 00 80 	lea    rsi,[rbx-0x80000000]
ffffffff8010f4ae:	ba 01 00 00 00       	mov    edx,0x1
ffffffff8010f4b3:	48 81 c3 00 10 00 00 	add    rbx,0x1000
ffffffff8010f4ba:	e8 f1 3a 00 00       	call   ffffffff80112fb0 <UnmapVirtualPage>
ffffffff8010f4bf:	48 39 dd             	cmp    rbp,rbx
ffffffff8010f4c2:	77 dc                	ja     ffffffff8010f4a0 <DoneWithMultibootMemory+0x20>
ffffffff8010f4c4:	48 83 c4 08          	add    rsp,0x8
ffffffff8010f4c8:	5b                   	pop    rbx
ffffffff8010f4c9:	5d                   	pop    rbp
ffffffff8010f4ca:	c3                   	ret    
ffffffff8010f4cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010f4d0 <GetPhysicalPagePreVirtualMemory>:
ffffffff8010f4d0:	41 54                	push   r12
ffffffff8010f4d2:	4c 8b 25 6f 6b 00 00 	mov    r12,QWORD PTR [rip+0x6b6f]        # ffffffff80116048 <next_free_page_address>
ffffffff8010f4d9:	49 83 fc 01          	cmp    r12,0x1
ffffffff8010f4dd:	74 1a                	je     ffffffff8010f4f9 <GetPhysicalPagePreVirtualMemory+0x29>
ffffffff8010f4df:	4c 89 e7             	mov    rdi,r12
ffffffff8010f4e2:	e8 69 2e 00 00       	call   ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>
ffffffff8010f4e7:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffffffff8010f4ea:	48 83 2d 66 6b 00 00 01 	sub    QWORD PTR [rip+0x6b66],0x1        # ffffffff80116058 <free_pages>
ffffffff8010f4f2:	48 89 05 4f 6b 00 00 	mov    QWORD PTR [rip+0x6b4f],rax        # ffffffff80116048 <next_free_page_address>
ffffffff8010f4f9:	4c 89 e0             	mov    rax,r12
ffffffff8010f4fc:	41 5c                	pop    r12
ffffffff8010f4fe:	c3                   	ret    
ffffffff8010f4ff:	90                   	nop

ffffffff8010f500 <GetPhysicalPage>:
ffffffff8010f500:	41 54                	push   r12
ffffffff8010f502:	4c 8b 25 3f 6b 00 00 	mov    r12,QWORD PTR [rip+0x6b3f]        # ffffffff80116048 <next_free_page_address>
ffffffff8010f509:	49 83 fc 01          	cmp    r12,0x1
ffffffff8010f50d:	74 39                	je     ffffffff8010f548 <GetPhysicalPage+0x48>
ffffffff8010f50f:	be 05 00 00 00       	mov    esi,0x5
ffffffff8010f514:	4c 89 e7             	mov    rdi,r12
ffffffff8010f517:	e8 64 2e 00 00       	call   ffffffff80112380 <TemporarilyMapPhysicalMemory>
ffffffff8010f51c:	ba 00 10 00 00       	mov    edx,0x1000
ffffffff8010f521:	31 f6                	xor    esi,esi
ffffffff8010f523:	48 89 c7             	mov    rdi,rax
ffffffff8010f526:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffffffff8010f529:	48 89 05 18 6b 00 00 	mov    QWORD PTR [rip+0x6b18],rax        # ffffffff80116048 <next_free_page_address>
ffffffff8010f530:	e8 bb e1 ff ff       	call   ffffffff8010d6f0 <memset>
ffffffff8010f535:	48 83 2d 1b 6b 00 00 01 	sub    QWORD PTR [rip+0x6b1b],0x1        # ffffffff80116058 <free_pages>
ffffffff8010f53d:	4c 89 e0             	mov    rax,r12
ffffffff8010f540:	41 5c                	pop    r12
ffffffff8010f542:	c3                   	ret    
ffffffff8010f543:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010f548:	31 c0                	xor    eax,eax
ffffffff8010f54a:	e8 31 fc ff ff       	call   ffffffff8010f180 <CleanUpObjectPools>
ffffffff8010f54f:	4c 8b 25 f2 6a 00 00 	mov    r12,QWORD PTR [rip+0x6af2]        # ffffffff80116048 <next_free_page_address>
ffffffff8010f556:	49 83 fc 01          	cmp    r12,0x1
ffffffff8010f55a:	75 b3                	jne    ffffffff8010f50f <GetPhysicalPage+0xf>
ffffffff8010f55c:	eb df                	jmp    ffffffff8010f53d <GetPhysicalPage+0x3d>
ffffffff8010f55e:	66 90                	xchg   ax,ax

ffffffff8010f560 <FreePhysicalPage>:
ffffffff8010f560:	53                   	push   rbx
ffffffff8010f561:	be 05 00 00 00       	mov    esi,0x5
ffffffff8010f566:	48 89 fb             	mov    rbx,rdi
ffffffff8010f569:	e8 12 2e 00 00       	call   ffffffff80112380 <TemporarilyMapPhysicalMemory>
ffffffff8010f56e:	48 8b 15 d3 6a 00 00 	mov    rdx,QWORD PTR [rip+0x6ad3]        # ffffffff80116048 <next_free_page_address>
ffffffff8010f575:	48 89 10             	mov    QWORD PTR [rax],rdx
ffffffff8010f578:	48 89 1d c9 6a 00 00 	mov    QWORD PTR [rip+0x6ac9],rbx        # ffffffff80116048 <next_free_page_address>
ffffffff8010f57f:	5b                   	pop    rbx
ffffffff8010f580:	48 83 05 d0 6a 00 00 01 	add    QWORD PTR [rip+0x6ad0],0x1        # ffffffff80116058 <free_pages>
ffffffff8010f588:	c3                   	ret    
ffffffff8010f589:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

ffffffff8010f590 <InitializeProcesses>:
ffffffff8010f590:	48 c7 05 cd 6a 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x6acd],0x0        # ffffffff80116068 <last_assigned_pid>
ffffffff8010f59b:	48 c7 05 ca 6a 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x6aca],0x0        # ffffffff80116070 <first_process>
ffffffff8010f5a6:	48 c7 05 c7 6a 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x6ac7],0x0        # ffffffff80116078 <last_process>
ffffffff8010f5b1:	c3                   	ret    
ffffffff8010f5b2:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010f5bd:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010f5c0 <CreateProcess>:
ffffffff8010f5c0:	41 54                	push   r12
ffffffff8010f5c2:	41 bc 01 00 00 00    	mov    r12d,0x1
ffffffff8010f5c8:	53                   	push   rbx
ffffffff8010f5c9:	89 fb                	mov    ebx,edi
ffffffff8010f5cb:	bf e8 00 00 00       	mov    edi,0xe8
ffffffff8010f5d0:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010f5d4:	e8 87 ec ff ff       	call   ffffffff8010e260 <malloc>
ffffffff8010f5d9:	48 85 c0             	test   rax,rax
ffffffff8010f5dc:	0f 84 0a 01 00 00    	je     ffffffff8010f6ec <CreateProcess+0x12c>
ffffffff8010f5e2:	88 58 60             	mov    BYTE PTR [rax+0x60],bl
ffffffff8010f5e5:	48 8d 78 08          	lea    rdi,[rax+0x8]
ffffffff8010f5e9:	ba 58 00 00 00       	mov    edx,0x58
ffffffff8010f5ee:	31 f6                	xor    esi,esi
ffffffff8010f5f0:	49 89 c4             	mov    r12,rax
ffffffff8010f5f3:	e8 f8 e0 ff ff       	call   ffffffff8010d6f0 <memset>
ffffffff8010f5f8:	48 8b 05 69 6a 00 00 	mov    rax,QWORD PTR [rip+0x6a69]        # ffffffff80116068 <last_assigned_pid>
ffffffff8010f5ff:	48 83 c0 01          	add    rax,0x1
ffffffff8010f603:	48 89 05 5e 6a 00 00 	mov    QWORD PTR [rip+0x6a5e],rax        # ffffffff80116068 <last_assigned_pid>
ffffffff8010f60a:	49 89 04 24          	mov    QWORD PTR [r12],rax
ffffffff8010f60e:	31 c0                	xor    eax,eax
ffffffff8010f610:	e8 8b 3f 00 00       	call   ffffffff801135a0 <CreateAddressSpace>
ffffffff8010f615:	49 89 44 24 68       	mov    QWORD PTR [r12+0x68],rax
ffffffff8010f61a:	48 83 f8 01          	cmp    rax,0x1
ffffffff8010f61e:	0f 84 fc 00 00 00    	je     ffffffff8010f720 <CreateProcess+0x160>
ffffffff8010f624:	49 c7 44 24 70 00 00 00 00 	mov    QWORD PTR [r12+0x70],0x0
ffffffff8010f62d:	31 c0                	xor    eax,eax
ffffffff8010f62f:	48 83 3d 39 6a 00 00 00 	cmp    QWORD PTR [rip+0x6a39],0x0        # ffffffff80116070 <first_process>
ffffffff8010f637:	49 c7 44 24 78 00 00 00 00 	mov    QWORD PTR [r12+0x78],0x0
ffffffff8010f640:	49 c7 84 24 80 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0x80],0x0
ffffffff8010f64c:	49 c7 84 24 88 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0x88],0x0
ffffffff8010f658:	49 c7 84 24 90 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0x90],0x0
ffffffff8010f664:	49 c7 84 24 98 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0x98],0x0
ffffffff8010f670:	49 c7 84 24 c0 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0xc0],0x0
ffffffff8010f67c:	49 c7 84 24 c8 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0xc8],0x0
ffffffff8010f688:	49 c7 84 24 d0 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0xd0],0x0
ffffffff8010f694:	49 c7 84 24 d8 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0xd8],0x0
ffffffff8010f6a0:	49 c7 84 24 e0 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0xe0],0x0
ffffffff8010f6ac:	49 c7 84 24 a0 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0xa0],0x0
ffffffff8010f6b8:	66 41 89 84 24 a8 00 00 00 	mov    WORD PTR [r12+0xa8],ax
ffffffff8010f6c1:	74 3d                	je     ffffffff8010f700 <CreateProcess+0x140>
ffffffff8010f6c3:	48 8b 05 ae 69 00 00 	mov    rax,QWORD PTR [rip+0x69ae]        # ffffffff80116078 <last_process>
ffffffff8010f6ca:	4c 89 25 a7 69 00 00 	mov    QWORD PTR [rip+0x69a7],r12        # ffffffff80116078 <last_process>
ffffffff8010f6d1:	4c 89 a0 b0 00 00 00 	mov    QWORD PTR [rax+0xb0],r12
ffffffff8010f6d8:	49 89 84 24 b8 00 00 00 	mov    QWORD PTR [r12+0xb8],rax
ffffffff8010f6e0:	49 c7 84 24 b0 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0xb0],0x0
ffffffff8010f6ec:	48 83 c4 08          	add    rsp,0x8
ffffffff8010f6f0:	4c 89 e0             	mov    rax,r12
ffffffff8010f6f3:	5b                   	pop    rbx
ffffffff8010f6f4:	41 5c                	pop    r12
ffffffff8010f6f6:	c3                   	ret    
ffffffff8010f6f7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010f700:	4c 89 25 69 69 00 00 	mov    QWORD PTR [rip+0x6969],r12        # ffffffff80116070 <first_process>
ffffffff8010f707:	4c 89 25 6a 69 00 00 	mov    QWORD PTR [rip+0x696a],r12        # ffffffff80116078 <last_process>
ffffffff8010f70e:	49 c7 84 24 b8 00 00 00 00 00 00 00 	mov    QWORD PTR [r12+0xb8],0x0
ffffffff8010f71a:	eb c4                	jmp    ffffffff8010f6e0 <CreateProcess+0x120>
ffffffff8010f71c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010f720:	4c 89 e7             	mov    rdi,r12
ffffffff8010f723:	41 bc 01 00 00 00    	mov    r12d,0x1
ffffffff8010f729:	e8 a2 ec ff ff       	call   ffffffff8010e3d0 <free>
ffffffff8010f72e:	eb bc                	jmp    ffffffff8010f6ec <CreateProcess+0x12c>

ffffffff8010f730 <ReleaseNotification>:
ffffffff8010f730:	48 8b 57 18          	mov    rdx,QWORD PTR [rdi+0x18]
ffffffff8010f734:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
ffffffff8010f738:	48 85 d2             	test   rdx,rdx
ffffffff8010f73b:	74 3b                	je     ffffffff8010f778 <ReleaseNotification+0x48>
ffffffff8010f73d:	48 89 42 20          	mov    QWORD PTR [rdx+0x20],rax
ffffffff8010f741:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
ffffffff8010f745:	48 85 c0             	test   rax,rax
ffffffff8010f748:	74 04                	je     ffffffff8010f74e <ReleaseNotification+0x1e>
ffffffff8010f74a:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff8010f74e:	48 8b 57 28          	mov    rdx,QWORD PTR [rdi+0x28]
ffffffff8010f752:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
ffffffff8010f756:	48 85 d2             	test   rdx,rdx
ffffffff8010f759:	74 2d                	je     ffffffff8010f788 <ReleaseNotification+0x58>
ffffffff8010f75b:	48 89 42 30          	mov    QWORD PTR [rdx+0x30],rax
ffffffff8010f75f:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
ffffffff8010f763:	48 85 c0             	test   rax,rax
ffffffff8010f766:	74 04                	je     ffffffff8010f76c <ReleaseNotification+0x3c>
ffffffff8010f768:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
ffffffff8010f76c:	e9 1f f9 ff ff       	jmp    ffffffff8010f090 <ReleaseProcessToNotifyOnExit>
ffffffff8010f771:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010f778:	48 8b 0f             	mov    rcx,QWORD PTR [rdi]
ffffffff8010f77b:	48 89 81 c0 00 00 00 	mov    QWORD PTR [rcx+0xc0],rax
ffffffff8010f782:	eb c1                	jmp    ffffffff8010f745 <ReleaseNotification+0x15>
ffffffff8010f784:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff8010f788:	48 8b 4f 08          	mov    rcx,QWORD PTR [rdi+0x8]
ffffffff8010f78c:	48 89 81 c8 00 00 00 	mov    QWORD PTR [rcx+0xc8],rax
ffffffff8010f793:	eb ce                	jmp    ffffffff8010f763 <ReleaseNotification+0x33>
ffffffff8010f795:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]

ffffffff8010f7a0 <DestroyProcess>:
ffffffff8010f7a0:	55                   	push   rbp
ffffffff8010f7a1:	be 01 00 00 00       	mov    esi,0x1
ffffffff8010f7a6:	48 89 fd             	mov    rbp,rdi
ffffffff8010f7a9:	e8 82 20 00 00       	call   ffffffff80111830 <DestroyThreadsForProcess>
ffffffff8010f7ae:	48 83 bd 98 00 00 00 00 	cmp    QWORD PTR [rbp+0x98],0x0
ffffffff8010f7b6:	74 15                	je     ffffffff8010f7cd <DestroyProcess+0x2d>
ffffffff8010f7b8:	48 89 ef             	mov    rdi,rbp
ffffffff8010f7bb:	e8 40 dd ff ff       	call   ffffffff8010d500 <UnregisterAllMessagesToForOnInterruptForProcess>
ffffffff8010f7c0:	eb 0b                	jmp    ffffffff8010f7cd <DestroyProcess+0x2d>
ffffffff8010f7c2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010f7c8:	e8 c3 0e 00 00       	call   ffffffff80110690 <StopNotifyingProcessWhenServiceAppears>
ffffffff8010f7cd:	48 8b bd d0 00 00 00 	mov    rdi,QWORD PTR [rbp+0xd0]
ffffffff8010f7d4:	48 85 ff             	test   rdi,rdi
ffffffff8010f7d7:	75 ef                	jne    ffffffff8010f7c8 <DestroyProcess+0x28>
ffffffff8010f7d9:	48 8b bd d8 00 00 00 	mov    rdi,QWORD PTR [rbp+0xd8]
ffffffff8010f7e0:	48 85 ff             	test   rdi,rdi
ffffffff8010f7e3:	74 14                	je     ffffffff8010f7f9 <DestroyProcess+0x59>
ffffffff8010f7e5:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010f7e8:	e8 73 0a 00 00       	call   ffffffff80110260 <UnregisterService>
ffffffff8010f7ed:	48 8b bd d8 00 00 00 	mov    rdi,QWORD PTR [rbp+0xd8]
ffffffff8010f7f4:	48 85 ff             	test   rdi,rdi
ffffffff8010f7f7:	75 ef                	jne    ffffffff8010f7e8 <DestroyProcess+0x48>
ffffffff8010f7f9:	48 8b 7d 68          	mov    rdi,QWORD PTR [rbp+0x68]
ffffffff8010f7fd:	e8 3e 3e 00 00       	call   ffffffff80113640 <FreeAddressSpace>
ffffffff8010f802:	48 8b bd c8 00 00 00 	mov    rdi,QWORD PTR [rbp+0xc8]
ffffffff8010f809:	48 85 ff             	test   rdi,rdi
ffffffff8010f80c:	0f 84 a2 00 00 00    	je     ffffffff8010f8b4 <DestroyProcess+0x114>
ffffffff8010f812:	48 8b 57 18          	mov    rdx,QWORD PTR [rdi+0x18]
ffffffff8010f816:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
ffffffff8010f81a:	48 85 d2             	test   rdx,rdx
ffffffff8010f81d:	74 55                	je     ffffffff8010f874 <DestroyProcess+0xd4>
ffffffff8010f81f:	48 89 42 20          	mov    QWORD PTR [rdx+0x20],rax
ffffffff8010f823:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
ffffffff8010f827:	48 85 c0             	test   rax,rax
ffffffff8010f82a:	74 04                	je     ffffffff8010f830 <DestroyProcess+0x90>
ffffffff8010f82c:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff8010f830:	48 8b 57 28          	mov    rdx,QWORD PTR [rdi+0x28]
ffffffff8010f834:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
ffffffff8010f838:	48 85 d2             	test   rdx,rdx
ffffffff8010f83b:	0f 84 3f 01 00 00    	je     ffffffff8010f980 <DestroyProcess+0x1e0>
ffffffff8010f841:	48 89 42 30          	mov    QWORD PTR [rdx+0x30],rax
ffffffff8010f845:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
ffffffff8010f849:	48 85 c0             	test   rax,rax
ffffffff8010f84c:	0f 84 c6 00 00 00    	je     ffffffff8010f918 <DestroyProcess+0x178>
ffffffff8010f852:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
ffffffff8010f856:	e8 35 f8 ff ff       	call   ffffffff8010f090 <ReleaseProcessToNotifyOnExit>
ffffffff8010f85b:	48 8b bd c8 00 00 00 	mov    rdi,QWORD PTR [rbp+0xc8]
ffffffff8010f862:	48 85 ff             	test   rdi,rdi
ffffffff8010f865:	74 4d                	je     ffffffff8010f8b4 <DestroyProcess+0x114>
ffffffff8010f867:	48 8b 57 18          	mov    rdx,QWORD PTR [rdi+0x18]
ffffffff8010f86b:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
ffffffff8010f86f:	48 85 d2             	test   rdx,rdx
ffffffff8010f872:	75 ab                	jne    ffffffff8010f81f <DestroyProcess+0x7f>
ffffffff8010f874:	48 8b 0f             	mov    rcx,QWORD PTR [rdi]
ffffffff8010f877:	48 89 81 c0 00 00 00 	mov    QWORD PTR [rcx+0xc0],rax
ffffffff8010f87e:	eb a7                	jmp    ffffffff8010f827 <DestroyProcess+0x87>
ffffffff8010f880:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
ffffffff8010f884:	48 8b 57 20          	mov    rdx,QWORD PTR [rdi+0x20]
ffffffff8010f888:	48 85 d2             	test   rdx,rdx
ffffffff8010f88b:	74 04                	je     ffffffff8010f891 <DestroyProcess+0xf1>
ffffffff8010f88d:	48 89 42 18          	mov    QWORD PTR [rdx+0x18],rax
ffffffff8010f891:	48 8b 57 28          	mov    rdx,QWORD PTR [rdi+0x28]
ffffffff8010f895:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
ffffffff8010f899:	48 85 d2             	test   rdx,rdx
ffffffff8010f89c:	74 6a                	je     ffffffff8010f908 <DestroyProcess+0x168>
ffffffff8010f89e:	48 89 42 30          	mov    QWORD PTR [rdx+0x30],rax
ffffffff8010f8a2:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
ffffffff8010f8a6:	48 85 c0             	test   rax,rax
ffffffff8010f8a9:	74 04                	je     ffffffff8010f8af <DestroyProcess+0x10f>
ffffffff8010f8ab:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
ffffffff8010f8af:	e8 dc f7 ff ff       	call   ffffffff8010f090 <ReleaseProcessToNotifyOnExit>
ffffffff8010f8b4:	48 8b 85 c0 00 00 00 	mov    rax,QWORD PTR [rbp+0xc0]
ffffffff8010f8bb:	48 85 c0             	test   rax,rax
ffffffff8010f8be:	0f 84 7c 00 00 00    	je     ffffffff8010f940 <DestroyProcess+0x1a0>
ffffffff8010f8c4:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010f8c8:	48 8b 78 08          	mov    rdi,QWORD PTR [rax+0x8]
ffffffff8010f8cc:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
ffffffff8010f8d0:	31 c9                	xor    ecx,ecx
ffffffff8010f8d2:	6a 00                	push   0x0
ffffffff8010f8d4:	48 8b 55 00          	mov    rdx,QWORD PTR [rbp+0x0]
ffffffff8010f8d8:	45 31 c9             	xor    r9d,r9d
ffffffff8010f8db:	45 31 c0             	xor    r8d,r8d
ffffffff8010f8de:	e8 3d f1 ff ff       	call   ffffffff8010ea20 <SendKernelMessageToProcess>
ffffffff8010f8e3:	48 8b bd c0 00 00 00 	mov    rdi,QWORD PTR [rbp+0xc0]
ffffffff8010f8ea:	5a                   	pop    rdx
ffffffff8010f8eb:	59                   	pop    rcx
ffffffff8010f8ec:	48 8b 47 18          	mov    rax,QWORD PTR [rdi+0x18]
ffffffff8010f8f0:	48 8b 57 20          	mov    rdx,QWORD PTR [rdi+0x20]
ffffffff8010f8f4:	48 85 c0             	test   rax,rax
ffffffff8010f8f7:	75 87                	jne    ffffffff8010f880 <DestroyProcess+0xe0>
ffffffff8010f8f9:	48 8b 0f             	mov    rcx,QWORD PTR [rdi]
ffffffff8010f8fc:	48 89 91 c0 00 00 00 	mov    QWORD PTR [rcx+0xc0],rdx
ffffffff8010f903:	eb 83                	jmp    ffffffff8010f888 <DestroyProcess+0xe8>
ffffffff8010f905:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010f908:	48 8b 4f 08          	mov    rcx,QWORD PTR [rdi+0x8]
ffffffff8010f90c:	48 89 81 c8 00 00 00 	mov    QWORD PTR [rcx+0xc8],rax
ffffffff8010f913:	eb 91                	jmp    ffffffff8010f8a6 <DestroyProcess+0x106>
ffffffff8010f915:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010f918:	e8 73 f7 ff ff       	call   ffffffff8010f090 <ReleaseProcessToNotifyOnExit>
ffffffff8010f91d:	48 8b bd c8 00 00 00 	mov    rdi,QWORD PTR [rbp+0xc8]
ffffffff8010f924:	48 85 ff             	test   rdi,rdi
ffffffff8010f927:	0f 85 e5 fe ff ff    	jne    ffffffff8010f812 <DestroyProcess+0x72>
ffffffff8010f92d:	48 8b 85 c0 00 00 00 	mov    rax,QWORD PTR [rbp+0xc0]
ffffffff8010f934:	48 85 c0             	test   rax,rax
ffffffff8010f937:	75 8b                	jne    ffffffff8010f8c4 <DestroyProcess+0x124>
ffffffff8010f939:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010f940:	48 8b 95 b8 00 00 00 	mov    rdx,QWORD PTR [rbp+0xb8]
ffffffff8010f947:	48 8b 85 b0 00 00 00 	mov    rax,QWORD PTR [rbp+0xb0]
ffffffff8010f94e:	48 85 d2             	test   rdx,rdx
ffffffff8010f951:	74 3d                	je     ffffffff8010f990 <DestroyProcess+0x1f0>
ffffffff8010f953:	48 89 82 b0 00 00 00 	mov    QWORD PTR [rdx+0xb0],rax
ffffffff8010f95a:	48 8b 85 b0 00 00 00 	mov    rax,QWORD PTR [rbp+0xb0]
ffffffff8010f961:	48 85 c0             	test   rax,rax
ffffffff8010f964:	74 36                	je     ffffffff8010f99c <DestroyProcess+0x1fc>
ffffffff8010f966:	48 89 90 b8 00 00 00 	mov    QWORD PTR [rax+0xb8],rdx
ffffffff8010f96d:	48 89 ef             	mov    rdi,rbp
ffffffff8010f970:	5d                   	pop    rbp
ffffffff8010f971:	e9 5a ea ff ff       	jmp    ffffffff8010e3d0 <free>
ffffffff8010f976:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010f980:	48 8b 4f 08          	mov    rcx,QWORD PTR [rdi+0x8]
ffffffff8010f984:	48 89 81 c8 00 00 00 	mov    QWORD PTR [rcx+0xc8],rax
ffffffff8010f98b:	e9 b9 fe ff ff       	jmp    ffffffff8010f849 <DestroyProcess+0xa9>
ffffffff8010f990:	48 89 05 d9 66 00 00 	mov    QWORD PTR [rip+0x66d9],rax        # ffffffff80116070 <first_process>
ffffffff8010f997:	48 85 c0             	test   rax,rax
ffffffff8010f99a:	75 ca                	jne    ffffffff8010f966 <DestroyProcess+0x1c6>
ffffffff8010f99c:	48 89 ef             	mov    rdi,rbp
ffffffff8010f99f:	5d                   	pop    rbp
ffffffff8010f9a0:	48 89 15 d1 66 00 00 	mov    QWORD PTR [rip+0x66d1],rdx        # ffffffff80116078 <last_process>
ffffffff8010f9a7:	e9 24 ea ff ff       	jmp    ffffffff8010e3d0 <free>
ffffffff8010f9ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010f9b0 <NotifyProcessOnDeath>:
ffffffff8010f9b0:	41 54                	push   r12
ffffffff8010f9b2:	31 c0                	xor    eax,eax
ffffffff8010f9b4:	49 89 d4             	mov    r12,rdx
ffffffff8010f9b7:	55                   	push   rbp
ffffffff8010f9b8:	48 89 fd             	mov    rbp,rdi
ffffffff8010f9bb:	53                   	push   rbx
ffffffff8010f9bc:	48 89 f3             	mov    rbx,rsi
ffffffff8010f9bf:	e8 9c f6 ff ff       	call   ffffffff8010f060 <AllocateProcessToNotifyOnExit>
ffffffff8010f9c4:	48 85 c0             	test   rax,rax
ffffffff8010f9c7:	74 3f                	je     ffffffff8010fa08 <NotifyProcessOnDeath+0x58>
ffffffff8010f9c9:	48 8b 95 c0 00 00 00 	mov    rdx,QWORD PTR [rbp+0xc0]
ffffffff8010f9d0:	48 89 28             	mov    QWORD PTR [rax],rbp
ffffffff8010f9d3:	48 89 58 08          	mov    QWORD PTR [rax+0x8],rbx
ffffffff8010f9d7:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
ffffffff8010f9db:	48 8b 93 c8 00 00 00 	mov    rdx,QWORD PTR [rbx+0xc8]
ffffffff8010f9e2:	4c 89 60 10          	mov    QWORD PTR [rax+0x10],r12
ffffffff8010f9e6:	48 c7 40 18 00 00 00 00 	mov    QWORD PTR [rax+0x18],0x0
ffffffff8010f9ee:	48 89 85 c0 00 00 00 	mov    QWORD PTR [rbp+0xc0],rax
ffffffff8010f9f5:	48 c7 40 28 00 00 00 00 	mov    QWORD PTR [rax+0x28],0x0
ffffffff8010f9fd:	48 89 50 30          	mov    QWORD PTR [rax+0x30],rdx
ffffffff8010fa01:	48 89 83 c8 00 00 00 	mov    QWORD PTR [rbx+0xc8],rax
ffffffff8010fa08:	5b                   	pop    rbx
ffffffff8010fa09:	5d                   	pop    rbp
ffffffff8010fa0a:	41 5c                	pop    r12
ffffffff8010fa0c:	c3                   	ret    
ffffffff8010fa0d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010fa10 <GetProcessFromPid>:
ffffffff8010fa10:	48 8b 05 59 66 00 00 	mov    rax,QWORD PTR [rip+0x6659]        # ffffffff80116070 <first_process>
ffffffff8010fa17:	48 85 c0             	test   rax,rax
ffffffff8010fa1a:	75 10                	jne    ffffffff8010fa2c <GetProcessFromPid+0x1c>
ffffffff8010fa1c:	eb 13                	jmp    ffffffff8010fa31 <GetProcessFromPid+0x21>
ffffffff8010fa1e:	66 90                	xchg   ax,ax
ffffffff8010fa20:	48 8b 80 b0 00 00 00 	mov    rax,QWORD PTR [rax+0xb0]
ffffffff8010fa27:	48 85 c0             	test   rax,rax
ffffffff8010fa2a:	74 05                	je     ffffffff8010fa31 <GetProcessFromPid+0x21>
ffffffff8010fa2c:	48 39 38             	cmp    QWORD PTR [rax],rdi
ffffffff8010fa2f:	75 ef                	jne    ffffffff8010fa20 <GetProcessFromPid+0x10>
ffffffff8010fa31:	c3                   	ret    
ffffffff8010fa32:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010fa3d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010fa40 <GetProcessOrNextFromPid>:
ffffffff8010fa40:	48 8b 05 29 66 00 00 	mov    rax,QWORD PTR [rip+0x6629]        # ffffffff80116070 <first_process>
ffffffff8010fa47:	48 85 c0             	test   rax,rax
ffffffff8010fa4a:	75 10                	jne    ffffffff8010fa5c <GetProcessOrNextFromPid+0x1c>
ffffffff8010fa4c:	eb 13                	jmp    ffffffff8010fa61 <GetProcessOrNextFromPid+0x21>
ffffffff8010fa4e:	66 90                	xchg   ax,ax
ffffffff8010fa50:	48 8b 80 b0 00 00 00 	mov    rax,QWORD PTR [rax+0xb0]
ffffffff8010fa57:	48 85 c0             	test   rax,rax
ffffffff8010fa5a:	74 05                	je     ffffffff8010fa61 <GetProcessOrNextFromPid+0x21>
ffffffff8010fa5c:	48 39 38             	cmp    QWORD PTR [rax],rdi
ffffffff8010fa5f:	72 ef                	jb     ffffffff8010fa50 <GetProcessOrNextFromPid+0x10>
ffffffff8010fa61:	c3                   	ret    
ffffffff8010fa62:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010fa6d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff8010fa70 <DoProcessNamesMatch>:
ffffffff8010fa70:	48 8b 06             	mov    rax,QWORD PTR [rsi]
ffffffff8010fa73:	48 39 07             	cmp    QWORD PTR [rdi],rax
ffffffff8010fa76:	75 68                	jne    ffffffff8010fae0 <DoProcessNamesMatch+0x70>
ffffffff8010fa78:	48 8b 46 08          	mov    rax,QWORD PTR [rsi+0x8]
ffffffff8010fa7c:	48 39 47 08          	cmp    QWORD PTR [rdi+0x8],rax
ffffffff8010fa80:	75 5e                	jne    ffffffff8010fae0 <DoProcessNamesMatch+0x70>
ffffffff8010fa82:	48 8b 46 10          	mov    rax,QWORD PTR [rsi+0x10]
ffffffff8010fa86:	48 39 47 10          	cmp    QWORD PTR [rdi+0x10],rax
ffffffff8010fa8a:	75 54                	jne    ffffffff8010fae0 <DoProcessNamesMatch+0x70>
ffffffff8010fa8c:	48 8b 46 18          	mov    rax,QWORD PTR [rsi+0x18]
ffffffff8010fa90:	48 39 47 18          	cmp    QWORD PTR [rdi+0x18],rax
ffffffff8010fa94:	75 4a                	jne    ffffffff8010fae0 <DoProcessNamesMatch+0x70>
ffffffff8010fa96:	48 8b 46 20          	mov    rax,QWORD PTR [rsi+0x20]
ffffffff8010fa9a:	48 39 47 20          	cmp    QWORD PTR [rdi+0x20],rax
ffffffff8010fa9e:	75 40                	jne    ffffffff8010fae0 <DoProcessNamesMatch+0x70>
ffffffff8010faa0:	48 8b 46 28          	mov    rax,QWORD PTR [rsi+0x28]
ffffffff8010faa4:	48 39 47 28          	cmp    QWORD PTR [rdi+0x28],rax
ffffffff8010faa8:	75 36                	jne    ffffffff8010fae0 <DoProcessNamesMatch+0x70>
ffffffff8010faaa:	48 8b 46 30          	mov    rax,QWORD PTR [rsi+0x30]
ffffffff8010faae:	48 39 47 30          	cmp    QWORD PTR [rdi+0x30],rax
ffffffff8010fab2:	75 2c                	jne    ffffffff8010fae0 <DoProcessNamesMatch+0x70>
ffffffff8010fab4:	48 8b 46 38          	mov    rax,QWORD PTR [rsi+0x38]
ffffffff8010fab8:	48 39 47 38          	cmp    QWORD PTR [rdi+0x38],rax
ffffffff8010fabc:	75 22                	jne    ffffffff8010fae0 <DoProcessNamesMatch+0x70>
ffffffff8010fabe:	48 8b 46 40          	mov    rax,QWORD PTR [rsi+0x40]
ffffffff8010fac2:	48 39 47 40          	cmp    QWORD PTR [rdi+0x40],rax
ffffffff8010fac6:	75 18                	jne    ffffffff8010fae0 <DoProcessNamesMatch+0x70>
ffffffff8010fac8:	48 8b 46 48          	mov    rax,QWORD PTR [rsi+0x48]
ffffffff8010facc:	48 39 47 48          	cmp    QWORD PTR [rdi+0x48],rax
ffffffff8010fad0:	75 0e                	jne    ffffffff8010fae0 <DoProcessNamesMatch+0x70>
ffffffff8010fad2:	48 8b 46 50          	mov    rax,QWORD PTR [rsi+0x50]
ffffffff8010fad6:	48 39 47 50          	cmp    QWORD PTR [rdi+0x50],rax
ffffffff8010fada:	0f 94 c0             	sete   al
ffffffff8010fadd:	c3                   	ret    
ffffffff8010fade:	66 90                	xchg   ax,ax
ffffffff8010fae0:	31 c0                	xor    eax,eax
ffffffff8010fae2:	c3                   	ret    
ffffffff8010fae3:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010faee:	66 90                	xchg   ax,ax

ffffffff8010faf0 <FindNextProcessWithName>:
ffffffff8010faf0:	48 89 f0             	mov    rax,rsi
ffffffff8010faf3:	48 85 f6             	test   rsi,rsi
ffffffff8010faf6:	0f 84 81 00 00 00    	je     ffffffff8010fb7d <FindNextProcessWithName+0x8d>
ffffffff8010fafc:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
ffffffff8010faff:	90                   	nop
ffffffff8010fb00:	48 3b 50 08          	cmp    rdx,QWORD PTR [rax+0x8]
ffffffff8010fb04:	75 6a                	jne    ffffffff8010fb70 <FindNextProcessWithName+0x80>
ffffffff8010fb06:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
ffffffff8010fb0a:	48 39 4f 08          	cmp    QWORD PTR [rdi+0x8],rcx
ffffffff8010fb0e:	75 60                	jne    ffffffff8010fb70 <FindNextProcessWithName+0x80>
ffffffff8010fb10:	48 8b 70 18          	mov    rsi,QWORD PTR [rax+0x18]
ffffffff8010fb14:	48 39 77 10          	cmp    QWORD PTR [rdi+0x10],rsi
ffffffff8010fb18:	75 56                	jne    ffffffff8010fb70 <FindNextProcessWithName+0x80>
ffffffff8010fb1a:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
ffffffff8010fb1e:	48 39 4f 18          	cmp    QWORD PTR [rdi+0x18],rcx
ffffffff8010fb22:	75 4c                	jne    ffffffff8010fb70 <FindNextProcessWithName+0x80>
ffffffff8010fb24:	48 8b 70 28          	mov    rsi,QWORD PTR [rax+0x28]
ffffffff8010fb28:	48 39 77 20          	cmp    QWORD PTR [rdi+0x20],rsi
ffffffff8010fb2c:	75 42                	jne    ffffffff8010fb70 <FindNextProcessWithName+0x80>
ffffffff8010fb2e:	48 8b 48 30          	mov    rcx,QWORD PTR [rax+0x30]
ffffffff8010fb32:	48 39 4f 28          	cmp    QWORD PTR [rdi+0x28],rcx
ffffffff8010fb36:	75 38                	jne    ffffffff8010fb70 <FindNextProcessWithName+0x80>
ffffffff8010fb38:	48 8b 70 38          	mov    rsi,QWORD PTR [rax+0x38]
ffffffff8010fb3c:	48 39 77 30          	cmp    QWORD PTR [rdi+0x30],rsi
ffffffff8010fb40:	75 2e                	jne    ffffffff8010fb70 <FindNextProcessWithName+0x80>
ffffffff8010fb42:	48 8b 48 40          	mov    rcx,QWORD PTR [rax+0x40]
ffffffff8010fb46:	48 39 4f 38          	cmp    QWORD PTR [rdi+0x38],rcx
ffffffff8010fb4a:	75 24                	jne    ffffffff8010fb70 <FindNextProcessWithName+0x80>
ffffffff8010fb4c:	48 8b 70 48          	mov    rsi,QWORD PTR [rax+0x48]
ffffffff8010fb50:	48 39 77 40          	cmp    QWORD PTR [rdi+0x40],rsi
ffffffff8010fb54:	75 1a                	jne    ffffffff8010fb70 <FindNextProcessWithName+0x80>
ffffffff8010fb56:	48 8b 70 50          	mov    rsi,QWORD PTR [rax+0x50]
ffffffff8010fb5a:	48 39 77 48          	cmp    QWORD PTR [rdi+0x48],rsi
ffffffff8010fb5e:	75 10                	jne    ffffffff8010fb70 <FindNextProcessWithName+0x80>
ffffffff8010fb60:	48 8b 48 58          	mov    rcx,QWORD PTR [rax+0x58]
ffffffff8010fb64:	48 39 4f 50          	cmp    QWORD PTR [rdi+0x50],rcx
ffffffff8010fb68:	75 06                	jne    ffffffff8010fb70 <FindNextProcessWithName+0x80>
ffffffff8010fb6a:	c3                   	ret    
ffffffff8010fb6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010fb70:	48 8b 80 b0 00 00 00 	mov    rax,QWORD PTR [rax+0xb0]
ffffffff8010fb77:	48 85 c0             	test   rax,rax
ffffffff8010fb7a:	75 84                	jne    ffffffff8010fb00 <FindNextProcessWithName+0x10>
ffffffff8010fb7c:	c3                   	ret    
ffffffff8010fb7d:	31 c0                	xor    eax,eax
ffffffff8010fb7f:	c3                   	ret    

ffffffff8010fb80 <PrintRegisters>:
ffffffff8010fb80:	53                   	push   rbx
ffffffff8010fb81:	48 89 fb             	mov    rbx,rdi
ffffffff8010fb84:	48 c7 c7 7e 56 11 80 	mov    rdi,0xffffffff8011567e
ffffffff8010fb8b:	e8 c0 15 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fb90:	48 c7 c7 93 56 11 80 	mov    rdi,0xffffffff80115693
ffffffff8010fb97:	e8 b4 15 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fb9c:	48 8b 7b 60          	mov    rdi,QWORD PTR [rbx+0x60]
ffffffff8010fba0:	e8 1b 16 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fba5:	48 c7 c7 99 56 11 80 	mov    rdi,0xffffffff80115699
ffffffff8010fbac:	e8 9f 15 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fbb1:	48 8b 7b 58          	mov    rdi,QWORD PTR [rbx+0x58]
ffffffff8010fbb5:	e8 06 16 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fbba:	48 c7 c7 a2 56 11 80 	mov    rdi,0xffffffff801156a2
ffffffff8010fbc1:	e8 8a 15 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fbc6:	48 8b 7b 50          	mov    rdi,QWORD PTR [rbx+0x50]
ffffffff8010fbca:	e8 f1 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fbcf:	48 c7 c7 a9 56 11 80 	mov    rdi,0xffffffff801156a9
ffffffff8010fbd6:	e8 75 15 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fbdb:	48 8b 7b 48          	mov    rdi,QWORD PTR [rbx+0x48]
ffffffff8010fbdf:	e8 dc 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fbe4:	48 c7 c7 b2 56 11 80 	mov    rdi,0xffffffff801156b2
ffffffff8010fbeb:	e8 60 15 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fbf0:	48 8b bb 90 00 00 00 	mov    rdi,QWORD PTR [rbx+0x90]
ffffffff8010fbf7:	e8 c4 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fbfc:	48 c7 c7 b9 56 11 80 	mov    rdi,0xffffffff801156b9
ffffffff8010fc03:	e8 48 15 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fc08:	48 8b 7b 70          	mov    rdi,QWORD PTR [rbx+0x70]
ffffffff8010fc0c:	e8 af 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fc11:	48 c7 c7 c2 56 11 80 	mov    rdi,0xffffffff801156c2
ffffffff8010fc18:	e8 33 15 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fc1d:	48 8b 7b 40          	mov    rdi,QWORD PTR [rbx+0x40]
ffffffff8010fc21:	e8 9a 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fc26:	48 c7 c7 c9 56 11 80 	mov    rdi,0xffffffff801156c9
ffffffff8010fc2d:	e8 1e 15 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fc32:	48 8b 7b 68          	mov    rdi,QWORD PTR [rbx+0x68]
ffffffff8010fc36:	e8 85 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fc3b:	48 c7 c7 d2 56 11 80 	mov    rdi,0xffffffff801156d2
ffffffff8010fc42:	e8 09 15 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fc47:	48 8b 7b 38          	mov    rdi,QWORD PTR [rbx+0x38]
ffffffff8010fc4b:	e8 70 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fc50:	48 c7 c7 d9 56 11 80 	mov    rdi,0xffffffff801156d9
ffffffff8010fc57:	e8 f4 14 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fc5c:	48 8b 7b 30          	mov    rdi,QWORD PTR [rbx+0x30]
ffffffff8010fc60:	e8 5b 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fc65:	48 c7 c7 e2 56 11 80 	mov    rdi,0xffffffff801156e2
ffffffff8010fc6c:	e8 df 14 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fc71:	48 8b 7b 28          	mov    rdi,QWORD PTR [rbx+0x28]
ffffffff8010fc75:	e8 46 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fc7a:	48 c7 c7 e9 56 11 80 	mov    rdi,0xffffffff801156e9
ffffffff8010fc81:	e8 ca 14 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fc86:	48 8b 7b 20          	mov    rdi,QWORD PTR [rbx+0x20]
ffffffff8010fc8a:	e8 31 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fc8f:	48 c7 c7 f2 56 11 80 	mov    rdi,0xffffffff801156f2
ffffffff8010fc96:	e8 b5 14 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fc9b:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
ffffffff8010fc9f:	e8 1c 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fca4:	48 c7 c7 f9 56 11 80 	mov    rdi,0xffffffff801156f9
ffffffff8010fcab:	e8 a0 14 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fcb0:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
ffffffff8010fcb4:	e8 07 15 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fcb9:	48 c7 c7 02 57 11 80 	mov    rdi,0xffffffff80115702
ffffffff8010fcc0:	e8 8b 14 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fcc5:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
ffffffff8010fcc9:	e8 f2 14 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fcce:	48 c7 c7 09 57 11 80 	mov    rdi,0xffffffff80115709
ffffffff8010fcd5:	e8 76 14 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fcda:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
ffffffff8010fcdd:	e8 de 14 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fce2:	48 c7 c7 12 57 11 80 	mov    rdi,0xffffffff80115712
ffffffff8010fce9:	e8 62 14 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fcee:	48 8b bb 80 00 00 00 	mov    rdi,QWORD PTR [rbx+0x80]
ffffffff8010fcf5:	e8 c6 14 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fcfa:	48 c7 c7 19 57 11 80 	mov    rdi,0xffffffff80115719
ffffffff8010fd01:	e8 4a 14 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fd06:	48 8b bb 98 00 00 00 	mov    rdi,QWORD PTR [rbx+0x98]
ffffffff8010fd0d:	e8 ae 14 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fd12:	48 c7 c7 22 57 11 80 	mov    rdi,0xffffffff80115722
ffffffff8010fd19:	e8 32 14 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fd1e:	48 8b 7b 78          	mov    rdi,QWORD PTR [rbx+0x78]
ffffffff8010fd22:	e8 99 14 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fd27:	48 c7 c7 29 57 11 80 	mov    rdi,0xffffffff80115729
ffffffff8010fd2e:	e8 1d 14 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fd33:	48 8b bb 88 00 00 00 	mov    rdi,QWORD PTR [rbx+0x88]
ffffffff8010fd3a:	e8 81 14 00 00       	call   ffffffff801111c0 <PrintHex>
ffffffff8010fd3f:	bf 0a 00 00 00       	mov    edi,0xa
ffffffff8010fd44:	5b                   	pop    rbx
ffffffff8010fd45:	e9 66 13 00 00       	jmp    ffffffff801110b0 <PrintChar>
ffffffff8010fd4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff8010fd50 <InitializeScheduler>:
ffffffff8010fd50:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010fd54:	bf a0 00 00 00       	mov    edi,0xa0
ffffffff8010fd59:	48 c7 05 2c 63 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x632c],0x0        # ffffffff80116090 <first_awake_thread>
ffffffff8010fd64:	48 c7 05 19 63 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x6319],0x0        # ffffffff80116088 <last_awake_thread>
ffffffff8010fd6f:	48 c7 05 26 63 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x6326],0x0        # ffffffff801160a0 <running_thread>
ffffffff8010fd7a:	e8 e1 e4 ff ff       	call   ffffffff8010e260 <malloc>
ffffffff8010fd7f:	48 89 05 fa 62 00 00 	mov    QWORD PTR [rip+0x62fa],rax        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff8010fd86:	48 85 c0             	test   rax,rax
ffffffff8010fd89:	74 15                	je     ffffffff8010fda0 <InitializeScheduler+0x50>
ffffffff8010fd8b:	48 89 05 06 63 00 00 	mov    QWORD PTR [rip+0x6306],rax        # ffffffff80116098 <idle_regs>
ffffffff8010fd92:	48 83 c4 08          	add    rsp,0x8
ffffffff8010fd96:	c3                   	ret    
ffffffff8010fd97:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff8010fda0:	48 c7 c7 38 57 11 80 	mov    rdi,0xffffffff80115738
ffffffff8010fda7:	e8 a4 13 00 00       	call   ffffffff80111150 <PrintString>
ffffffff8010fdac:	fa                   	cli    
ffffffff8010fdad:	f4                   	hlt    
ffffffff8010fdae:	48 8b 05 cb 62 00 00 	mov    rax,QWORD PTR [rip+0x62cb]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff8010fdb5:	48 89 05 dc 62 00 00 	mov    QWORD PTR [rip+0x62dc],rax        # ffffffff80116098 <idle_regs>
ffffffff8010fdbc:	48 83 c4 08          	add    rsp,0x8
ffffffff8010fdc0:	c3                   	ret    
ffffffff8010fdc1:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010fdcc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010fdd0 <ScheduleNextThread>:
ffffffff8010fdd0:	48 8b 05 c9 62 00 00 	mov    rax,QWORD PTR [rip+0x62c9]        # ffffffff801160a0 <running_thread>
ffffffff8010fdd7:	48 85 c0             	test   rax,rax
ffffffff8010fdda:	74 6c                	je     ffffffff8010fe48 <ScheduleNextThread+0x78>
ffffffff8010fddc:	f6 80 20 02 00 00 01 	test   BYTE PTR [rax+0x220],0x1
ffffffff8010fde3:	74 04                	je     ffffffff8010fde9 <ScheduleNextThread+0x19>
ffffffff8010fde5:	0f ae 40 20          	fxsave [rax+0x20]
ffffffff8010fde9:	48 8b 80 50 02 00 00 	mov    rax,QWORD PTR [rax+0x250]
ffffffff8010fdf0:	48 85 c0             	test   rax,rax
ffffffff8010fdf3:	74 53                	je     ffffffff8010fe48 <ScheduleNextThread+0x78>
ffffffff8010fdf5:	48 83 ec 08          	sub    rsp,0x8
ffffffff8010fdf9:	48 89 05 a0 62 00 00 	mov    QWORD PTR [rip+0x62a0],rax        # ffffffff801160a0 <running_thread>
ffffffff8010fe00:	48 83 80 60 02 00 00 01 	add    QWORD PTR [rax+0x260],0x1
ffffffff8010fe08:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffffffff8010fe0c:	48 8b 78 68          	mov    rdi,QWORD PTR [rax+0x68]
ffffffff8010fe10:	e8 cb 3a 00 00       	call   ffffffff801138e0 <SwitchToAddressSpace>
ffffffff8010fe15:	48 8b 3d 84 62 00 00 	mov    rdi,QWORD PTR [rip+0x6284]        # ffffffff801160a0 <running_thread>
ffffffff8010fe1c:	f6 87 20 02 00 00 01 	test   BYTE PTR [rdi+0x220],0x1
ffffffff8010fe23:	74 04                	je     ffffffff8010fe29 <ScheduleNextThread+0x59>
ffffffff8010fe25:	0f ae 4f 20          	fxrstor [rdi+0x20]
ffffffff8010fe29:	e8 d2 1b 00 00       	call   ffffffff80111a00 <LoadThreadSegment>
ffffffff8010fe2e:	48 8b 05 6b 62 00 00 	mov    rax,QWORD PTR [rip+0x626b]        # ffffffff801160a0 <running_thread>
ffffffff8010fe35:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
ffffffff8010fe39:	48 89 05 40 62 00 00 	mov    QWORD PTR [rip+0x6240],rax        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff8010fe40:	48 83 c4 08          	add    rsp,0x8
ffffffff8010fe44:	c3                   	ret    
ffffffff8010fe45:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff8010fe48:	48 8b 05 41 62 00 00 	mov    rax,QWORD PTR [rip+0x6241]        # ffffffff80116090 <first_awake_thread>
ffffffff8010fe4f:	48 85 c0             	test   rax,rax
ffffffff8010fe52:	75 a1                	jne    ffffffff8010fdf5 <ScheduleNextThread+0x25>
ffffffff8010fe54:	48 8b 05 3d 62 00 00 	mov    rax,QWORD PTR [rip+0x623d]        # ffffffff80116098 <idle_regs>
ffffffff8010fe5b:	48 8b 3d 5e 62 00 00 	mov    rdi,QWORD PTR [rip+0x625e]        # ffffffff801160c0 <kernel_pml4>
ffffffff8010fe62:	48 c7 05 33 62 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x6233],0x0        # ffffffff801160a0 <running_thread>
ffffffff8010fe6d:	48 89 05 0c 62 00 00 	mov    QWORD PTR [rip+0x620c],rax        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff8010fe74:	e9 67 3a 00 00       	jmp    ffffffff801138e0 <SwitchToAddressSpace>
ffffffff8010fe79:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

ffffffff8010fe80 <ScheduleThread>:
ffffffff8010fe80:	0f b6 87 48 02 00 00 	movzx  eax,BYTE PTR [rdi+0x248]
ffffffff8010fe87:	a8 01                	test   al,0x1
ffffffff8010fe89:	75 4b                	jne    ffffffff8010fed6 <ScheduleThread+0x56>
ffffffff8010fe8b:	48 c7 87 50 02 00 00 00 00 00 00 	mov    QWORD PTR [rdi+0x250],0x0
ffffffff8010fe96:	83 c8 01             	or     eax,0x1
ffffffff8010fe99:	88 87 48 02 00 00    	mov    BYTE PTR [rdi+0x248],al
ffffffff8010fe9f:	48 8b 05 e2 61 00 00 	mov    rax,QWORD PTR [rip+0x61e2]        # ffffffff80116088 <last_awake_thread>
ffffffff8010fea6:	48 89 87 58 02 00 00 	mov    QWORD PTR [rdi+0x258],rax
ffffffff8010fead:	48 85 c0             	test   rax,rax
ffffffff8010feb0:	74 16                	je     ffffffff8010fec8 <ScheduleThread+0x48>
ffffffff8010feb2:	48 89 b8 50 02 00 00 	mov    QWORD PTR [rax+0x250],rdi
ffffffff8010feb9:	48 89 3d c8 61 00 00 	mov    QWORD PTR [rip+0x61c8],rdi        # ffffffff80116088 <last_awake_thread>
ffffffff8010fec0:	c3                   	ret    
ffffffff8010fec1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff8010fec8:	48 89 3d c1 61 00 00 	mov    QWORD PTR [rip+0x61c1],rdi        # ffffffff80116090 <first_awake_thread>
ffffffff8010fecf:	48 89 3d b2 61 00 00 	mov    QWORD PTR [rip+0x61b2],rdi        # ffffffff80116088 <last_awake_thread>
ffffffff8010fed6:	c3                   	ret    
ffffffff8010fed7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]

ffffffff8010fee0 <UnscheduleThread>:
ffffffff8010fee0:	0f b6 87 48 02 00 00 	movzx  eax,BYTE PTR [rdi+0x248]
ffffffff8010fee7:	a8 01                	test   al,0x1
ffffffff8010fee9:	74 3f                	je     ffffffff8010ff2a <UnscheduleThread+0x4a>
ffffffff8010feeb:	48 8b 97 50 02 00 00 	mov    rdx,QWORD PTR [rdi+0x250]
ffffffff8010fef2:	83 e0 fe             	and    eax,0xfffffffe
ffffffff8010fef5:	88 87 48 02 00 00    	mov    BYTE PTR [rdi+0x248],al
ffffffff8010fefb:	48 8b 87 58 02 00 00 	mov    rax,QWORD PTR [rdi+0x258]
ffffffff8010ff02:	48 85 d2             	test   rdx,rdx
ffffffff8010ff05:	74 29                	je     ffffffff8010ff30 <UnscheduleThread+0x50>
ffffffff8010ff07:	48 89 82 58 02 00 00 	mov    QWORD PTR [rdx+0x258],rax
ffffffff8010ff0e:	48 8b 87 58 02 00 00 	mov    rax,QWORD PTR [rdi+0x258]
ffffffff8010ff15:	48 85 c0             	test   rax,rax
ffffffff8010ff18:	74 22                	je     ffffffff8010ff3c <UnscheduleThread+0x5c>
ffffffff8010ff1a:	48 39 3d 7f 61 00 00 	cmp    QWORD PTR [rip+0x617f],rdi        # ffffffff801160a0 <running_thread>
ffffffff8010ff21:	48 89 90 50 02 00 00 	mov    QWORD PTR [rax+0x250],rdx
ffffffff8010ff28:	74 22                	je     ffffffff8010ff4c <UnscheduleThread+0x6c>
ffffffff8010ff2a:	c3                   	ret    
ffffffff8010ff2b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010ff30:	48 89 05 51 61 00 00 	mov    QWORD PTR [rip+0x6151],rax        # ffffffff80116088 <last_awake_thread>
ffffffff8010ff37:	48 85 c0             	test   rax,rax
ffffffff8010ff3a:	75 de                	jne    ffffffff8010ff1a <UnscheduleThread+0x3a>
ffffffff8010ff3c:	48 39 3d 5d 61 00 00 	cmp    QWORD PTR [rip+0x615d],rdi        # ffffffff801160a0 <running_thread>
ffffffff8010ff43:	48 89 15 46 61 00 00 	mov    QWORD PTR [rip+0x6146],rdx        # ffffffff80116090 <first_awake_thread>
ffffffff8010ff4a:	75 de                	jne    ffffffff8010ff2a <UnscheduleThread+0x4a>
ffffffff8010ff4c:	31 c0                	xor    eax,eax
ffffffff8010ff4e:	e9 7d fe ff ff       	jmp    ffffffff8010fdd0 <ScheduleNextThread>
ffffffff8010ff53:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010ff5e:	66 90                	xchg   ax,ax

ffffffff8010ff60 <ScheduleThreadIfWeAreHalted>:
ffffffff8010ff60:	48 83 3d 38 61 00 00 00 	cmp    QWORD PTR [rip+0x6138],0x0        # ffffffff801160a0 <running_thread>
ffffffff8010ff68:	74 06                	je     ffffffff8010ff70 <ScheduleThreadIfWeAreHalted+0x10>
ffffffff8010ff6a:	c3                   	ret    
ffffffff8010ff6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff8010ff70:	48 83 3d 18 61 00 00 00 	cmp    QWORD PTR [rip+0x6118],0x0        # ffffffff80116090 <first_awake_thread>
ffffffff8010ff78:	74 f0                	je     ffffffff8010ff6a <ScheduleThreadIfWeAreHalted+0xa>
ffffffff8010ff7a:	31 c0                	xor    eax,eax
ffffffff8010ff7c:	e9 4f fe ff ff       	jmp    ffffffff8010fdd0 <ScheduleNextThread>
ffffffff8010ff81:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff8010ff8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff8010ff90 <InitializeServices>:
ffffffff8010ff90:	48 c7 05 1d 62 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x621d],0x0        # ffffffff801161b8 <first_process_to_be_notified_when_a_service_appears>
ffffffff8010ff9b:	c3                   	ret    
ffffffff8010ff9c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff8010ffa0 <DoServiceNamesMatch>:
ffffffff8010ffa0:	48 8b 06             	mov    rax,QWORD PTR [rsi]
ffffffff8010ffa3:	48 39 07             	cmp    QWORD PTR [rdi],rax
ffffffff8010ffa6:	75 60                	jne    ffffffff80110008 <DoServiceNamesMatch+0x68>
ffffffff8010ffa8:	48 8b 46 08          	mov    rax,QWORD PTR [rsi+0x8]
ffffffff8010ffac:	48 39 47 08          	cmp    QWORD PTR [rdi+0x8],rax
ffffffff8010ffb0:	75 56                	jne    ffffffff80110008 <DoServiceNamesMatch+0x68>
ffffffff8010ffb2:	48 8b 46 10          	mov    rax,QWORD PTR [rsi+0x10]
ffffffff8010ffb6:	48 39 47 10          	cmp    QWORD PTR [rdi+0x10],rax
ffffffff8010ffba:	75 4c                	jne    ffffffff80110008 <DoServiceNamesMatch+0x68>
ffffffff8010ffbc:	48 8b 46 18          	mov    rax,QWORD PTR [rsi+0x18]
ffffffff8010ffc0:	48 39 47 18          	cmp    QWORD PTR [rdi+0x18],rax
ffffffff8010ffc4:	75 42                	jne    ffffffff80110008 <DoServiceNamesMatch+0x68>
ffffffff8010ffc6:	48 8b 46 20          	mov    rax,QWORD PTR [rsi+0x20]
ffffffff8010ffca:	48 39 47 20          	cmp    QWORD PTR [rdi+0x20],rax
ffffffff8010ffce:	75 38                	jne    ffffffff80110008 <DoServiceNamesMatch+0x68>
ffffffff8010ffd0:	48 8b 46 28          	mov    rax,QWORD PTR [rsi+0x28]
ffffffff8010ffd4:	48 39 47 28          	cmp    QWORD PTR [rdi+0x28],rax
ffffffff8010ffd8:	75 2e                	jne    ffffffff80110008 <DoServiceNamesMatch+0x68>
ffffffff8010ffda:	48 8b 46 30          	mov    rax,QWORD PTR [rsi+0x30]
ffffffff8010ffde:	48 39 47 30          	cmp    QWORD PTR [rdi+0x30],rax
ffffffff8010ffe2:	75 24                	jne    ffffffff80110008 <DoServiceNamesMatch+0x68>
ffffffff8010ffe4:	48 8b 46 38          	mov    rax,QWORD PTR [rsi+0x38]
ffffffff8010ffe8:	48 39 47 38          	cmp    QWORD PTR [rdi+0x38],rax
ffffffff8010ffec:	75 1a                	jne    ffffffff80110008 <DoServiceNamesMatch+0x68>
ffffffff8010ffee:	48 8b 46 40          	mov    rax,QWORD PTR [rsi+0x40]
ffffffff8010fff2:	48 39 47 40          	cmp    QWORD PTR [rdi+0x40],rax
ffffffff8010fff6:	75 10                	jne    ffffffff80110008 <DoServiceNamesMatch+0x68>
ffffffff8010fff8:	48 8b 46 48          	mov    rax,QWORD PTR [rsi+0x48]
ffffffff8010fffc:	48 39 47 48          	cmp    QWORD PTR [rdi+0x48],rax
ffffffff80110000:	0f 94 c0             	sete   al
ffffffff80110003:	c3                   	ret    
ffffffff80110004:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80110008:	31 c0                	xor    eax,eax
ffffffff8011000a:	c3                   	ret    
ffffffff8011000b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff80110010 <RegisterService>:
ffffffff80110010:	41 55                	push   r13
ffffffff80110012:	31 c0                	xor    eax,eax
ffffffff80110014:	49 89 f5             	mov    r13,rsi
ffffffff80110017:	41 54                	push   r12
ffffffff80110019:	49 89 d4             	mov    r12,rdx
ffffffff8011001c:	55                   	push   rbp
ffffffff8011001d:	48 89 fd             	mov    rbp,rdi
ffffffff80110020:	53                   	push   rbx
ffffffff80110021:	48 83 ec 08          	sub    rsp,0x8
ffffffff80110025:	e8 86 f0 ff ff       	call   ffffffff8010f0b0 <AllocateService>
ffffffff8011002a:	48 85 c0             	test   rax,rax
ffffffff8011002d:	0f 84 7f 01 00 00    	je     ffffffff801101b2 <RegisterService+0x1a2>
ffffffff80110033:	4c 89 60 08          	mov    QWORD PTR [rax+0x8],r12
ffffffff80110037:	48 8b 55 00          	mov    rdx,QWORD PTR [rbp+0x0]
ffffffff8011003b:	49 83 bd d8 00 00 00 00 	cmp    QWORD PTR [r13+0xd8],0x0
ffffffff80110043:	4c 89 28             	mov    QWORD PTR [rax],r13
ffffffff80110046:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
ffffffff8011004a:	48 8b 55 08          	mov    rdx,QWORD PTR [rbp+0x8]
ffffffff8011004e:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff80110052:	48 8b 55 10          	mov    rdx,QWORD PTR [rbp+0x10]
ffffffff80110056:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
ffffffff8011005a:	48 8b 55 18          	mov    rdx,QWORD PTR [rbp+0x18]
ffffffff8011005e:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
ffffffff80110062:	48 8b 55 20          	mov    rdx,QWORD PTR [rbp+0x20]
ffffffff80110066:	48 89 50 30          	mov    QWORD PTR [rax+0x30],rdx
ffffffff8011006a:	48 8b 55 28          	mov    rdx,QWORD PTR [rbp+0x28]
ffffffff8011006e:	48 89 50 38          	mov    QWORD PTR [rax+0x38],rdx
ffffffff80110072:	48 8b 55 30          	mov    rdx,QWORD PTR [rbp+0x30]
ffffffff80110076:	48 89 50 40          	mov    QWORD PTR [rax+0x40],rdx
ffffffff8011007a:	48 8b 55 38          	mov    rdx,QWORD PTR [rbp+0x38]
ffffffff8011007e:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
ffffffff80110082:	48 8b 55 40          	mov    rdx,QWORD PTR [rbp+0x40]
ffffffff80110086:	48 89 50 50          	mov    QWORD PTR [rax+0x50],rdx
ffffffff8011008a:	48 8b 55 48          	mov    rdx,QWORD PTR [rbp+0x48]
ffffffff8011008e:	48 89 50 58          	mov    QWORD PTR [rax+0x58],rdx
ffffffff80110092:	74 57                	je     ffffffff801100eb <RegisterService+0xdb>
ffffffff80110094:	49 8b 8d e0 00 00 00 	mov    rcx,QWORD PTR [r13+0xe0]
ffffffff8011009b:	48 85 c9             	test   rcx,rcx
ffffffff8011009e:	0f 84 19 01 00 00    	je     ffffffff801101bd <RegisterService+0x1ad>
ffffffff801100a4:	48 89 ca             	mov    rdx,rcx
ffffffff801100a7:	eb 14                	jmp    ffffffff801100bd <RegisterService+0xad>
ffffffff801100a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff801100b0:	48 8b 52 60          	mov    rdx,QWORD PTR [rdx+0x60]
ffffffff801100b4:	48 85 d2             	test   rdx,rdx
ffffffff801100b7:	0f 84 00 01 00 00    	je     ffffffff801101bd <RegisterService+0x1ad>
ffffffff801100bd:	4c 3b 62 08          	cmp    r12,QWORD PTR [rdx+0x8]
ffffffff801100c1:	72 ed                	jb     ffffffff801100b0 <RegisterService+0xa0>
ffffffff801100c3:	0f 84 0f 01 00 00    	je     ffffffff801101d8 <RegisterService+0x1c8>
ffffffff801100c9:	48 39 d1             	cmp    rcx,rdx
ffffffff801100cc:	0f 85 f5 00 00 00    	jne    ffffffff801101c7 <RegisterService+0x1b7>
ffffffff801100d2:	48 89 48 60          	mov    QWORD PTR [rax+0x60],rcx
ffffffff801100d6:	48 89 41 68          	mov    QWORD PTR [rcx+0x68],rax
ffffffff801100da:	48 c7 40 68 00 00 00 00 	mov    QWORD PTR [rax+0x68],0x0
ffffffff801100e2:	49 89 85 e0 00 00 00 	mov    QWORD PTR [r13+0xe0],rax
ffffffff801100e9:	eb 1e                	jmp    ffffffff80110109 <RegisterService+0xf9>
ffffffff801100eb:	48 c7 40 60 00 00 00 00 	mov    QWORD PTR [rax+0x60],0x0
ffffffff801100f3:	48 c7 40 68 00 00 00 00 	mov    QWORD PTR [rax+0x68],0x0
ffffffff801100fb:	49 89 85 d8 00 00 00 	mov    QWORD PTR [r13+0xd8],rax
ffffffff80110102:	49 89 85 e0 00 00 00 	mov    QWORD PTR [r13+0xe0],rax
ffffffff80110109:	48 8b 1d a8 60 00 00 	mov    rbx,QWORD PTR [rip+0x60a8]        # ffffffff801161b8 <first_process_to_be_notified_when_a_service_appears>
ffffffff80110110:	48 85 db             	test   rbx,rbx
ffffffff80110113:	0f 84 99 00 00 00    	je     ffffffff801101b2 <RegisterService+0x1a2>
ffffffff80110119:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110120:	48 8b 03             	mov    rax,QWORD PTR [rbx]
ffffffff80110123:	48 39 45 00          	cmp    QWORD PTR [rbp+0x0],rax
ffffffff80110127:	75 7c                	jne    ffffffff801101a5 <RegisterService+0x195>
ffffffff80110129:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
ffffffff8011012d:	48 39 45 08          	cmp    QWORD PTR [rbp+0x8],rax
ffffffff80110131:	75 72                	jne    ffffffff801101a5 <RegisterService+0x195>
ffffffff80110133:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
ffffffff80110137:	48 39 45 10          	cmp    QWORD PTR [rbp+0x10],rax
ffffffff8011013b:	75 68                	jne    ffffffff801101a5 <RegisterService+0x195>
ffffffff8011013d:	48 8b 43 18          	mov    rax,QWORD PTR [rbx+0x18]
ffffffff80110141:	48 39 45 18          	cmp    QWORD PTR [rbp+0x18],rax
ffffffff80110145:	75 5e                	jne    ffffffff801101a5 <RegisterService+0x195>
ffffffff80110147:	48 8b 43 20          	mov    rax,QWORD PTR [rbx+0x20]
ffffffff8011014b:	48 39 45 20          	cmp    QWORD PTR [rbp+0x20],rax
ffffffff8011014f:	75 54                	jne    ffffffff801101a5 <RegisterService+0x195>
ffffffff80110151:	48 8b 43 28          	mov    rax,QWORD PTR [rbx+0x28]
ffffffff80110155:	48 39 45 28          	cmp    QWORD PTR [rbp+0x28],rax
ffffffff80110159:	75 4a                	jne    ffffffff801101a5 <RegisterService+0x195>
ffffffff8011015b:	48 8b 43 30          	mov    rax,QWORD PTR [rbx+0x30]
ffffffff8011015f:	48 39 45 30          	cmp    QWORD PTR [rbp+0x30],rax
ffffffff80110163:	75 40                	jne    ffffffff801101a5 <RegisterService+0x195>
ffffffff80110165:	48 8b 43 38          	mov    rax,QWORD PTR [rbx+0x38]
ffffffff80110169:	48 39 45 38          	cmp    QWORD PTR [rbp+0x38],rax
ffffffff8011016d:	75 36                	jne    ffffffff801101a5 <RegisterService+0x195>
ffffffff8011016f:	48 8b 43 40          	mov    rax,QWORD PTR [rbx+0x40]
ffffffff80110173:	48 39 45 40          	cmp    QWORD PTR [rbp+0x40],rax
ffffffff80110177:	75 2c                	jne    ffffffff801101a5 <RegisterService+0x195>
ffffffff80110179:	48 8b 43 48          	mov    rax,QWORD PTR [rbx+0x48]
ffffffff8011017d:	48 39 45 48          	cmp    QWORD PTR [rbp+0x48],rax
ffffffff80110181:	75 22                	jne    ffffffff801101a5 <RegisterService+0x195>
ffffffff80110183:	48 83 ec 08          	sub    rsp,0x8
ffffffff80110187:	48 8b 73 58          	mov    rsi,QWORD PTR [rbx+0x58]
ffffffff8011018b:	48 8b 7b 50          	mov    rdi,QWORD PTR [rbx+0x50]
ffffffff8011018f:	45 31 c9             	xor    r9d,r9d
ffffffff80110192:	6a 00                	push   0x0
ffffffff80110194:	49 8b 55 00          	mov    rdx,QWORD PTR [r13+0x0]
ffffffff80110198:	45 31 c0             	xor    r8d,r8d
ffffffff8011019b:	4c 89 e1             	mov    rcx,r12
ffffffff8011019e:	e8 7d e8 ff ff       	call   ffffffff8010ea20 <SendKernelMessageToProcess>
ffffffff801101a3:	58                   	pop    rax
ffffffff801101a4:	5a                   	pop    rdx
ffffffff801101a5:	48 8b 5b 68          	mov    rbx,QWORD PTR [rbx+0x68]
ffffffff801101a9:	48 85 db             	test   rbx,rbx
ffffffff801101ac:	0f 85 6e ff ff ff    	jne    ffffffff80110120 <RegisterService+0x110>
ffffffff801101b2:	48 83 c4 08          	add    rsp,0x8
ffffffff801101b6:	5b                   	pop    rbx
ffffffff801101b7:	5d                   	pop    rbp
ffffffff801101b8:	41 5c                	pop    r12
ffffffff801101ba:	41 5d                	pop    r13
ffffffff801101bc:	c3                   	ret    
ffffffff801101bd:	48 8b 04 25 08 00 00 00 	mov    rax,QWORD PTR ds:0x8
ffffffff801101c5:	0f 0b                	ud2    
ffffffff801101c7:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
ffffffff801101cb:	48 89 40 68          	mov    QWORD PTR [rax+0x68],rax
ffffffff801101cf:	48 89 40 60          	mov    QWORD PTR [rax+0x60],rax
ffffffff801101d3:	e9 31 ff ff ff       	jmp    ffffffff80110109 <RegisterService+0xf9>
ffffffff801101d8:	48 83 c4 08          	add    rsp,0x8
ffffffff801101dc:	48 89 c7             	mov    rdi,rax
ffffffff801101df:	5b                   	pop    rbx
ffffffff801101e0:	5d                   	pop    rbp
ffffffff801101e1:	41 5c                	pop    r12
ffffffff801101e3:	41 5d                	pop    r13
ffffffff801101e5:	e9 f6 ee ff ff       	jmp    ffffffff8010f0e0 <ReleaseService>
ffffffff801101ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff801101f0 <UnregisterServiceByMessageId>:
ffffffff801101f0:	48 8b bf d8 00 00 00 	mov    rdi,QWORD PTR [rdi+0xd8]
ffffffff801101f7:	48 85 ff             	test   rdi,rdi
ffffffff801101fa:	75 12                	jne    ffffffff8011020e <UnregisterServiceByMessageId+0x1e>
ffffffff801101fc:	eb 5e                	jmp    ffffffff8011025c <UnregisterServiceByMessageId+0x6c>
ffffffff801101fe:	66 90                	xchg   ax,ax
ffffffff80110200:	48 8b 47 68          	mov    rax,QWORD PTR [rdi+0x68]
ffffffff80110204:	74 12                	je     ffffffff80110218 <UnregisterServiceByMessageId+0x28>
ffffffff80110206:	48 85 c0             	test   rax,rax
ffffffff80110209:	74 09                	je     ffffffff80110214 <UnregisterServiceByMessageId+0x24>
ffffffff8011020b:	48 89 c7             	mov    rdi,rax
ffffffff8011020e:	48 39 77 08          	cmp    QWORD PTR [rdi+0x8],rsi
ffffffff80110212:	73 ec                	jae    ffffffff80110200 <UnregisterServiceByMessageId+0x10>
ffffffff80110214:	c3                   	ret    
ffffffff80110215:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80110218:	48 8b 57 60          	mov    rdx,QWORD PTR [rdi+0x60]
ffffffff8011021c:	48 85 d2             	test   rdx,rdx
ffffffff8011021f:	74 1f                	je     ffffffff80110240 <UnregisterServiceByMessageId+0x50>
ffffffff80110221:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
ffffffff80110225:	48 8b 47 68          	mov    rax,QWORD PTR [rdi+0x68]
ffffffff80110229:	48 85 c0             	test   rax,rax
ffffffff8011022c:	74 22                	je     ffffffff80110250 <UnregisterServiceByMessageId+0x60>
ffffffff8011022e:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff80110232:	e9 a9 ee ff ff       	jmp    ffffffff8010f0e0 <ReleaseService>
ffffffff80110237:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80110240:	48 8b 0f             	mov    rcx,QWORD PTR [rdi]
ffffffff80110243:	48 89 81 d8 00 00 00 	mov    QWORD PTR [rcx+0xd8],rax
ffffffff8011024a:	eb dd                	jmp    ffffffff80110229 <UnregisterServiceByMessageId+0x39>
ffffffff8011024c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80110250:	48 8b 07             	mov    rax,QWORD PTR [rdi]
ffffffff80110253:	48 89 90 e0 00 00 00 	mov    QWORD PTR [rax+0xe0],rdx
ffffffff8011025a:	eb d6                	jmp    ffffffff80110232 <UnregisterServiceByMessageId+0x42>
ffffffff8011025c:	c3                   	ret    
ffffffff8011025d:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff80110260 <UnregisterService>:
ffffffff80110260:	48 8b 57 60          	mov    rdx,QWORD PTR [rdi+0x60]
ffffffff80110264:	48 8b 47 68          	mov    rax,QWORD PTR [rdi+0x68]
ffffffff80110268:	48 85 d2             	test   rdx,rdx
ffffffff8011026b:	74 1b                	je     ffffffff80110288 <UnregisterService+0x28>
ffffffff8011026d:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
ffffffff80110271:	48 8b 47 68          	mov    rax,QWORD PTR [rdi+0x68]
ffffffff80110275:	48 85 c0             	test   rax,rax
ffffffff80110278:	74 1d                	je     ffffffff80110297 <UnregisterService+0x37>
ffffffff8011027a:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff8011027e:	e9 5d ee ff ff       	jmp    ffffffff8010f0e0 <ReleaseService>
ffffffff80110283:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110288:	48 8b 0f             	mov    rcx,QWORD PTR [rdi]
ffffffff8011028b:	48 89 81 d8 00 00 00 	mov    QWORD PTR [rcx+0xd8],rax
ffffffff80110292:	48 85 c0             	test   rax,rax
ffffffff80110295:	75 e3                	jne    ffffffff8011027a <UnregisterService+0x1a>
ffffffff80110297:	48 8b 07             	mov    rax,QWORD PTR [rdi]
ffffffff8011029a:	48 89 90 e0 00 00 00 	mov    QWORD PTR [rax+0xe0],rdx
ffffffff801102a1:	e9 3a ee ff ff       	jmp    ffffffff8010f0e0 <ReleaseService>
ffffffff801102a6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]

ffffffff801102b0 <FindNextServiceByPidAndMidWithName>:
ffffffff801102b0:	41 54                	push   r12
ffffffff801102b2:	49 89 f4             	mov    r12,rsi
ffffffff801102b5:	55                   	push   rbp
ffffffff801102b6:	48 89 d5             	mov    rbp,rdx
ffffffff801102b9:	53                   	push   rbx
ffffffff801102ba:	48 89 fb             	mov    rbx,rdi
ffffffff801102bd:	48 89 f7             	mov    rdi,rsi
ffffffff801102c0:	e8 7b f7 ff ff       	call   ffffffff8010fa40 <GetProcessOrNextFromPid>
ffffffff801102c5:	4c 39 20             	cmp    QWORD PTR [rax],r12
ffffffff801102c8:	48 89 c2             	mov    rdx,rax
ffffffff801102cb:	b8 00 00 00 00       	mov    eax,0x0
ffffffff801102d0:	48 0f 45 e8          	cmovne rbp,rax
ffffffff801102d4:	48 8b 82 d8 00 00 00 	mov    rax,QWORD PTR [rdx+0xd8]
ffffffff801102db:	48 85 c0             	test   rax,rax
ffffffff801102de:	75 11                	jne    ffffffff801102f1 <FindNextServiceByPidAndMidWithName+0x41>
ffffffff801102e0:	eb 7e                	jmp    ffffffff80110360 <FindNextServiceByPidAndMidWithName+0xb0>
ffffffff801102e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff801102e8:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
ffffffff801102ec:	48 85 c0             	test   rax,rax
ffffffff801102ef:	74 6f                	je     ffffffff80110360 <FindNextServiceByPidAndMidWithName+0xb0>
ffffffff801102f1:	48 39 68 08          	cmp    QWORD PTR [rax+0x8],rbp
ffffffff801102f5:	72 f1                	jb     ffffffff801102e8 <FindNextServiceByPidAndMidWithName+0x38>
ffffffff801102f7:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
ffffffff801102fb:	48 39 0b             	cmp    QWORD PTR [rbx],rcx
ffffffff801102fe:	75 e8                	jne    ffffffff801102e8 <FindNextServiceByPidAndMidWithName+0x38>
ffffffff80110300:	48 8b 70 18          	mov    rsi,QWORD PTR [rax+0x18]
ffffffff80110304:	48 39 73 08          	cmp    QWORD PTR [rbx+0x8],rsi
ffffffff80110308:	75 de                	jne    ffffffff801102e8 <FindNextServiceByPidAndMidWithName+0x38>
ffffffff8011030a:	48 8b 78 20          	mov    rdi,QWORD PTR [rax+0x20]
ffffffff8011030e:	48 39 7b 10          	cmp    QWORD PTR [rbx+0x10],rdi
ffffffff80110312:	75 d4                	jne    ffffffff801102e8 <FindNextServiceByPidAndMidWithName+0x38>
ffffffff80110314:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
ffffffff80110318:	48 39 4b 18          	cmp    QWORD PTR [rbx+0x18],rcx
ffffffff8011031c:	75 ca                	jne    ffffffff801102e8 <FindNextServiceByPidAndMidWithName+0x38>
ffffffff8011031e:	48 8b 78 30          	mov    rdi,QWORD PTR [rax+0x30]
ffffffff80110322:	48 39 7b 20          	cmp    QWORD PTR [rbx+0x20],rdi
ffffffff80110326:	75 c0                	jne    ffffffff801102e8 <FindNextServiceByPidAndMidWithName+0x38>
ffffffff80110328:	48 8b 70 38          	mov    rsi,QWORD PTR [rax+0x38]
ffffffff8011032c:	48 39 73 28          	cmp    QWORD PTR [rbx+0x28],rsi
ffffffff80110330:	75 b6                	jne    ffffffff801102e8 <FindNextServiceByPidAndMidWithName+0x38>
ffffffff80110332:	48 8b 70 40          	mov    rsi,QWORD PTR [rax+0x40]
ffffffff80110336:	48 39 73 30          	cmp    QWORD PTR [rbx+0x30],rsi
ffffffff8011033a:	75 ac                	jne    ffffffff801102e8 <FindNextServiceByPidAndMidWithName+0x38>
ffffffff8011033c:	48 8b 48 48          	mov    rcx,QWORD PTR [rax+0x48]
ffffffff80110340:	48 39 4b 38          	cmp    QWORD PTR [rbx+0x38],rcx
ffffffff80110344:	75 a2                	jne    ffffffff801102e8 <FindNextServiceByPidAndMidWithName+0x38>
ffffffff80110346:	48 8b 78 50          	mov    rdi,QWORD PTR [rax+0x50]
ffffffff8011034a:	48 39 7b 40          	cmp    QWORD PTR [rbx+0x40],rdi
ffffffff8011034e:	75 98                	jne    ffffffff801102e8 <FindNextServiceByPidAndMidWithName+0x38>
ffffffff80110350:	48 8b 78 58          	mov    rdi,QWORD PTR [rax+0x58]
ffffffff80110354:	48 39 7b 48          	cmp    QWORD PTR [rbx+0x48],rdi
ffffffff80110358:	75 8e                	jne    ffffffff801102e8 <FindNextServiceByPidAndMidWithName+0x38>
ffffffff8011035a:	5b                   	pop    rbx
ffffffff8011035b:	5d                   	pop    rbp
ffffffff8011035c:	41 5c                	pop    r12
ffffffff8011035e:	c3                   	ret    
ffffffff8011035f:	90                   	nop
ffffffff80110360:	48 8b 92 b0 00 00 00 	mov    rdx,QWORD PTR [rdx+0xb0]
ffffffff80110367:	31 ed                	xor    ebp,ebp
ffffffff80110369:	48 85 d2             	test   rdx,rdx
ffffffff8011036c:	0f 85 62 ff ff ff    	jne    ffffffff801102d4 <FindNextServiceByPidAndMidWithName+0x24>
ffffffff80110372:	5b                   	pop    rbx
ffffffff80110373:	31 c0                	xor    eax,eax
ffffffff80110375:	5d                   	pop    rbp
ffffffff80110376:	41 5c                	pop    r12
ffffffff80110378:	c3                   	ret    
ffffffff80110379:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

ffffffff80110380 <FindNextServiceWithName>:
ffffffff80110380:	48 85 f6             	test   rsi,rsi
ffffffff80110383:	0f 84 a2 00 00 00    	je     ffffffff8011042b <FindNextServiceWithName+0xab>
ffffffff80110389:	41 54                	push   r12
ffffffff8011038b:	55                   	push   rbp
ffffffff8011038c:	53                   	push   rbx
ffffffff8011038d:	4c 8b 26             	mov    r12,QWORD PTR [rsi]
ffffffff80110390:	48 8b 46 68          	mov    rax,QWORD PTR [rsi+0x68]
ffffffff80110394:	4d 85 e4             	test   r12,r12
ffffffff80110397:	74 6b                	je     ffffffff80110404 <FindNextServiceWithName+0x84>
ffffffff80110399:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
ffffffff8011039c:	48 8b 4f 08          	mov    rcx,QWORD PTR [rdi+0x8]
ffffffff801103a0:	48 8b 77 10          	mov    rsi,QWORD PTR [rdi+0x10]
ffffffff801103a4:	4c 8b 47 18          	mov    r8,QWORD PTR [rdi+0x18]
ffffffff801103a8:	4c 8b 4f 20          	mov    r9,QWORD PTR [rdi+0x20]
ffffffff801103ac:	4c 8b 57 28          	mov    r10,QWORD PTR [rdi+0x28]
ffffffff801103b0:	4c 8b 5f 30          	mov    r11,QWORD PTR [rdi+0x30]
ffffffff801103b4:	48 8b 5f 38          	mov    rbx,QWORD PTR [rdi+0x38]
ffffffff801103b8:	48 8b 6f 40          	mov    rbp,QWORD PTR [rdi+0x40]
ffffffff801103bc:	48 8b 7f 48          	mov    rdi,QWORD PTR [rdi+0x48]
ffffffff801103c0:	48 85 c0             	test   rax,rax
ffffffff801103c3:	74 54                	je     ffffffff80110419 <FindNextServiceWithName+0x99>
ffffffff801103c5:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff801103c8:	48 39 50 10          	cmp    QWORD PTR [rax+0x10],rdx
ffffffff801103cc:	75 42                	jne    ffffffff80110410 <FindNextServiceWithName+0x90>
ffffffff801103ce:	48 39 48 18          	cmp    QWORD PTR [rax+0x18],rcx
ffffffff801103d2:	75 3c                	jne    ffffffff80110410 <FindNextServiceWithName+0x90>
ffffffff801103d4:	48 39 70 20          	cmp    QWORD PTR [rax+0x20],rsi
ffffffff801103d8:	75 36                	jne    ffffffff80110410 <FindNextServiceWithName+0x90>
ffffffff801103da:	4c 39 40 28          	cmp    QWORD PTR [rax+0x28],r8
ffffffff801103de:	75 30                	jne    ffffffff80110410 <FindNextServiceWithName+0x90>
ffffffff801103e0:	4c 39 48 30          	cmp    QWORD PTR [rax+0x30],r9
ffffffff801103e4:	75 2a                	jne    ffffffff80110410 <FindNextServiceWithName+0x90>
ffffffff801103e6:	4c 39 50 38          	cmp    QWORD PTR [rax+0x38],r10
ffffffff801103ea:	75 24                	jne    ffffffff80110410 <FindNextServiceWithName+0x90>
ffffffff801103ec:	4c 39 58 40          	cmp    QWORD PTR [rax+0x40],r11
ffffffff801103f0:	75 1e                	jne    ffffffff80110410 <FindNextServiceWithName+0x90>
ffffffff801103f2:	48 39 58 48          	cmp    QWORD PTR [rax+0x48],rbx
ffffffff801103f6:	75 18                	jne    ffffffff80110410 <FindNextServiceWithName+0x90>
ffffffff801103f8:	48 39 68 50          	cmp    QWORD PTR [rax+0x50],rbp
ffffffff801103fc:	75 12                	jne    ffffffff80110410 <FindNextServiceWithName+0x90>
ffffffff801103fe:	48 39 78 58          	cmp    QWORD PTR [rax+0x58],rdi
ffffffff80110402:	75 0c                	jne    ffffffff80110410 <FindNextServiceWithName+0x90>
ffffffff80110404:	5b                   	pop    rbx
ffffffff80110405:	5d                   	pop    rbp
ffffffff80110406:	41 5c                	pop    r12
ffffffff80110408:	c3                   	ret    
ffffffff80110409:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110410:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
ffffffff80110414:	48 85 c0             	test   rax,rax
ffffffff80110417:	75 af                	jne    ffffffff801103c8 <FindNextServiceWithName+0x48>
ffffffff80110419:	4d 8b a4 24 b0 00 00 00 	mov    r12,QWORD PTR [r12+0xb0]
ffffffff80110421:	49 8b 84 24 d8 00 00 00 	mov    rax,QWORD PTR [r12+0xd8]
ffffffff80110429:	eb 95                	jmp    ffffffff801103c0 <FindNextServiceWithName+0x40>
ffffffff8011042b:	31 c0                	xor    eax,eax
ffffffff8011042d:	c3                   	ret    
ffffffff8011042e:	66 90                	xchg   ax,ax

ffffffff80110430 <NotifyProcessWhenServiceAppears>:
ffffffff80110430:	41 56                	push   r14
ffffffff80110432:	31 c0                	xor    eax,eax
ffffffff80110434:	41 55                	push   r13
ffffffff80110436:	49 89 d5             	mov    r13,rdx
ffffffff80110439:	41 54                	push   r12
ffffffff8011043b:	49 89 f4             	mov    r12,rsi
ffffffff8011043e:	55                   	push   rbp
ffffffff8011043f:	48 89 fd             	mov    rbp,rdi
ffffffff80110442:	53                   	push   rbx
ffffffff80110443:	e8 b8 ec ff ff       	call   ffffffff8010f100 <AllocateProcessToNotifyWhenServiceAppears>
ffffffff80110448:	48 85 c0             	test   rax,rax
ffffffff8011044b:	0f 84 73 01 00 00    	je     ffffffff801105c4 <NotifyProcessWhenServiceAppears+0x194>
ffffffff80110451:	4c 89 68 58          	mov    QWORD PTR [rax+0x58],r13
ffffffff80110455:	48 8b 55 00          	mov    rdx,QWORD PTR [rbp+0x0]
ffffffff80110459:	4c 89 60 50          	mov    QWORD PTR [rax+0x50],r12
ffffffff8011045d:	48 89 10             	mov    QWORD PTR [rax],rdx
ffffffff80110460:	48 8b 55 08          	mov    rdx,QWORD PTR [rbp+0x8]
ffffffff80110464:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffffffff80110468:	48 8b 55 10          	mov    rdx,QWORD PTR [rbp+0x10]
ffffffff8011046c:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
ffffffff80110470:	48 8b 55 18          	mov    rdx,QWORD PTR [rbp+0x18]
ffffffff80110474:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff80110478:	48 8b 55 20          	mov    rdx,QWORD PTR [rbp+0x20]
ffffffff8011047c:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
ffffffff80110480:	48 8b 55 28          	mov    rdx,QWORD PTR [rbp+0x28]
ffffffff80110484:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
ffffffff80110488:	48 8b 55 30          	mov    rdx,QWORD PTR [rbp+0x30]
ffffffff8011048c:	48 89 50 30          	mov    QWORD PTR [rax+0x30],rdx
ffffffff80110490:	48 8b 55 38          	mov    rdx,QWORD PTR [rbp+0x38]
ffffffff80110494:	48 89 50 38          	mov    QWORD PTR [rax+0x38],rdx
ffffffff80110498:	48 8b 55 40          	mov    rdx,QWORD PTR [rbp+0x40]
ffffffff8011049c:	48 89 50 40          	mov    QWORD PTR [rax+0x40],rdx
ffffffff801104a0:	48 8b 55 48          	mov    rdx,QWORD PTR [rbp+0x48]
ffffffff801104a4:	48 c7 40 60 00 00 00 00 	mov    QWORD PTR [rax+0x60],0x0
ffffffff801104ac:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
ffffffff801104b0:	48 8b 15 01 5d 00 00 	mov    rdx,QWORD PTR [rip+0x5d01]        # ffffffff801161b8 <first_process_to_be_notified_when_a_service_appears>
ffffffff801104b7:	48 85 d2             	test   rdx,rdx
ffffffff801104ba:	0f 84 0d 01 00 00    	je     ffffffff801105cd <NotifyProcessWhenServiceAppears+0x19d>
ffffffff801104c0:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
ffffffff801104c4:	48 89 42 60          	mov    QWORD PTR [rdx+0x60],rax
ffffffff801104c8:	49 8b 94 24 d0 00 00 00 	mov    rdx,QWORD PTR [r12+0xd0]
ffffffff801104d0:	48 89 05 e1 5c 00 00 	mov    QWORD PTR [rip+0x5ce1],rax        # ffffffff801161b8 <first_process_to_be_notified_when_a_service_appears>
ffffffff801104d7:	48 c7 40 70 00 00 00 00 	mov    QWORD PTR [rax+0x70],0x0
ffffffff801104df:	48 85 d2             	test   rdx,rdx
ffffffff801104e2:	0f 84 f2 00 00 00    	je     ffffffff801105da <NotifyProcessWhenServiceAppears+0x1aa>
ffffffff801104e8:	48 89 50 78          	mov    QWORD PTR [rax+0x78],rdx
ffffffff801104ec:	48 89 42 70          	mov    QWORD PTR [rdx+0x70],rax
ffffffff801104f0:	49 89 84 24 d0 00 00 00 	mov    QWORD PTR [r12+0xd0],rax
ffffffff801104f8:	31 ff                	xor    edi,edi
ffffffff801104fa:	e8 41 f5 ff ff       	call   ffffffff8010fa40 <GetProcessOrNextFromPid>
ffffffff801104ff:	49 89 c6             	mov    r14,rax
ffffffff80110502:	48 85 c0             	test   rax,rax
ffffffff80110505:	0f 84 b9 00 00 00    	je     ffffffff801105c4 <NotifyProcessWhenServiceAppears+0x194>
ffffffff8011050b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110510:	49 8b 9e d8 00 00 00 	mov    rbx,QWORD PTR [r14+0xd8]
ffffffff80110517:	48 85 db             	test   rbx,rbx
ffffffff8011051a:	0f 84 94 00 00 00    	je     ffffffff801105b4 <NotifyProcessWhenServiceAppears+0x184>
ffffffff80110520:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
ffffffff80110524:	48 39 45 00          	cmp    QWORD PTR [rbp+0x0],rax
ffffffff80110528:	75 7d                	jne    ffffffff801105a7 <NotifyProcessWhenServiceAppears+0x177>
ffffffff8011052a:	48 8b 43 18          	mov    rax,QWORD PTR [rbx+0x18]
ffffffff8011052e:	48 39 45 08          	cmp    QWORD PTR [rbp+0x8],rax
ffffffff80110532:	75 73                	jne    ffffffff801105a7 <NotifyProcessWhenServiceAppears+0x177>
ffffffff80110534:	48 8b 43 20          	mov    rax,QWORD PTR [rbx+0x20]
ffffffff80110538:	48 39 45 10          	cmp    QWORD PTR [rbp+0x10],rax
ffffffff8011053c:	75 69                	jne    ffffffff801105a7 <NotifyProcessWhenServiceAppears+0x177>
ffffffff8011053e:	48 8b 43 28          	mov    rax,QWORD PTR [rbx+0x28]
ffffffff80110542:	48 39 45 18          	cmp    QWORD PTR [rbp+0x18],rax
ffffffff80110546:	75 5f                	jne    ffffffff801105a7 <NotifyProcessWhenServiceAppears+0x177>
ffffffff80110548:	48 8b 43 30          	mov    rax,QWORD PTR [rbx+0x30]
ffffffff8011054c:	48 39 45 20          	cmp    QWORD PTR [rbp+0x20],rax
ffffffff80110550:	75 55                	jne    ffffffff801105a7 <NotifyProcessWhenServiceAppears+0x177>
ffffffff80110552:	48 8b 43 38          	mov    rax,QWORD PTR [rbx+0x38]
ffffffff80110556:	48 39 45 28          	cmp    QWORD PTR [rbp+0x28],rax
ffffffff8011055a:	75 4b                	jne    ffffffff801105a7 <NotifyProcessWhenServiceAppears+0x177>
ffffffff8011055c:	48 8b 43 40          	mov    rax,QWORD PTR [rbx+0x40]
ffffffff80110560:	48 39 45 30          	cmp    QWORD PTR [rbp+0x30],rax
ffffffff80110564:	75 41                	jne    ffffffff801105a7 <NotifyProcessWhenServiceAppears+0x177>
ffffffff80110566:	48 8b 43 48          	mov    rax,QWORD PTR [rbx+0x48]
ffffffff8011056a:	48 39 45 38          	cmp    QWORD PTR [rbp+0x38],rax
ffffffff8011056e:	75 37                	jne    ffffffff801105a7 <NotifyProcessWhenServiceAppears+0x177>
ffffffff80110570:	48 8b 43 50          	mov    rax,QWORD PTR [rbx+0x50]
ffffffff80110574:	48 39 45 40          	cmp    QWORD PTR [rbp+0x40],rax
ffffffff80110578:	75 2d                	jne    ffffffff801105a7 <NotifyProcessWhenServiceAppears+0x177>
ffffffff8011057a:	48 8b 43 58          	mov    rax,QWORD PTR [rbx+0x58]
ffffffff8011057e:	48 39 45 48          	cmp    QWORD PTR [rbp+0x48],rax
ffffffff80110582:	75 23                	jne    ffffffff801105a7 <NotifyProcessWhenServiceAppears+0x177>
ffffffff80110584:	48 8b 03             	mov    rax,QWORD PTR [rbx]
ffffffff80110587:	48 83 ec 08          	sub    rsp,0x8
ffffffff8011058b:	48 8b 4b 08          	mov    rcx,QWORD PTR [rbx+0x8]
ffffffff8011058f:	45 31 c9             	xor    r9d,r9d
ffffffff80110592:	6a 00                	push   0x0
ffffffff80110594:	45 31 c0             	xor    r8d,r8d
ffffffff80110597:	4c 89 ee             	mov    rsi,r13
ffffffff8011059a:	4c 89 e7             	mov    rdi,r12
ffffffff8011059d:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffffffff801105a0:	e8 7b e4 ff ff       	call   ffffffff8010ea20 <SendKernelMessageToProcess>
ffffffff801105a5:	58                   	pop    rax
ffffffff801105a6:	5a                   	pop    rdx
ffffffff801105a7:	48 8b 5b 68          	mov    rbx,QWORD PTR [rbx+0x68]
ffffffff801105ab:	48 85 db             	test   rbx,rbx
ffffffff801105ae:	0f 85 6c ff ff ff    	jne    ffffffff80110520 <NotifyProcessWhenServiceAppears+0xf0>
ffffffff801105b4:	4d 8b b6 b0 00 00 00 	mov    r14,QWORD PTR [r14+0xb0]
ffffffff801105bb:	4d 85 f6             	test   r14,r14
ffffffff801105be:	0f 85 4c ff ff ff    	jne    ffffffff80110510 <NotifyProcessWhenServiceAppears+0xe0>
ffffffff801105c4:	5b                   	pop    rbx
ffffffff801105c5:	5d                   	pop    rbp
ffffffff801105c6:	41 5c                	pop    r12
ffffffff801105c8:	41 5d                	pop    r13
ffffffff801105ca:	41 5e                	pop    r14
ffffffff801105cc:	c3                   	ret    
ffffffff801105cd:	48 c7 40 68 00 00 00 00 	mov    QWORD PTR [rax+0x68],0x0
ffffffff801105d5:	e9 ee fe ff ff       	jmp    ffffffff801104c8 <NotifyProcessWhenServiceAppears+0x98>
ffffffff801105da:	48 c7 40 78 00 00 00 00 	mov    QWORD PTR [rax+0x78],0x0
ffffffff801105e2:	e9 09 ff ff ff       	jmp    ffffffff801104f0 <NotifyProcessWhenServiceAppears+0xc0>
ffffffff801105e7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]

ffffffff801105f0 <StopNotifyingProcessWhenServiceAppearsByMessageId>:
ffffffff801105f0:	55                   	push   rbp
ffffffff801105f1:	53                   	push   rbx
ffffffff801105f2:	48 83 ec 08          	sub    rsp,0x8
ffffffff801105f6:	48 8b 9f d0 00 00 00 	mov    rbx,QWORD PTR [rdi+0xd0]
ffffffff801105fd:	48 85 db             	test   rbx,rbx
ffffffff80110600:	74 62                	je     ffffffff80110664 <StopNotifyingProcessWhenServiceAppearsByMessageId+0x74>
ffffffff80110602:	48 89 f5             	mov    rbp,rsi
ffffffff80110605:	eb 0e                	jmp    ffffffff80110615 <StopNotifyingProcessWhenServiceAppearsByMessageId+0x25>
ffffffff80110607:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80110610:	48 85 db             	test   rbx,rbx
ffffffff80110613:	74 4f                	je     ffffffff80110664 <StopNotifyingProcessWhenServiceAppearsByMessageId+0x74>
ffffffff80110615:	48 89 df             	mov    rdi,rbx
ffffffff80110618:	48 8b 5b 78          	mov    rbx,QWORD PTR [rbx+0x78]
ffffffff8011061c:	48 39 6f 58          	cmp    QWORD PTR [rdi+0x58],rbp
ffffffff80110620:	75 ee                	jne    ffffffff80110610 <StopNotifyingProcessWhenServiceAppearsByMessageId+0x20>
ffffffff80110622:	48 8b 57 60          	mov    rdx,QWORD PTR [rdi+0x60]
ffffffff80110626:	48 8b 47 68          	mov    rax,QWORD PTR [rdi+0x68]
ffffffff8011062a:	48 85 d2             	test   rdx,rdx
ffffffff8011062d:	74 41                	je     ffffffff80110670 <StopNotifyingProcessWhenServiceAppearsByMessageId+0x80>
ffffffff8011062f:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
ffffffff80110633:	48 8b 47 68          	mov    rax,QWORD PTR [rdi+0x68]
ffffffff80110637:	48 85 c0             	test   rax,rax
ffffffff8011063a:	74 04                	je     ffffffff80110640 <StopNotifyingProcessWhenServiceAppearsByMessageId+0x50>
ffffffff8011063c:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff80110640:	48 8b 47 70          	mov    rax,QWORD PTR [rdi+0x70]
ffffffff80110644:	48 85 c0             	test   rax,rax
ffffffff80110647:	74 37                	je     ffffffff80110680 <StopNotifyingProcessWhenServiceAppearsByMessageId+0x90>
ffffffff80110649:	48 89 58 78          	mov    QWORD PTR [rax+0x78],rbx
ffffffff8011064d:	48 8b 57 78          	mov    rdx,QWORD PTR [rdi+0x78]
ffffffff80110651:	48 85 d2             	test   rdx,rdx
ffffffff80110654:	74 04                	je     ffffffff8011065a <StopNotifyingProcessWhenServiceAppearsByMessageId+0x6a>
ffffffff80110656:	48 89 42 70          	mov    QWORD PTR [rdx+0x70],rax
ffffffff8011065a:	e8 d1 ea ff ff       	call   ffffffff8010f130 <ReleaseProcessToNotifyWhenServiceAppears>
ffffffff8011065f:	48 85 db             	test   rbx,rbx
ffffffff80110662:	75 b1                	jne    ffffffff80110615 <StopNotifyingProcessWhenServiceAppearsByMessageId+0x25>
ffffffff80110664:	48 83 c4 08          	add    rsp,0x8
ffffffff80110668:	5b                   	pop    rbx
ffffffff80110669:	5d                   	pop    rbp
ffffffff8011066a:	c3                   	ret    
ffffffff8011066b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110670:	48 89 05 41 5b 00 00 	mov    QWORD PTR [rip+0x5b41],rax        # ffffffff801161b8 <first_process_to_be_notified_when_a_service_appears>
ffffffff80110677:	eb be                	jmp    ffffffff80110637 <StopNotifyingProcessWhenServiceAppearsByMessageId+0x47>
ffffffff80110679:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110680:	48 8b 57 50          	mov    rdx,QWORD PTR [rdi+0x50]
ffffffff80110684:	48 89 9a d0 00 00 00 	mov    QWORD PTR [rdx+0xd0],rbx
ffffffff8011068b:	48 89 da             	mov    rdx,rbx
ffffffff8011068e:	eb c1                	jmp    ffffffff80110651 <StopNotifyingProcessWhenServiceAppearsByMessageId+0x61>

ffffffff80110690 <StopNotifyingProcessWhenServiceAppears>:
ffffffff80110690:	48 8b 57 60          	mov    rdx,QWORD PTR [rdi+0x60]
ffffffff80110694:	48 8b 47 68          	mov    rax,QWORD PTR [rdi+0x68]
ffffffff80110698:	48 85 d2             	test   rdx,rdx
ffffffff8011069b:	74 3b                	je     ffffffff801106d8 <StopNotifyingProcessWhenServiceAppears+0x48>
ffffffff8011069d:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
ffffffff801106a1:	48 8b 47 68          	mov    rax,QWORD PTR [rdi+0x68]
ffffffff801106a5:	48 85 c0             	test   rax,rax
ffffffff801106a8:	74 04                	je     ffffffff801106ae <StopNotifyingProcessWhenServiceAppears+0x1e>
ffffffff801106aa:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff801106ae:	48 8b 57 70          	mov    rdx,QWORD PTR [rdi+0x70]
ffffffff801106b2:	48 8b 47 78          	mov    rax,QWORD PTR [rdi+0x78]
ffffffff801106b6:	48 85 d2             	test   rdx,rdx
ffffffff801106b9:	74 2d                	je     ffffffff801106e8 <StopNotifyingProcessWhenServiceAppears+0x58>
ffffffff801106bb:	48 89 42 78          	mov    QWORD PTR [rdx+0x78],rax
ffffffff801106bf:	48 8b 47 78          	mov    rax,QWORD PTR [rdi+0x78]
ffffffff801106c3:	48 85 c0             	test   rax,rax
ffffffff801106c6:	74 04                	je     ffffffff801106cc <StopNotifyingProcessWhenServiceAppears+0x3c>
ffffffff801106c8:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
ffffffff801106cc:	e9 5f ea ff ff       	jmp    ffffffff8010f130 <ReleaseProcessToNotifyWhenServiceAppears>
ffffffff801106d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff801106d8:	48 89 05 d9 5a 00 00 	mov    QWORD PTR [rip+0x5ad9],rax        # ffffffff801161b8 <first_process_to_be_notified_when_a_service_appears>
ffffffff801106df:	eb c4                	jmp    ffffffff801106a5 <StopNotifyingProcessWhenServiceAppears+0x15>
ffffffff801106e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff801106e8:	48 8b 4f 50          	mov    rcx,QWORD PTR [rdi+0x50]
ffffffff801106ec:	48 89 81 d0 00 00 00 	mov    QWORD PTR [rcx+0xd0],rax
ffffffff801106f3:	eb ce                	jmp    ffffffff801106c3 <StopNotifyingProcessWhenServiceAppears+0x33>
ffffffff801106f5:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff801106ff:	90                   	nop

ffffffff80110700 <sys_call_stack_pointer>:
	...

ffffffff80110708 <syscall_entry>:
ffffffff80110708:	48 89 24 25 00 07 11 80 	mov    QWORD PTR ds:0xffffffff80110700,rsp
ffffffff80110710:	48 8b 24 25 80 60 11 80 	mov    rsp,QWORD PTR ds:0xffffffff80116080
ffffffff80110718:	48 81 c4 98 00 00 00 	add    rsp,0x98
ffffffff8011071f:	ff 34 25 00 07 11 80 	push   QWORD PTR ds:0xffffffff80110700
ffffffff80110726:	41 53                	push   r11
ffffffff80110728:	48 83 ec 08          	sub    rsp,0x8
ffffffff8011072c:	51                   	push   rcx
ffffffff8011072d:	55                   	push   rbp
ffffffff8011072e:	57                   	push   rdi
ffffffff8011072f:	50                   	push   rax
ffffffff80110730:	53                   	push   rbx
ffffffff80110731:	48 83 ec 08          	sub    rsp,0x8
ffffffff80110735:	52                   	push   rdx
ffffffff80110736:	56                   	push   rsi
ffffffff80110737:	41 50                	push   r8
ffffffff80110739:	41 51                	push   r9
ffffffff8011073b:	41 52                	push   r10
ffffffff8011073d:	48 83 ec 08          	sub    rsp,0x8
ffffffff80110741:	41 54                	push   r12
ffffffff80110743:	41 55                	push   r13
ffffffff80110745:	41 56                	push   r14
ffffffff80110747:	41 57                	push   r15
ffffffff80110749:	66 b8 10 00          	mov    ax,0x10
ffffffff8011074d:	8e d8                	mov    ds,eax
ffffffff8011074f:	8e c0                	mov    es,eax
ffffffff80110751:	48 8b 24 25 40 60 11 80 	mov    rsp,QWORD PTR ds:0xffffffff80116040
ffffffff80110759:	48 b8 e0 07 11 80 ff ff ff ff 	movabs rax,0xffffffff801107e0
ffffffff80110763:	ff d0                	call   rax
ffffffff80110765:	66 b8 1b 00          	mov    ax,0x1b
ffffffff80110769:	8e d8                	mov    ds,eax
ffffffff8011076b:	8e c0                	mov    es,eax
ffffffff8011076d:	48 8b 24 25 80 60 11 80 	mov    rsp,QWORD PTR ds:0xffffffff80116080
ffffffff80110775:	41 5f                	pop    r15
ffffffff80110777:	41 5e                	pop    r14
ffffffff80110779:	41 5d                	pop    r13
ffffffff8011077b:	41 5c                	pop    r12
ffffffff8011077d:	48 83 c4 08          	add    rsp,0x8
ffffffff80110781:	41 5a                	pop    r10
ffffffff80110783:	41 59                	pop    r9
ffffffff80110785:	41 58                	pop    r8
ffffffff80110787:	5e                   	pop    rsi
ffffffff80110788:	5a                   	pop    rdx
ffffffff80110789:	48 83 c4 08          	add    rsp,0x8
ffffffff8011078d:	5b                   	pop    rbx
ffffffff8011078e:	58                   	pop    rax
ffffffff8011078f:	5f                   	pop    rdi
ffffffff80110790:	5d                   	pop    rbp
ffffffff80110791:	59                   	pop    rcx
ffffffff80110792:	48 83 c4 08          	add    rsp,0x8
ffffffff80110796:	41 5b                	pop    r11
ffffffff80110798:	5c                   	pop    rsp
ffffffff80110799:	48 0f 07             	sysretq 
ffffffff8011079c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff801107a0 <InitializeSystemCalls>:
ffffffff801107a0:	31 f6                	xor    esi,esi
ffffffff801107a2:	b9 81 00 00 c0       	mov    ecx,0xc0000081
ffffffff801107a7:	ba 08 00 10 00       	mov    edx,0x100008
ffffffff801107ac:	89 f0                	mov    eax,esi
ffffffff801107ae:	0f 30                	wrmsr  
ffffffff801107b0:	48 c7 c0 08 07 11 80 	mov    rax,0xffffffff80110708
ffffffff801107b7:	48 83 c1 01          	add    rcx,0x1
ffffffff801107bb:	48 89 c2             	mov    rdx,rax
ffffffff801107be:	48 c1 ea 20          	shr    rdx,0x20
ffffffff801107c2:	0f 30                	wrmsr  
ffffffff801107c4:	b8 00 02 00 00       	mov    eax,0x200
ffffffff801107c9:	48 83 c1 02          	add    rcx,0x2
ffffffff801107cd:	89 f2                	mov    edx,esi
ffffffff801107cf:	0f 30                	wrmsr  
ffffffff801107d1:	c3                   	ret    
ffffffff801107d2:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff801107dd:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff801107e0 <SyscallHandler>:
ffffffff801107e0:	83 ff 29             	cmp    edi,0x29
ffffffff801107e3:	77 6b                	ja     ffffffff80110850 <SyscallHandler+0x70>
ffffffff801107e5:	41 55                	push   r13
ffffffff801107e7:	89 ff                	mov    edi,edi
ffffffff801107e9:	41 54                	push   r12
ffffffff801107eb:	55                   	push   rbp
ffffffff801107ec:	53                   	push   rbx
ffffffff801107ed:	48 81 ec c8 00 00 00 	sub    rsp,0xc8
ffffffff801107f4:	ff 24 fd 60 58 11 80 	jmp    QWORD PTR [rdi*8-0x7feea7a0]
ffffffff801107fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110800:	48 8b 05 79 58 00 00 	mov    rax,QWORD PTR [rip+0x5879]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110807:	48 8b 50 58          	mov    rdx,QWORD PTR [rax+0x58]
ffffffff8011080b:	48 8b 70 60          	mov    rsi,QWORD PTR [rax+0x60]
ffffffff8011080f:	48 8b 05 8a 58 00 00 	mov    rax,QWORD PTR [rip+0x588a]        # ffffffff801160a0 <running_thread>
ffffffff80110816:	48 8b 78 08          	mov    rdi,QWORD PTR [rax+0x8]
ffffffff8011081a:	e8 81 0c 00 00       	call   ffffffff801114a0 <CreateThread>
ffffffff8011081f:	48 89 c7             	mov    rdi,rax
ffffffff80110822:	48 85 c0             	test   rax,rax
ffffffff80110825:	0f 84 a0 07 00 00    	je     ffffffff80110fcb <SyscallHandler+0x7eb>
ffffffff8011082b:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffffffff8011082e:	48 8b 05 4b 58 00 00 	mov    rax,QWORD PTR [rip+0x584b]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110835:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff80110839:	e8 42 f6 ff ff       	call   ffffffff8010fe80 <ScheduleThread>
ffffffff8011083e:	48 81 c4 c8 00 00 00 	add    rsp,0xc8
ffffffff80110845:	5b                   	pop    rbx
ffffffff80110846:	5d                   	pop    rbp
ffffffff80110847:	41 5c                	pop    r12
ffffffff80110849:	41 5d                	pop    r13
ffffffff8011084b:	c3                   	ret    
ffffffff8011084c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80110850:	c3                   	ret    
ffffffff80110851:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110858:	48 8b 3d 41 58 00 00 	mov    rdi,QWORD PTR [rip+0x5841]        # ffffffff801160a0 <running_thread>
ffffffff8011085f:	e8 9c e5 ff ff       	call   ffffffff8010ee00 <SleepThreadUntilMessage>
ffffffff80110864:	84 c0                	test   al,al
ffffffff80110866:	74 d6                	je     ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110868:	31 c0                	xor    eax,eax
ffffffff8011086a:	e8 61 f5 ff ff       	call   ffffffff8010fdd0 <ScheduleNextThread>
ffffffff8011086f:	31 c0                	xor    eax,eax
ffffffff80110871:	e8 33 c7 ff ff       	call   ffffffff8010cfa9 <JumpIntoThread>
ffffffff80110876:	eb c6                	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110878:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110880:	48 8b 05 f9 57 00 00 	mov    rax,QWORD PTR [rip+0x57f9]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110887:	48 8b 78 60          	mov    rdi,QWORD PTR [rax+0x60]
ffffffff8011088b:	e8 80 f1 ff ff       	call   ffffffff8010fa10 <GetProcessFromPid>
ffffffff80110890:	48 89 c3             	mov    rbx,rax
ffffffff80110893:	48 85 c0             	test   rax,rax
ffffffff80110896:	74 a6                	je     ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110898:	48 8b 05 01 58 00 00 	mov    rax,QWORD PTR [rip+0x5801]        # ffffffff801160a0 <running_thread>
ffffffff8011089f:	48 89 df             	mov    rdi,rbx
ffffffff801108a2:	48 8b 68 08          	mov    rbp,QWORD PTR [rax+0x8]
ffffffff801108a6:	e8 f5 ee ff ff       	call   ffffffff8010f7a0 <DestroyProcess>
ffffffff801108ab:	48 39 dd             	cmp    rbp,rbx
ffffffff801108ae:	75 8e                	jne    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff801108b0:	eb bd                	jmp    ffffffff8011086f <SyscallHandler+0x8f>
ffffffff801108b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff801108b8:	48 8b 05 e1 57 00 00 	mov    rax,QWORD PTR [rip+0x57e1]        # ffffffff801160a0 <running_thread>
ffffffff801108bf:	48 8b 78 08          	mov    rdi,QWORD PTR [rax+0x8]
ffffffff801108c3:	e8 d8 ee ff ff       	call   ffffffff8010f7a0 <DestroyProcess>
ffffffff801108c8:	31 c0                	xor    eax,eax
ffffffff801108ca:	e8 da c6 ff ff       	call   ffffffff8010cfa9 <JumpIntoThread>
ffffffff801108cf:	e9 6a ff ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff801108d4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff801108d8:	48 8b 05 a1 57 00 00 	mov    rax,QWORD PTR [rip+0x57a1]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff801108df:	48 8b 70 60          	mov    rsi,QWORD PTR [rax+0x60]
ffffffff801108e3:	48 8b 05 b6 57 00 00 	mov    rax,QWORD PTR [rip+0x57b6]        # ffffffff801160a0 <running_thread>
ffffffff801108ea:	48 8b 78 08          	mov    rdi,QWORD PTR [rax+0x8]
ffffffff801108ee:	e8 ad 10 00 00       	call   ffffffff801119a0 <GetThreadFromTid>
ffffffff801108f3:	48 39 05 a6 57 00 00 	cmp    QWORD PTR [rip+0x57a6],rax        # ffffffff801160a0 <running_thread>
ffffffff801108fa:	48 89 c7             	mov    rdi,rax
ffffffff801108fd:	0f 84 14 07 00 00    	je     ffffffff80111017 <SyscallHandler+0x837>
ffffffff80110903:	48 85 c0             	test   rax,rax
ffffffff80110906:	0f 84 32 ff ff ff    	je     ffffffff8011083e <SyscallHandler+0x5e>
ffffffff8011090c:	31 f6                	xor    esi,esi
ffffffff8011090e:	e8 bd 0d 00 00       	call   ffffffff801116d0 <DestroyThread>
ffffffff80110913:	e9 26 ff ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110918:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110920:	48 8b 3d 79 57 00 00 	mov    rdi,QWORD PTR [rip+0x5779]        # ffffffff801160a0 <running_thread>
ffffffff80110927:	31 f6                	xor    esi,esi
ffffffff80110929:	e8 a2 0d 00 00       	call   ffffffff801116d0 <DestroyThread>
ffffffff8011092e:	31 c0                	xor    eax,eax
ffffffff80110930:	e8 74 c6 ff ff       	call   ffffffff8010cfa9 <JumpIntoThread>
ffffffff80110935:	e9 04 ff ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff8011093a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80110940:	48 8b 05 39 57 00 00 	mov    rax,QWORD PTR [rip+0x5739]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110947:	4c 8b 60 60          	mov    r12,QWORD PTR [rax+0x60]
ffffffff8011094b:	4c 8b 68 58          	mov    r13,QWORD PTR [rax+0x58]
ffffffff8011094f:	4c 89 e7             	mov    rdi,r12
ffffffff80110952:	e8 b9 f0 ff ff       	call   ffffffff8010fa10 <GetProcessFromPid>
ffffffff80110957:	48 89 c7             	mov    rdi,rax
ffffffff8011095a:	48 8b 05 3f 57 00 00 	mov    rax,QWORD PTR [rip+0x573f]        # ffffffff801160a0 <running_thread>
ffffffff80110961:	48 85 ff             	test   rdi,rdi
ffffffff80110964:	0f 84 75 06 00 00    	je     ffffffff80110fdf <SyscallHandler+0x7ff>
ffffffff8011096a:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
ffffffff8011096e:	4c 89 ea             	mov    rdx,r13
ffffffff80110971:	e8 3a f0 ff ff       	call   ffffffff8010f9b0 <NotifyProcessOnDeath>
ffffffff80110976:	e9 c3 fe ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff8011097b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110980:	48 8b 05 f9 56 00 00 	mov    rax,QWORD PTR [rip+0x56f9]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110987:	48 8b 78 60          	mov    rdi,QWORD PTR [rax+0x60]
ffffffff8011098b:	e8 80 f0 ff ff       	call   ffffffff8010fa10 <GetProcessFromPid>
ffffffff80110990:	48 85 c0             	test   rax,rax
ffffffff80110993:	0f 84 6a 06 00 00    	je     ffffffff80111003 <SyscallHandler+0x823>
ffffffff80110999:	48 8b 15 e0 56 00 00 	mov    rdx,QWORD PTR [rip+0x56e0]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff801109a0:	48 c7 42 68 01 00 00 00 	mov    QWORD PTR [rdx+0x68],0x1
ffffffff801109a8:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
ffffffff801109ac:	48 89 4a 60          	mov    QWORD PTR [rdx+0x60],rcx
ffffffff801109b0:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
ffffffff801109b4:	48 89 4a 58          	mov    QWORD PTR [rdx+0x58],rcx
ffffffff801109b8:	48 8b 48 18          	mov    rcx,QWORD PTR [rax+0x18]
ffffffff801109bc:	48 89 4a 48          	mov    QWORD PTR [rdx+0x48],rcx
ffffffff801109c0:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
ffffffff801109c4:	48 89 4a 40          	mov    QWORD PTR [rdx+0x40],rcx
ffffffff801109c8:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
ffffffff801109cc:	48 89 4a 38          	mov    QWORD PTR [rdx+0x38],rcx
ffffffff801109d0:	48 8b 48 30          	mov    rcx,QWORD PTR [rax+0x30]
ffffffff801109d4:	48 89 4a 30          	mov    QWORD PTR [rdx+0x30],rcx
ffffffff801109d8:	48 8b 48 38          	mov    rcx,QWORD PTR [rax+0x38]
ffffffff801109dc:	48 89 4a 28          	mov    QWORD PTR [rdx+0x28],rcx
ffffffff801109e0:	48 8b 48 40          	mov    rcx,QWORD PTR [rax+0x40]
ffffffff801109e4:	48 89 4a 18          	mov    QWORD PTR [rdx+0x18],rcx
ffffffff801109e8:	48 8b 48 48          	mov    rcx,QWORD PTR [rax+0x48]
ffffffff801109ec:	48 89 4a 10          	mov    QWORD PTR [rdx+0x10],rcx
ffffffff801109f0:	48 8b 48 50          	mov    rcx,QWORD PTR [rax+0x50]
ffffffff801109f4:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffffffff801109f8:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
ffffffff801109fc:	48 89 02             	mov    QWORD PTR [rdx],rax
ffffffff801109ff:	e9 3a fe ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110a04:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80110a08:	48 8b 05 71 56 00 00 	mov    rax,QWORD PTR [rip+0x5671]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110a0f:	48 8b 15 8a 56 00 00 	mov    rdx,QWORD PTR [rip+0x568a]        # ffffffff801160a0 <running_thread>
ffffffff80110a16:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
ffffffff80110a1a:	48 83 e0 f8          	and    rax,0xfffffffffffffff8
ffffffff80110a1e:	48 89 82 78 02 00 00 	mov    QWORD PTR [rdx+0x278],rax
ffffffff80110a25:	e9 14 fe ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110a2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80110a30:	48 8b 05 49 56 00 00 	mov    rax,QWORD PTR [rip+0x5649]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110a37:	48 8b 3d 62 56 00 00 	mov    rdi,QWORD PTR [rip+0x5662]        # ffffffff801160a0 <running_thread>
ffffffff80110a3e:	48 8b 70 60          	mov    rsi,QWORD PTR [rax+0x60]
ffffffff80110a42:	e8 89 0f 00 00       	call   ffffffff801119d0 <SetThreadSegment>
ffffffff80110a47:	e9 f2 fd ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110a4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80110a50:	48 8b 15 29 56 00 00 	mov    rdx,QWORD PTR [rip+0x5629]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110a57:	48 8b 6a 58          	mov    rbp,QWORD PTR [rdx+0x58]
ffffffff80110a5b:	48 8b 02             	mov    rax,QWORD PTR [rdx]
ffffffff80110a5e:	48 8b 4a 08          	mov    rcx,QWORD PTR [rdx+0x8]
ffffffff80110a62:	48 8b 7a 18          	mov    rdi,QWORD PTR [rdx+0x18]
ffffffff80110a66:	48 8b 72 10          	mov    rsi,QWORD PTR [rdx+0x10]
ffffffff80110a6a:	4c 8b 42 28          	mov    r8,QWORD PTR [rdx+0x28]
ffffffff80110a6e:	48 89 6c 24 10       	mov    QWORD PTR [rsp+0x10],rbp
ffffffff80110a73:	48 8d 6c 24 60       	lea    rbp,[rsp+0x60]
ffffffff80110a78:	4c 8b 4a 30          	mov    r9,QWORD PTR [rdx+0x30]
ffffffff80110a7c:	4c 8b 52 38          	mov    r10,QWORD PTR [rdx+0x38]
ffffffff80110a80:	48 89 7c 24 40       	mov    QWORD PTR [rsp+0x40],rdi
ffffffff80110a85:	48 89 ef             	mov    rdi,rbp
ffffffff80110a88:	4c 8b 5a 40          	mov    r11,QWORD PTR [rdx+0x40]
ffffffff80110a8c:	48 8b 5a 48          	mov    rbx,QWORD PTR [rdx+0x48]
ffffffff80110a90:	48 89 4c 24 50       	mov    QWORD PTR [rsp+0x50],rcx
ffffffff80110a95:	b9 0c 00 00 00       	mov    ecx,0xc
ffffffff80110a9a:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
ffffffff80110a9f:	31 c0                	xor    eax,eax
ffffffff80110aa1:	4c 8b 62 60          	mov    r12,QWORD PTR [rdx+0x60]
ffffffff80110aa5:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
ffffffff80110aa8:	48 89 5c 24 18       	mov    QWORD PTR [rsp+0x18],rbx
ffffffff80110aad:	31 db                	xor    ebx,ebx
ffffffff80110aaf:	48 89 74 24 48       	mov    QWORD PTR [rsp+0x48],rsi
ffffffff80110ab4:	48 8b 7a 70          	mov    rdi,QWORD PTR [rdx+0x70]
ffffffff80110ab8:	4c 89 64 24 08       	mov    QWORD PTR [rsp+0x8],r12
ffffffff80110abd:	4c 89 5c 24 20       	mov    QWORD PTR [rsp+0x20],r11
ffffffff80110ac2:	4c 89 54 24 28       	mov    QWORD PTR [rsp+0x28],r10
ffffffff80110ac7:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
ffffffff80110acc:	4c 89 44 24 38       	mov    QWORD PTR [rsp+0x38],r8
ffffffff80110ad1:	e8 6a ef ff ff       	call   ffffffff8010fa40 <GetProcessOrNextFromPid>
ffffffff80110ad6:	48 89 c6             	mov    rsi,rax
ffffffff80110ad9:	48 85 c0             	test   rax,rax
ffffffff80110adc:	74 3a                	je     ffffffff80110b18 <SyscallHandler+0x338>
ffffffff80110ade:	66 90                	xchg   ax,ax
ffffffff80110ae0:	48 8d 7c 24 08       	lea    rdi,[rsp+0x8]
ffffffff80110ae5:	e8 06 f0 ff ff       	call   ffffffff8010faf0 <FindNextProcessWithName>
ffffffff80110aea:	48 85 c0             	test   rax,rax
ffffffff80110aed:	74 29                	je     ffffffff80110b18 <SyscallHandler+0x338>
ffffffff80110aef:	48 83 fb 0b          	cmp    rbx,0xb
ffffffff80110af3:	0f 87 9f 04 00 00    	ja     ffffffff80110f98 <SyscallHandler+0x7b8>
ffffffff80110af9:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffffffff80110afc:	48 8b b0 b0 00 00 00 	mov    rsi,QWORD PTR [rax+0xb0]
ffffffff80110b03:	48 89 54 dd 00       	mov    QWORD PTR [rbp+rbx*8+0x0],rdx
ffffffff80110b08:	48 83 c3 01          	add    rbx,0x1
ffffffff80110b0c:	48 85 f6             	test   rsi,rsi
ffffffff80110b0f:	75 cf                	jne    ffffffff80110ae0 <SyscallHandler+0x300>
ffffffff80110b11:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110b18:	48 8b 05 61 55 00 00 	mov    rax,QWORD PTR [rip+0x5561]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110b1f:	48 89 58 68          	mov    QWORD PTR [rax+0x68],rbx
ffffffff80110b23:	48 8b 54 24 60       	mov    rdx,QWORD PTR [rsp+0x60]
ffffffff80110b28:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
ffffffff80110b2c:	48 8b 54 24 68       	mov    rdx,QWORD PTR [rsp+0x68]
ffffffff80110b31:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff80110b35:	48 8b 54 24 70       	mov    rdx,QWORD PTR [rsp+0x70]
ffffffff80110b3a:	48 89 50 58          	mov    QWORD PTR [rax+0x58],rdx
ffffffff80110b3e:	48 8b 54 24 78       	mov    rdx,QWORD PTR [rsp+0x78]
ffffffff80110b43:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
ffffffff80110b47:	48 8b 94 24 80 00 00 00 	mov    rdx,QWORD PTR [rsp+0x80]
ffffffff80110b4f:	48 89 50 40          	mov    QWORD PTR [rax+0x40],rdx
ffffffff80110b53:	48 8b 94 24 88 00 00 00 	mov    rdx,QWORD PTR [rsp+0x88]
ffffffff80110b5b:	48 89 50 38          	mov    QWORD PTR [rax+0x38],rdx
ffffffff80110b5f:	48 8b 94 24 90 00 00 00 	mov    rdx,QWORD PTR [rsp+0x90]
ffffffff80110b67:	48 89 50 30          	mov    QWORD PTR [rax+0x30],rdx
ffffffff80110b6b:	48 8b 94 24 98 00 00 00 	mov    rdx,QWORD PTR [rsp+0x98]
ffffffff80110b73:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
ffffffff80110b77:	48 8b 94 24 a0 00 00 00 	mov    rdx,QWORD PTR [rsp+0xa0]
ffffffff80110b7f:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
ffffffff80110b83:	48 8b 94 24 a8 00 00 00 	mov    rdx,QWORD PTR [rsp+0xa8]
ffffffff80110b8b:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
ffffffff80110b8f:	48 8b 94 24 b0 00 00 00 	mov    rdx,QWORD PTR [rsp+0xb0]
ffffffff80110b97:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffffffff80110b9b:	48 8b 94 24 b8 00 00 00 	mov    rdx,QWORD PTR [rsp+0xb8]
ffffffff80110ba3:	48 89 10             	mov    QWORD PTR [rax],rdx
ffffffff80110ba6:	e9 93 fc ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110bab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110bb0:	48 8b 05 c9 54 00 00 	mov    rax,QWORD PTR [rip+0x54c9]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110bb7:	48 8b 0d e2 54 00 00 	mov    rcx,QWORD PTR [rip+0x54e2]        # ffffffff801160a0 <running_thread>
ffffffff80110bbe:	48 8b 50 58          	mov    rdx,QWORD PTR [rax+0x58]
ffffffff80110bc2:	48 8b 71 08          	mov    rsi,QWORD PTR [rcx+0x8]
ffffffff80110bc6:	48 63 78 60          	movsxd rdi,DWORD PTR [rax+0x60]
ffffffff80110bca:	e8 71 c8 ff ff       	call   ffffffff8010d440 <UnregisterMessageToSendOnInterrupt>
ffffffff80110bcf:	e9 6a fc ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110bd4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80110bd8:	48 8b 05 a1 54 00 00 	mov    rax,QWORD PTR [rip+0x54a1]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110bdf:	48 8b 0d ba 54 00 00 	mov    rcx,QWORD PTR [rip+0x54ba]        # ffffffff801160a0 <running_thread>
ffffffff80110be6:	48 8b 50 58          	mov    rdx,QWORD PTR [rax+0x58]
ffffffff80110bea:	48 8b 71 08          	mov    rsi,QWORD PTR [rcx+0x8]
ffffffff80110bee:	48 63 78 60          	movsxd rdi,DWORD PTR [rax+0x60]
ffffffff80110bf2:	e8 e9 c7 ff ff       	call   ffffffff8010d3e0 <RegisterMessageToSendOnInterrupt>
ffffffff80110bf7:	e9 42 fc ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110bfc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80110c00:	48 8b 3d 99 54 00 00 	mov    rdi,QWORD PTR [rip+0x5499]        # ffffffff801160a0 <running_thread>
ffffffff80110c07:	e8 64 e1 ff ff       	call   ffffffff8010ed70 <LoadNextMessageIntoThread>
ffffffff80110c0c:	e9 2d fc ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110c11:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110c18:	48 8b 3d 81 54 00 00 	mov    rdi,QWORD PTR [rip+0x5481]        # ffffffff801160a0 <running_thread>
ffffffff80110c1f:	e8 ec df ff ff       	call   ffffffff8010ec10 <SendMessageFromThreadSyscall>
ffffffff80110c24:	e9 15 fc ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110c29:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110c30:	48 8b 05 49 54 00 00 	mov    rax,QWORD PTR [rip+0x5449]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110c37:	48 8b 15 12 54 00 00 	mov    rdx,QWORD PTR [rip+0x5412]        # ffffffff80116050 <total_system_memory>
ffffffff80110c3e:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff80110c42:	e9 f7 fb ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110c47:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80110c50:	48 8b 05 49 54 00 00 	mov    rax,QWORD PTR [rip+0x5449]        # ffffffff801160a0 <running_thread>
ffffffff80110c57:	48 8b 15 22 54 00 00 	mov    rdx,QWORD PTR [rip+0x5422]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110c5e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffffffff80110c62:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
ffffffff80110c66:	48 c1 e0 0c          	shl    rax,0xc
ffffffff80110c6a:	48 89 42 60          	mov    QWORD PTR [rdx+0x60],rax
ffffffff80110c6e:	e9 cb fb ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110c73:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110c78:	48 8b 05 d9 53 00 00 	mov    rax,QWORD PTR [rip+0x53d9]        # ffffffff80116058 <free_pages>
ffffffff80110c7f:	48 8b 15 fa 53 00 00 	mov    rdx,QWORD PTR [rip+0x53fa]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110c86:	48 c1 e0 0c          	shl    rax,0xc
ffffffff80110c8a:	48 89 42 60          	mov    QWORD PTR [rdx+0x60],rax
ffffffff80110c8e:	e9 ab fb ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110c93:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110c98:	48 8b 05 e1 53 00 00 	mov    rax,QWORD PTR [rip+0x53e1]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110c9f:	48 8b 50 58          	mov    rdx,QWORD PTR [rax+0x58]
ffffffff80110ca3:	48 8b 70 60          	mov    rsi,QWORD PTR [rax+0x60]
ffffffff80110ca7:	48 8b 05 f2 53 00 00 	mov    rax,QWORD PTR [rip+0x53f2]        # ffffffff801160a0 <running_thread>
ffffffff80110cae:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffffffff80110cb2:	48 8b 78 68          	mov    rdi,QWORD PTR [rax+0x68]
ffffffff80110cb6:	e8 75 1e 00 00       	call   ffffffff80112b30 <ReleaseVirtualMemoryInAddressSpace>
ffffffff80110cbb:	e9 7e fb ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110cc0:	48 8b 05 d9 53 00 00 	mov    rax,QWORD PTR [rip+0x53d9]        # ffffffff801160a0 <running_thread>
ffffffff80110cc7:	48 8b 1d b2 53 00 00 	mov    rbx,QWORD PTR [rip+0x53b2]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110cce:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffffffff80110cd2:	48 8b 73 60          	mov    rsi,QWORD PTR [rbx+0x60]
ffffffff80110cd6:	48 8b 78 68          	mov    rdi,QWORD PTR [rax+0x68]
ffffffff80110cda:	e8 f1 27 00 00       	call   ffffffff801134d0 <AllocateVirtualMemoryInAddressSpace>
ffffffff80110cdf:	48 89 43 60          	mov    QWORD PTR [rbx+0x60],rax
ffffffff80110ce3:	e9 56 fb ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110ce8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110cf0:	48 c7 c7 8b 57 11 80 	mov    rdi,0xffffffff8011578b
ffffffff80110cf7:	e8 54 04 00 00       	call   ffffffff80111150 <PrintString>
ffffffff80110cfc:	e9 3d fb ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110d01:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110d08:	48 c7 c7 28 58 11 80 	mov    rdi,0xffffffff80115828
ffffffff80110d0f:	e8 3c 04 00 00       	call   ffffffff80111150 <PrintString>
ffffffff80110d14:	e9 25 fb ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110d19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110d20:	48 c7 c7 f8 57 11 80 	mov    rdi,0xffffffff801157f8
ffffffff80110d27:	e8 24 04 00 00       	call   ffffffff80111150 <PrintString>
ffffffff80110d2c:	e9 0d fb ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110d31:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110d38:	48 8b 05 41 53 00 00 	mov    rax,QWORD PTR [rip+0x5341]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110d3f:	48 8b 70 70          	mov    rsi,QWORD PTR [rax+0x70]
ffffffff80110d43:	48 8b 05 56 53 00 00 	mov    rax,QWORD PTR [rip+0x5356]        # ffffffff801160a0 <running_thread>
ffffffff80110d4a:	48 8b 78 08          	mov    rdi,QWORD PTR [rax+0x8]
ffffffff80110d4e:	e8 9d f8 ff ff       	call   ffffffff801105f0 <StopNotifyingProcessWhenServiceAppearsByMessageId>
ffffffff80110d53:	e9 e6 fa ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110d58:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80110d60:	48 8b 05 19 53 00 00 	mov    rax,QWORD PTR [rip+0x5319]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110d67:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
ffffffff80110d6b:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
ffffffff80110d6f:	48 8b 70 18          	mov    rsi,QWORD PTR [rax+0x18]
ffffffff80110d73:	48 8b 78 28          	mov    rdi,QWORD PTR [rax+0x28]
ffffffff80110d77:	4c 8b 40 30          	mov    r8,QWORD PTR [rax+0x30]
ffffffff80110d7b:	4c 8b 48 38          	mov    r9,QWORD PTR [rax+0x38]
ffffffff80110d7f:	4c 8b 50 40          	mov    r10,QWORD PTR [rax+0x40]
ffffffff80110d83:	4c 8b 58 48          	mov    r11,QWORD PTR [rax+0x48]
ffffffff80110d87:	48 8b 58 58          	mov    rbx,QWORD PTR [rax+0x58]
ffffffff80110d8b:	48 8b 68 60          	mov    rbp,QWORD PTR [rax+0x60]
ffffffff80110d8f:	48 89 bc 24 90 00 00 00 	mov    QWORD PTR [rsp+0x90],rdi
ffffffff80110d97:	48 8d 7c 24 60       	lea    rdi,[rsp+0x60]
ffffffff80110d9c:	48 89 b4 24 98 00 00 00 	mov    QWORD PTR [rsp+0x98],rsi
ffffffff80110da4:	48 89 6c 24 60       	mov    QWORD PTR [rsp+0x60],rbp
ffffffff80110da9:	48 89 5c 24 68       	mov    QWORD PTR [rsp+0x68],rbx
ffffffff80110dae:	4c 89 5c 24 70       	mov    QWORD PTR [rsp+0x70],r11
ffffffff80110db3:	4c 89 54 24 78       	mov    QWORD PTR [rsp+0x78],r10
ffffffff80110db8:	4c 89 8c 24 80 00 00 00 	mov    QWORD PTR [rsp+0x80],r9
ffffffff80110dc0:	4c 89 84 24 88 00 00 00 	mov    QWORD PTR [rsp+0x88],r8
ffffffff80110dc8:	48 89 8c 24 a0 00 00 00 	mov    QWORD PTR [rsp+0xa0],rcx
ffffffff80110dd0:	48 89 94 24 a8 00 00 00 	mov    QWORD PTR [rsp+0xa8],rdx
ffffffff80110dd8:	48 8b 50 70          	mov    rdx,QWORD PTR [rax+0x70]
ffffffff80110ddc:	48 8b 05 bd 52 00 00 	mov    rax,QWORD PTR [rip+0x52bd]        # ffffffff801160a0 <running_thread>
ffffffff80110de3:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
ffffffff80110de7:	e8 44 f6 ff ff       	call   ffffffff80110430 <NotifyProcessWhenServiceAppears>
ffffffff80110dec:	e9 4d fa ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110df1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110df8:	48 c7 c7 d8 57 11 80 	mov    rdi,0xffffffff801157d8
ffffffff80110dff:	e8 4c 03 00 00       	call   ffffffff80111150 <PrintString>
ffffffff80110e04:	e9 35 fa ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110e09:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110e10:	48 8b 05 69 52 00 00 	mov    rax,QWORD PTR [rip+0x5269]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110e17:	48 8b 70 60          	mov    rsi,QWORD PTR [rax+0x60]
ffffffff80110e1b:	48 8b 05 7e 52 00 00 	mov    rax,QWORD PTR [rip+0x527e]        # ffffffff801160a0 <running_thread>
ffffffff80110e22:	48 8b 78 08          	mov    rdi,QWORD PTR [rax+0x8]
ffffffff80110e26:	e8 c5 f3 ff ff       	call   ffffffff801101f0 <UnregisterServiceByMessageId>
ffffffff80110e2b:	e9 0e fa ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110e30:	48 8b 05 49 52 00 00 	mov    rax,QWORD PTR [rip+0x5249]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110e37:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
ffffffff80110e3b:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
ffffffff80110e3f:	48 8b 70 18          	mov    rsi,QWORD PTR [rax+0x18]
ffffffff80110e43:	48 8b 78 28          	mov    rdi,QWORD PTR [rax+0x28]
ffffffff80110e47:	4c 8b 40 30          	mov    r8,QWORD PTR [rax+0x30]
ffffffff80110e4b:	4c 8b 48 38          	mov    r9,QWORD PTR [rax+0x38]
ffffffff80110e4f:	4c 8b 50 40          	mov    r10,QWORD PTR [rax+0x40]
ffffffff80110e53:	4c 8b 58 48          	mov    r11,QWORD PTR [rax+0x48]
ffffffff80110e57:	48 8b 58 58          	mov    rbx,QWORD PTR [rax+0x58]
ffffffff80110e5b:	48 8b 68 60          	mov    rbp,QWORD PTR [rax+0x60]
ffffffff80110e5f:	48 89 bc 24 90 00 00 00 	mov    QWORD PTR [rsp+0x90],rdi
ffffffff80110e67:	48 8d 7c 24 60       	lea    rdi,[rsp+0x60]
ffffffff80110e6c:	48 89 b4 24 98 00 00 00 	mov    QWORD PTR [rsp+0x98],rsi
ffffffff80110e74:	48 89 6c 24 60       	mov    QWORD PTR [rsp+0x60],rbp
ffffffff80110e79:	48 89 5c 24 68       	mov    QWORD PTR [rsp+0x68],rbx
ffffffff80110e7e:	4c 89 5c 24 70       	mov    QWORD PTR [rsp+0x70],r11
ffffffff80110e83:	4c 89 54 24 78       	mov    QWORD PTR [rsp+0x78],r10
ffffffff80110e88:	4c 89 8c 24 80 00 00 00 	mov    QWORD PTR [rsp+0x80],r9
ffffffff80110e90:	4c 89 84 24 88 00 00 00 	mov    QWORD PTR [rsp+0x88],r8
ffffffff80110e98:	48 89 8c 24 a0 00 00 00 	mov    QWORD PTR [rsp+0xa0],rcx
ffffffff80110ea0:	48 89 94 24 a8 00 00 00 	mov    QWORD PTR [rsp+0xa8],rdx
ffffffff80110ea8:	48 8b 50 70          	mov    rdx,QWORD PTR [rax+0x70]
ffffffff80110eac:	48 8b 05 ed 51 00 00 	mov    rax,QWORD PTR [rip+0x51ed]        # ffffffff801160a0 <running_thread>
ffffffff80110eb3:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
ffffffff80110eb7:	e8 54 f1 ff ff       	call   ffffffff80110010 <RegisterService>
ffffffff80110ebc:	e9 7d f9 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110ec1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110ec8:	48 c7 c7 a0 57 11 80 	mov    rdi,0xffffffff801157a0
ffffffff80110ecf:	e8 7c 02 00 00       	call   ffffffff80111150 <PrintString>
ffffffff80110ed4:	e9 65 f9 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110ed9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110ee0:	48 8b 05 99 51 00 00 	mov    rax,QWORD PTR [rip+0x5199]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110ee7:	0f be 78 60          	movsx  edi,BYTE PTR [rax+0x60]
ffffffff80110eeb:	e8 c0 01 00 00       	call   ffffffff801110b0 <PrintChar>
ffffffff80110ef0:	e9 49 f9 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110ef5:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80110ef8:	48 8b 05 a1 51 00 00 	mov    rax,QWORD PTR [rip+0x51a1]        # ffffffff801160a0 <running_thread>
ffffffff80110eff:	48 8b 1d 7a 51 00 00 	mov    rbx,QWORD PTR [rip+0x517a]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110f06:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffffffff80110f0a:	80 78 60 00          	cmp    BYTE PTR [rax+0x60],0x0
ffffffff80110f0e:	0f 85 9d 00 00 00    	jne    ffffffff80110fb1 <SyscallHandler+0x7d1>
ffffffff80110f14:	48 c7 43 60 01 00 00 00 	mov    QWORD PTR [rbx+0x60],0x1
ffffffff80110f1c:	e9 1d f9 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110f21:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110f28:	48 8b 3d 51 51 00 00 	mov    rdi,QWORD PTR [rip+0x5151]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110f2f:	e8 9c be ff ff       	call   ffffffff8010cdd0 <PopulateRegistersWithFramebufferDetails>
ffffffff80110f34:	e9 05 f9 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110f39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110f40:	48 8b 05 59 51 00 00 	mov    rax,QWORD PTR [rip+0x5159]        # ffffffff801160a0 <running_thread>
ffffffff80110f47:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffffffff80110f4b:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffffffff80110f4e:	48 8b 05 2b 51 00 00 	mov    rax,QWORD PTR [rip+0x512b]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110f55:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff80110f59:	e9 e0 f8 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110f5e:	66 90                	xchg   ax,ax
ffffffff80110f60:	48 8b 05 39 51 00 00 	mov    rax,QWORD PTR [rip+0x5139]        # ffffffff801160a0 <running_thread>
ffffffff80110f67:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffffffff80110f6a:	48 8b 05 0f 51 00 00 	mov    rax,QWORD PTR [rip+0x510f]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110f71:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
ffffffff80110f75:	e9 c4 f8 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110f7a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80110f80:	48 c7 c7 73 57 11 80 	mov    rdi,0xffffffff80115773
ffffffff80110f87:	e8 c4 01 00 00       	call   ffffffff80111150 <PrintString>
ffffffff80110f8c:	e9 ad f8 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110f91:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80110f98:	48 8b b0 b0 00 00 00 	mov    rsi,QWORD PTR [rax+0xb0]
ffffffff80110f9f:	48 83 c3 01          	add    rbx,0x1
ffffffff80110fa3:	48 85 f6             	test   rsi,rsi
ffffffff80110fa6:	0f 85 34 fb ff ff    	jne    ffffffff80110ae0 <SyscallHandler+0x300>
ffffffff80110fac:	e9 67 fb ff ff       	jmp    ffffffff80110b18 <SyscallHandler+0x338>
ffffffff80110fb1:	48 8b 53 58          	mov    rdx,QWORD PTR [rbx+0x58]
ffffffff80110fb5:	48 8b 73 60          	mov    rsi,QWORD PTR [rbx+0x60]
ffffffff80110fb9:	48 8b 78 68          	mov    rdi,QWORD PTR [rax+0x68]
ffffffff80110fbd:	e8 6e 1f 00 00       	call   ffffffff80112f30 <MapPhysicalMemoryInAddressSpace>
ffffffff80110fc2:	48 89 43 60          	mov    QWORD PTR [rbx+0x60],rax
ffffffff80110fc6:	e9 73 f8 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80110fcb:	48 8b 05 ae 50 00 00 	mov    rax,QWORD PTR [rip+0x50ae]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff80110fd2:	48 c7 40 60 00 00 00 00 	mov    QWORD PTR [rax+0x60],0x0
ffffffff80110fda:	e9 5a f8 ff ff       	jmp    ffffffff80110839 <SyscallHandler+0x59>
ffffffff80110fdf:	48 83 ec 08          	sub    rsp,0x8
ffffffff80110fe3:	48 8b 78 08          	mov    rdi,QWORD PTR [rax+0x8]
ffffffff80110fe7:	4c 89 e2             	mov    rdx,r12
ffffffff80110fea:	45 31 c9             	xor    r9d,r9d
ffffffff80110fed:	6a 00                	push   0x0
ffffffff80110fef:	45 31 c0             	xor    r8d,r8d
ffffffff80110ff2:	31 c9                	xor    ecx,ecx
ffffffff80110ff4:	4c 89 ee             	mov    rsi,r13
ffffffff80110ff7:	e8 24 da ff ff       	call   ffffffff8010ea20 <SendKernelMessageToProcess>
ffffffff80110ffc:	58                   	pop    rax
ffffffff80110ffd:	5a                   	pop    rdx
ffffffff80110ffe:	e9 3b f8 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80111003:	48 8b 05 76 50 00 00 	mov    rax,QWORD PTR [rip+0x5076]        # ffffffff80116080 <currently_executing_thread_regs>
ffffffff8011100a:	48 c7 40 68 00 00 00 00 	mov    QWORD PTR [rax+0x68],0x0
ffffffff80111012:	e9 27 f8 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff80111017:	31 f6                	xor    esi,esi
ffffffff80111019:	e8 b2 06 00 00       	call   ffffffff801116d0 <DestroyThread>
ffffffff8011101e:	31 c0                	xor    eax,eax
ffffffff80111020:	e8 84 bf ff ff       	call   ffffffff8010cfa9 <JumpIntoThread>
ffffffff80111025:	e9 14 f8 ff ff       	jmp    ffffffff8011083e <SyscallHandler+0x5e>
ffffffff8011102a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff80111030 <InitializeSerialOutput>:
ffffffff80111030:	48 83 ec 08          	sub    rsp,0x8
ffffffff80111034:	31 f6                	xor    esi,esi
ffffffff80111036:	bf f9 03 00 00       	mov    edi,0x3f9
ffffffff8011103b:	e8 a0 cc ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111040:	be 80 00 00 00       	mov    esi,0x80
ffffffff80111045:	bf fb 03 00 00       	mov    edi,0x3fb
ffffffff8011104a:	e8 91 cc ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff8011104f:	be 03 00 00 00       	mov    esi,0x3
ffffffff80111054:	bf f8 03 00 00       	mov    edi,0x3f8
ffffffff80111059:	e8 82 cc ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff8011105e:	31 f6                	xor    esi,esi
ffffffff80111060:	bf f9 03 00 00       	mov    edi,0x3f9
ffffffff80111065:	e8 76 cc ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff8011106a:	be 03 00 00 00       	mov    esi,0x3
ffffffff8011106f:	bf fb 03 00 00       	mov    edi,0x3fb
ffffffff80111074:	e8 67 cc ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111079:	be c7 00 00 00       	mov    esi,0xc7
ffffffff8011107e:	bf fa 03 00 00       	mov    edi,0x3fa
ffffffff80111083:	e8 58 cc ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111088:	be 0b 00 00 00       	mov    esi,0xb
ffffffff8011108d:	bf fc 03 00 00       	mov    edi,0x3fc
ffffffff80111092:	e8 49 cc ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111097:	c6 05 22 51 00 00 01 	mov    BYTE PTR [rip+0x5122],0x1        # ffffffff801161c0 <serial_output_initialized>
ffffffff8011109e:	48 83 c4 08          	add    rsp,0x8
ffffffff801110a2:	c3                   	ret    
ffffffff801110a3:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff801110ae:	66 90                	xchg   ax,ax

ffffffff801110b0 <PrintChar>:
ffffffff801110b0:	80 3d 09 51 00 00 00 	cmp    BYTE PTR [rip+0x5109],0x0        # ffffffff801161c0 <serial_output_initialized>
ffffffff801110b7:	53                   	push   rbx
ffffffff801110b8:	89 fb                	mov    ebx,edi
ffffffff801110ba:	74 24                	je     ffffffff801110e0 <PrintChar+0x30>
ffffffff801110bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff801110c0:	bf fd 03 00 00       	mov    edi,0x3fd
ffffffff801110c5:	e8 06 cc ff ff       	call   ffffffff8010dcd0 <inportb>
ffffffff801110ca:	a8 20                	test   al,0x20
ffffffff801110cc:	74 f2                	je     ffffffff801110c0 <PrintChar+0x10>
ffffffff801110ce:	0f b6 f3             	movzx  esi,bl
ffffffff801110d1:	bf f8 03 00 00       	mov    edi,0x3f8
ffffffff801110d6:	5b                   	pop    rbx
ffffffff801110d7:	e9 04 cc ff ff       	jmp    ffffffff8010dce0 <outportb>
ffffffff801110dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff801110e0:	31 f6                	xor    esi,esi
ffffffff801110e2:	bf f9 03 00 00       	mov    edi,0x3f9
ffffffff801110e7:	e8 f4 cb ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff801110ec:	be 80 00 00 00       	mov    esi,0x80
ffffffff801110f1:	bf fb 03 00 00       	mov    edi,0x3fb
ffffffff801110f6:	e8 e5 cb ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff801110fb:	be 03 00 00 00       	mov    esi,0x3
ffffffff80111100:	bf f8 03 00 00       	mov    edi,0x3f8
ffffffff80111105:	e8 d6 cb ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff8011110a:	31 f6                	xor    esi,esi
ffffffff8011110c:	bf f9 03 00 00       	mov    edi,0x3f9
ffffffff80111111:	e8 ca cb ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111116:	be 03 00 00 00       	mov    esi,0x3
ffffffff8011111b:	bf fb 03 00 00       	mov    edi,0x3fb
ffffffff80111120:	e8 bb cb ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111125:	be c7 00 00 00       	mov    esi,0xc7
ffffffff8011112a:	bf fa 03 00 00       	mov    edi,0x3fa
ffffffff8011112f:	e8 ac cb ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111134:	be 0b 00 00 00       	mov    esi,0xb
ffffffff80111139:	bf fc 03 00 00       	mov    edi,0x3fc
ffffffff8011113e:	e8 9d cb ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111143:	c6 05 76 50 00 00 01 	mov    BYTE PTR [rip+0x5076],0x1        # ffffffff801161c0 <serial_output_initialized>
ffffffff8011114a:	e9 71 ff ff ff       	jmp    ffffffff801110c0 <PrintChar+0x10>
ffffffff8011114f:	90                   	nop

ffffffff80111150 <PrintString>:
ffffffff80111150:	53                   	push   rbx
ffffffff80111151:	48 89 fb             	mov    rbx,rdi
ffffffff80111154:	0f be 3f             	movsx  edi,BYTE PTR [rdi]
ffffffff80111157:	40 84 ff             	test   dil,dil
ffffffff8011115a:	74 16                	je     ffffffff80111172 <PrintString+0x22>
ffffffff8011115c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80111160:	e8 4b ff ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff80111165:	0f be 7b 01          	movsx  edi,BYTE PTR [rbx+0x1]
ffffffff80111169:	48 83 c3 01          	add    rbx,0x1
ffffffff8011116d:	40 84 ff             	test   dil,dil
ffffffff80111170:	75 ee                	jne    ffffffff80111160 <PrintString+0x10>
ffffffff80111172:	5b                   	pop    rbx
ffffffff80111173:	c3                   	ret    
ffffffff80111174:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8011117f:	90                   	nop

ffffffff80111180 <PrintFixedString>:
ffffffff80111180:	48 85 f6             	test   rsi,rsi
ffffffff80111183:	74 2b                	je     ffffffff801111b0 <PrintFixedString+0x30>
ffffffff80111185:	55                   	push   rbp
ffffffff80111186:	48 8d 2c 37          	lea    rbp,[rdi+rsi*1]
ffffffff8011118a:	53                   	push   rbx
ffffffff8011118b:	48 89 fb             	mov    rbx,rdi
ffffffff8011118e:	48 83 ec 08          	sub    rsp,0x8
ffffffff80111192:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80111198:	0f be 3b             	movsx  edi,BYTE PTR [rbx]
ffffffff8011119b:	48 83 c3 01          	add    rbx,0x1
ffffffff8011119f:	e8 0c ff ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff801111a4:	48 39 dd             	cmp    rbp,rbx
ffffffff801111a7:	75 ef                	jne    ffffffff80111198 <PrintFixedString+0x18>
ffffffff801111a9:	48 83 c4 08          	add    rsp,0x8
ffffffff801111ad:	5b                   	pop    rbx
ffffffff801111ae:	5d                   	pop    rbp
ffffffff801111af:	c3                   	ret    
ffffffff801111b0:	c3                   	ret    
ffffffff801111b1:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff801111bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff801111c0 <PrintHex>:
ffffffff801111c0:	41 57                	push   r15
ffffffff801111c2:	41 56                	push   r14
ffffffff801111c4:	41 55                	push   r13
ffffffff801111c6:	41 54                	push   r12
ffffffff801111c8:	55                   	push   rbp
ffffffff801111c9:	53                   	push   rbx
ffffffff801111ca:	48 83 ec 18          	sub    rsp,0x18
ffffffff801111ce:	48 89 3c 24          	mov    QWORD PTR [rsp],rdi
ffffffff801111d2:	bf 30 00 00 00       	mov    edi,0x30
ffffffff801111d7:	e8 d4 fe ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff801111dc:	bf 78 00 00 00       	mov    edi,0x78
ffffffff801111e1:	e8 ca fe ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff801111e6:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
ffffffff801111ea:	48 89 c2             	mov    rdx,rax
ffffffff801111ed:	83 e2 0f             	and    edx,0xf
ffffffff801111f0:	0f b6 8a b0 59 11 80 	movzx  ecx,BYTE PTR [rdx-0x7feea650]
ffffffff801111f7:	48 89 c2             	mov    rdx,rax
ffffffff801111fa:	48 c1 ea 04          	shr    rdx,0x4
ffffffff801111fe:	83 e2 0f             	and    edx,0xf
ffffffff80111201:	88 0c 24             	mov    BYTE PTR [rsp],cl
ffffffff80111204:	0f b6 b2 b0 59 11 80 	movzx  esi,BYTE PTR [rdx-0x7feea650]
ffffffff8011120b:	48 89 c2             	mov    rdx,rax
ffffffff8011120e:	48 c1 ea 08          	shr    rdx,0x8
ffffffff80111212:	83 e2 0f             	and    edx,0xf
ffffffff80111215:	40 88 74 24 08       	mov    BYTE PTR [rsp+0x8],sil
ffffffff8011121a:	0f b6 9a b0 59 11 80 	movzx  ebx,BYTE PTR [rdx-0x7feea650]
ffffffff80111221:	48 89 c2             	mov    rdx,rax
ffffffff80111224:	48 c1 ea 0c          	shr    rdx,0xc
ffffffff80111228:	83 e2 0f             	and    edx,0xf
ffffffff8011122b:	88 5c 24 09          	mov    BYTE PTR [rsp+0x9],bl
ffffffff8011122f:	0f b6 ba b0 59 11 80 	movzx  edi,BYTE PTR [rdx-0x7feea650]
ffffffff80111236:	48 89 c2             	mov    rdx,rax
ffffffff80111239:	48 c1 ea 10          	shr    rdx,0x10
ffffffff8011123d:	83 e2 0f             	and    edx,0xf
ffffffff80111240:	40 88 7c 24 0a       	mov    BYTE PTR [rsp+0xa],dil
ffffffff80111245:	0f b6 92 b0 59 11 80 	movzx  edx,BYTE PTR [rdx-0x7feea650]
ffffffff8011124c:	88 54 24 0b          	mov    BYTE PTR [rsp+0xb],dl
ffffffff80111250:	48 89 c2             	mov    rdx,rax
ffffffff80111253:	48 c1 ea 14          	shr    rdx,0x14
ffffffff80111257:	83 e2 0f             	and    edx,0xf
ffffffff8011125a:	44 0f b6 82 b0 59 11 80 	movzx  r8d,BYTE PTR [rdx-0x7feea650]
ffffffff80111262:	48 89 c2             	mov    rdx,rax
ffffffff80111265:	48 c1 ea 18          	shr    rdx,0x18
ffffffff80111269:	83 e2 0f             	and    edx,0xf
ffffffff8011126c:	44 88 44 24 0c       	mov    BYTE PTR [rsp+0xc],r8b
ffffffff80111271:	44 0f b6 8a b0 59 11 80 	movzx  r9d,BYTE PTR [rdx-0x7feea650]
ffffffff80111279:	48 89 c2             	mov    rdx,rax
ffffffff8011127c:	48 c1 ea 1c          	shr    rdx,0x1c
ffffffff80111280:	83 e2 0f             	and    edx,0xf
ffffffff80111283:	44 88 4c 24 0d       	mov    BYTE PTR [rsp+0xd],r9b
ffffffff80111288:	44 0f b6 92 b0 59 11 80 	movzx  r10d,BYTE PTR [rdx-0x7feea650]
ffffffff80111290:	48 89 c2             	mov    rdx,rax
ffffffff80111293:	48 c1 ea 20          	shr    rdx,0x20
ffffffff80111297:	83 e2 0f             	and    edx,0xf
ffffffff8011129a:	44 88 54 24 0e       	mov    BYTE PTR [rsp+0xe],r10b
ffffffff8011129f:	44 0f b6 9a b0 59 11 80 	movzx  r11d,BYTE PTR [rdx-0x7feea650]
ffffffff801112a7:	48 89 c2             	mov    rdx,rax
ffffffff801112aa:	48 c1 ea 24          	shr    rdx,0x24
ffffffff801112ae:	83 e2 0f             	and    edx,0xf
ffffffff801112b1:	44 88 5c 24 0f       	mov    BYTE PTR [rsp+0xf],r11b
ffffffff801112b6:	0f b6 9a b0 59 11 80 	movzx  ebx,BYTE PTR [rdx-0x7feea650]
ffffffff801112bd:	48 89 c2             	mov    rdx,rax
ffffffff801112c0:	48 c1 ea 28          	shr    rdx,0x28
ffffffff801112c4:	83 e2 0f             	and    edx,0xf
ffffffff801112c7:	0f b6 aa b0 59 11 80 	movzx  ebp,BYTE PTR [rdx-0x7feea650]
ffffffff801112ce:	48 89 c2             	mov    rdx,rax
ffffffff801112d1:	48 c1 ea 2c          	shr    rdx,0x2c
ffffffff801112d5:	83 e2 0f             	and    edx,0xf
ffffffff801112d8:	44 0f b6 a2 b0 59 11 80 	movzx  r12d,BYTE PTR [rdx-0x7feea650]
ffffffff801112e0:	48 89 c2             	mov    rdx,rax
ffffffff801112e3:	48 c1 ea 30          	shr    rdx,0x30
ffffffff801112e7:	83 e2 0f             	and    edx,0xf
ffffffff801112ea:	44 0f b6 aa b0 59 11 80 	movzx  r13d,BYTE PTR [rdx-0x7feea650]
ffffffff801112f2:	48 89 c2             	mov    rdx,rax
ffffffff801112f5:	48 c1 ea 34          	shr    rdx,0x34
ffffffff801112f9:	83 e2 0f             	and    edx,0xf
ffffffff801112fc:	44 0f b6 b2 b0 59 11 80 	movzx  r14d,BYTE PTR [rdx-0x7feea650]
ffffffff80111304:	48 89 c2             	mov    rdx,rax
ffffffff80111307:	48 c1 ea 38          	shr    rdx,0x38
ffffffff8011130b:	83 e2 0f             	and    edx,0xf
ffffffff8011130e:	48 c1 e8 3c          	shr    rax,0x3c
ffffffff80111312:	44 0f b6 ba b0 59 11 80 	movzx  r15d,BYTE PTR [rdx-0x7feea650]
ffffffff8011131a:	0f be b8 b0 59 11 80 	movsx  edi,BYTE PTR [rax-0x7feea650]
ffffffff80111321:	e8 8a fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff80111326:	41 0f be ff          	movsx  edi,r15b
ffffffff8011132a:	e8 81 fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff8011132f:	41 0f be fe          	movsx  edi,r14b
ffffffff80111333:	e8 78 fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff80111338:	41 0f be fd          	movsx  edi,r13b
ffffffff8011133c:	e8 6f fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff80111341:	bf 2d 00 00 00       	mov    edi,0x2d
ffffffff80111346:	e8 65 fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff8011134b:	41 0f be fc          	movsx  edi,r12b
ffffffff8011134f:	e8 5c fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff80111354:	40 0f be fd          	movsx  edi,bpl
ffffffff80111358:	e8 53 fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff8011135d:	0f be fb             	movsx  edi,bl
ffffffff80111360:	e8 4b fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff80111365:	0f be 7c 24 0f       	movsx  edi,BYTE PTR [rsp+0xf]
ffffffff8011136a:	e8 41 fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff8011136f:	bf 2d 00 00 00       	mov    edi,0x2d
ffffffff80111374:	e8 37 fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff80111379:	0f be 7c 24 0e       	movsx  edi,BYTE PTR [rsp+0xe]
ffffffff8011137e:	e8 2d fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff80111383:	0f be 7c 24 0d       	movsx  edi,BYTE PTR [rsp+0xd]
ffffffff80111388:	e8 23 fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff8011138d:	0f be 7c 24 0c       	movsx  edi,BYTE PTR [rsp+0xc]
ffffffff80111392:	e8 19 fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff80111397:	0f be 7c 24 0b       	movsx  edi,BYTE PTR [rsp+0xb]
ffffffff8011139c:	e8 0f fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff801113a1:	bf 2d 00 00 00       	mov    edi,0x2d
ffffffff801113a6:	e8 05 fd ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff801113ab:	0f be 7c 24 0a       	movsx  edi,BYTE PTR [rsp+0xa]
ffffffff801113b0:	e8 fb fc ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff801113b5:	0f be 7c 24 09       	movsx  edi,BYTE PTR [rsp+0x9]
ffffffff801113ba:	e8 f1 fc ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff801113bf:	0f be 7c 24 08       	movsx  edi,BYTE PTR [rsp+0x8]
ffffffff801113c4:	e8 e7 fc ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff801113c9:	0f be 3c 24          	movsx  edi,BYTE PTR [rsp]
ffffffff801113cd:	48 83 c4 18          	add    rsp,0x18
ffffffff801113d1:	5b                   	pop    rbx
ffffffff801113d2:	5d                   	pop    rbp
ffffffff801113d3:	41 5c                	pop    r12
ffffffff801113d5:	41 5d                	pop    r13
ffffffff801113d7:	41 5e                	pop    r14
ffffffff801113d9:	41 5f                	pop    r15
ffffffff801113db:	e9 d0 fc ff ff       	jmp    ffffffff801110b0 <PrintChar>

ffffffff801113e0 <PrintNumber>:
ffffffff801113e0:	48 85 ff             	test   rdi,rdi
ffffffff801113e3:	0f 84 97 00 00 00    	je     ffffffff80111480 <PrintNumber+0xa0>
ffffffff801113e9:	48 b9 cd cc cc cc cc cc cc cc 	movabs rcx,0xcccccccccccccccd
ffffffff801113f3:	55                   	push   rbp
ffffffff801113f4:	53                   	push   rbx
ffffffff801113f5:	bb 14 00 00 00       	mov    ebx,0x14
ffffffff801113fa:	48 83 ec 28          	sub    rsp,0x28
ffffffff801113fe:	66 90                	xchg   ax,ax
ffffffff80111400:	48 89 f8             	mov    rax,rdi
ffffffff80111403:	48 89 fe             	mov    rsi,rdi
ffffffff80111406:	48 83 eb 01          	sub    rbx,0x1
ffffffff8011140a:	48 f7 e1             	mul    rcx
ffffffff8011140d:	48 c1 ea 03          	shr    rdx,0x3
ffffffff80111411:	48 8d 04 92          	lea    rax,[rdx+rdx*4]
ffffffff80111415:	48 01 c0             	add    rax,rax
ffffffff80111418:	48 29 c6             	sub    rsi,rax
ffffffff8011141b:	48 89 f0             	mov    rax,rsi
ffffffff8011141e:	83 c0 30             	add    eax,0x30
ffffffff80111421:	88 44 1c 0c          	mov    BYTE PTR [rsp+rbx*1+0xc],al
ffffffff80111425:	48 89 f8             	mov    rax,rdi
ffffffff80111428:	48 89 d7             	mov    rdi,rdx
ffffffff8011142b:	48 83 f8 09          	cmp    rax,0x9
ffffffff8011142f:	77 cf                	ja     ffffffff80111400 <PrintNumber+0x20>
ffffffff80111431:	bd 92 24 01 00       	mov    ebp,0x12492
ffffffff80111436:	48 83 fb 13          	cmp    rbx,0x13
ffffffff8011143a:	77 1e                	ja     ffffffff8011145a <PrintNumber+0x7a>
ffffffff8011143c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80111440:	0f be 7c 1c 0c       	movsx  edi,BYTE PTR [rsp+rbx*1+0xc]
ffffffff80111445:	e8 66 fc ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff8011144a:	48 83 fb 10          	cmp    rbx,0x10
ffffffff8011144e:	76 18                	jbe    ffffffff80111468 <PrintNumber+0x88>
ffffffff80111450:	48 83 c3 01          	add    rbx,0x1
ffffffff80111454:	48 83 fb 14          	cmp    rbx,0x14
ffffffff80111458:	75 e6                	jne    ffffffff80111440 <PrintNumber+0x60>
ffffffff8011145a:	48 83 c4 28          	add    rsp,0x28
ffffffff8011145e:	5b                   	pop    rbx
ffffffff8011145f:	5d                   	pop    rbp
ffffffff80111460:	c3                   	ret    
ffffffff80111461:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80111468:	48 0f a3 dd          	bt     rbp,rbx
ffffffff8011146c:	73 0a                	jae    ffffffff80111478 <PrintNumber+0x98>
ffffffff8011146e:	bf 2c 00 00 00       	mov    edi,0x2c
ffffffff80111473:	e8 38 fc ff ff       	call   ffffffff801110b0 <PrintChar>
ffffffff80111478:	48 83 c3 01          	add    rbx,0x1
ffffffff8011147c:	eb c2                	jmp    ffffffff80111440 <PrintNumber+0x60>
ffffffff8011147e:	66 90                	xchg   ax,ax
ffffffff80111480:	bf 30 00 00 00       	mov    edi,0x30
ffffffff80111485:	e9 26 fc ff ff       	jmp    ffffffff801110b0 <PrintChar>
ffffffff8011148a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff80111490 <InitializeThreads>:
ffffffff80111490:	48 c7 05 0d 4c 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x4c0d],0x0        # ffffffff801160a8 <next_thread_id>
ffffffff8011149b:	c3                   	ret    
ffffffff8011149c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff801114a0 <CreateThread>:
ffffffff801114a0:	41 55                	push   r13
ffffffff801114a2:	49 89 d5             	mov    r13,rdx
ffffffff801114a5:	41 54                	push   r12
ffffffff801114a7:	55                   	push   rbp
ffffffff801114a8:	48 89 f5             	mov    rbp,rsi
ffffffff801114ab:	53                   	push   rbx
ffffffff801114ac:	48 89 fb             	mov    rbx,rdi
ffffffff801114af:	bf 80 02 00 00       	mov    edi,0x280
ffffffff801114b4:	48 83 ec 08          	sub    rsp,0x8
ffffffff801114b8:	e8 a3 cd ff ff       	call   ffffffff8010e260 <malloc>
ffffffff801114bd:	49 89 c4             	mov    r12,rax
ffffffff801114c0:	48 85 c0             	test   rax,rax
ffffffff801114c3:	0f 84 d4 01 00 00    	je     ffffffff8011169d <CreateThread+0x1fd>
ffffffff801114c9:	48 89 58 08          	mov    QWORD PTR [rax+0x8],rbx
ffffffff801114cd:	48 8b 05 d4 4b 00 00 	mov    rax,QWORD PTR [rip+0x4bd4]        # ffffffff801160a8 <next_thread_id>
ffffffff801114d4:	be 01 00 00 00       	mov    esi,0x1
ffffffff801114d9:	48 8b 7b 68          	mov    rdi,QWORD PTR [rbx+0x68]
ffffffff801114dd:	49 89 04 24          	mov    QWORD PTR [r12],rax
ffffffff801114e1:	48 83 c0 01          	add    rax,0x1
ffffffff801114e5:	48 89 05 bc 4b 00 00 	mov    QWORD PTR [rip+0x4bbc],rax        # ffffffff801160a8 <next_thread_id>
ffffffff801114ec:	e8 bf 0e 00 00       	call   ffffffff801123b0 <FindFreePageRange>
ffffffff801114f1:	49 89 84 24 30 02 00 00 	mov    QWORD PTR [r12+0x230],rax
ffffffff801114f9:	48 83 f8 01          	cmp    rax,0x1
ffffffff801114fd:	0f 84 ad 01 00 00    	je     ffffffff801116b0 <CreateThread+0x210>
ffffffff80111503:	31 c0                	xor    eax,eax
ffffffff80111505:	e8 f6 df ff ff       	call   ffffffff8010f500 <GetPhysicalPage>
ffffffff8011150a:	48 89 c2             	mov    rdx,rax
ffffffff8011150d:	48 83 f8 01          	cmp    rax,0x1
ffffffff80111511:	0f 84 99 01 00 00    	je     ffffffff801116b0 <CreateThread+0x210>
ffffffff80111517:	49 8b 44 24 08       	mov    rax,QWORD PTR [r12+0x8]
ffffffff8011151c:	49 8b b4 24 30 02 00 00 	mov    rsi,QWORD PTR [r12+0x230]
ffffffff80111524:	b9 01 00 00 00       	mov    ecx,0x1
ffffffff80111529:	48 8b 78 68          	mov    rdi,QWORD PTR [rax+0x68]
ffffffff8011152d:	e8 ae 0e 00 00       	call   ffffffff801123e0 <MapPhysicalPageToVirtualPage>
ffffffff80111532:	bf a0 00 00 00       	mov    edi,0xa0
ffffffff80111537:	e8 24 cd ff ff       	call   ffffffff8010e260 <malloc>
ffffffff8011153c:	49 8b 8c 24 30 02 00 00 	mov    rcx,QWORD PTR [r12+0x230]
ffffffff80111544:	49 89 44 24 10       	mov    QWORD PTR [r12+0x10],rax
ffffffff80111549:	48 8d 91 00 10 00 00 	lea    rdx,[rcx+0x1000]
ffffffff80111550:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
ffffffff80111557:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
ffffffff8011155e:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
ffffffff80111562:	48 c7 40 08 00 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
ffffffff8011156a:	48 c7 40 10 00 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
ffffffff80111572:	48 c7 40 18 00 00 00 00 	mov    QWORD PTR [rax+0x18],0x0
ffffffff8011157a:	48 c7 40 20 00 00 00 00 	mov    QWORD PTR [rax+0x20],0x0
ffffffff80111582:	48 c7 40 28 00 00 00 00 	mov    QWORD PTR [rax+0x28],0x0
ffffffff8011158a:	48 c7 40 30 00 00 00 00 	mov    QWORD PTR [rax+0x30],0x0
ffffffff80111592:	48 c7 40 38 00 00 00 00 	mov    QWORD PTR [rax+0x38],0x0
ffffffff8011159a:	48 c7 40 40 00 00 00 00 	mov    QWORD PTR [rax+0x40],0x0
ffffffff801115a2:	48 c7 40 48 00 00 00 00 	mov    QWORD PTR [rax+0x48],0x0
ffffffff801115aa:	48 c7 40 50 00 00 00 00 	mov    QWORD PTR [rax+0x50],0x0
ffffffff801115b2:	48 c7 40 58 00 00 00 00 	mov    QWORD PTR [rax+0x58],0x0
ffffffff801115ba:	48 c7 40 60 00 00 00 00 	mov    QWORD PTR [rax+0x60],0x0
ffffffff801115c2:	4c 89 68 68          	mov    QWORD PTR [rax+0x68],r13
ffffffff801115c6:	48 89 68 78          	mov    QWORD PTR [rax+0x78],rbp
ffffffff801115ca:	48 c7 80 80 00 00 00 23 00 00 00 	mov    QWORD PTR [rax+0x80],0x23
ffffffff801115d5:	48 c7 80 98 00 00 00 1b 00 00 00 	mov    QWORD PTR [rax+0x98],0x1b
ffffffff801115e0:	49 c7 84 24 28 02 00 00 00 00 00 00 	mov    QWORD PTR [r12+0x228],0x0
ffffffff801115ec:	80 7b 60 01          	cmp    BYTE PTR [rbx+0x60],0x1
ffffffff801115f0:	48 19 d2             	sbb    rdx,rdx
ffffffff801115f3:	48 81 e2 00 d0 ff ff 	and    rdx,0xffffffffffffd000
ffffffff801115fa:	48 81 c2 00 32 20 00 	add    rdx,0x203200
ffffffff80111601:	48 89 90 88 00 00 00 	mov    QWORD PTR [rax+0x88],rdx
ffffffff80111608:	49 c7 84 24 50 02 00 00 00 00 00 00 	mov    QWORD PTR [r12+0x250],0x0
ffffffff80111614:	41 80 a4 24 48 02 00 00 fe 	and    BYTE PTR [r12+0x248],0xfe
ffffffff8011161d:	41 80 a4 24 70 02 00 00 fe 	and    BYTE PTR [r12+0x270],0xfe
ffffffff80111626:	49 c7 84 24 58 02 00 00 00 00 00 00 	mov    QWORD PTR [r12+0x258],0x0
ffffffff80111632:	49 c7 84 24 60 02 00 00 00 00 00 00 	mov    QWORD PTR [r12+0x260],0x0
ffffffff8011163e:	49 c7 84 24 68 02 00 00 00 00 00 00 	mov    QWORD PTR [r12+0x268],0x0
ffffffff8011164a:	49 c7 84 24 40 02 00 00 00 00 00 00 	mov    QWORD PTR [r12+0x240],0x0
ffffffff80111656:	48 8b 83 a0 00 00 00 	mov    rax,QWORD PTR [rbx+0xa0]
ffffffff8011165d:	48 85 c0             	test   rax,rax
ffffffff80111660:	74 07                	je     ffffffff80111669 <CreateThread+0x1c9>
ffffffff80111662:	4c 89 a0 40 02 00 00 	mov    QWORD PTR [rax+0x240],r12
ffffffff80111669:	49 89 84 24 38 02 00 00 	mov    QWORD PTR [r12+0x238],rax
ffffffff80111671:	49 8d 7c 24 20       	lea    rdi,[r12+0x20]
ffffffff80111676:	ba 00 02 00 00       	mov    edx,0x200
ffffffff8011167b:	31 f6                	xor    esi,esi
ffffffff8011167d:	66 83 83 a8 00 00 00 01 	add    WORD PTR [rbx+0xa8],0x1
ffffffff80111685:	4c 89 a3 a0 00 00 00 	mov    QWORD PTR [rbx+0xa0],r12
ffffffff8011168c:	e8 5f c0 ff ff       	call   ffffffff8010d6f0 <memset>
ffffffff80111691:	49 c7 84 24 78 02 00 00 00 00 00 00 	mov    QWORD PTR [r12+0x278],0x0
ffffffff8011169d:	48 83 c4 08          	add    rsp,0x8
ffffffff801116a1:	4c 89 e0             	mov    rax,r12
ffffffff801116a4:	5b                   	pop    rbx
ffffffff801116a5:	5d                   	pop    rbp
ffffffff801116a6:	41 5c                	pop    r12
ffffffff801116a8:	41 5d                	pop    r13
ffffffff801116aa:	c3                   	ret    
ffffffff801116ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff801116b0:	4c 89 e7             	mov    rdi,r12
ffffffff801116b3:	45 31 e4             	xor    r12d,r12d
ffffffff801116b6:	e8 15 cd ff ff       	call   ffffffff8010e3d0 <free>
ffffffff801116bb:	48 83 c4 08          	add    rsp,0x8
ffffffff801116bf:	4c 89 e0             	mov    rax,r12
ffffffff801116c2:	5b                   	pop    rbx
ffffffff801116c3:	5d                   	pop    rbp
ffffffff801116c4:	41 5c                	pop    r12
ffffffff801116c6:	41 5d                	pop    r13
ffffffff801116c8:	c3                   	ret    
ffffffff801116c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

ffffffff801116d0 <DestroyThread>:
ffffffff801116d0:	41 55                	push   r13
ffffffff801116d2:	41 54                	push   r12
ffffffff801116d4:	55                   	push   rbp
ffffffff801116d5:	48 89 fd             	mov    rbp,rdi
ffffffff801116d8:	53                   	push   rbx
ffffffff801116d9:	89 f3                	mov    ebx,esi
ffffffff801116db:	48 83 ec 08          	sub    rsp,0x8
ffffffff801116df:	f6 87 48 02 00 00 01 	test   BYTE PTR [rdi+0x248],0x1
ffffffff801116e6:	0f 85 0c 01 00 00    	jne    ffffffff801117f8 <DestroyThread+0x128>
ffffffff801116ec:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
ffffffff801116f0:	48 8b b5 30 02 00 00 	mov    rsi,QWORD PTR [rbp+0x230]
ffffffff801116f7:	ba 01 00 00 00       	mov    edx,0x1
ffffffff801116fc:	48 8b 78 68          	mov    rdi,QWORD PTR [rax+0x68]
ffffffff80111700:	e8 ab 18 00 00       	call   ffffffff80112fb0 <UnmapVirtualPage>
ffffffff80111705:	4c 8b 65 08          	mov    r12,QWORD PTR [rbp+0x8]
ffffffff80111709:	f6 85 70 02 00 00 01 	test   BYTE PTR [rbp+0x270],0x1
ffffffff80111710:	74 3a                	je     ffffffff8011174c <DestroyThread+0x7c>
ffffffff80111712:	49 8b 84 24 90 00 00 00 	mov    rax,QWORD PTR [r12+0x90]
ffffffff8011171a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80111720:	48 85 c0             	test   rax,rax
ffffffff80111723:	74 1c                	je     ffffffff80111741 <DestroyThread+0x71>
ffffffff80111725:	48 89 c2             	mov    rdx,rax
ffffffff80111728:	48 8b 80 68 02 00 00 	mov    rax,QWORD PTR [rax+0x268]
ffffffff8011172f:	48 39 d5             	cmp    rbp,rdx
ffffffff80111732:	75 ec                	jne    ffffffff80111720 <DestroyThread+0x50>
ffffffff80111734:	49 89 84 24 90 00 00 00 	mov    QWORD PTR [r12+0x90],rax
ffffffff8011173c:	48 85 c0             	test   rax,rax
ffffffff8011173f:	75 e4                	jne    ffffffff80111725 <DestroyThread+0x55>
ffffffff80111741:	48 c7 85 68 02 00 00 00 00 00 00 	mov    QWORD PTR [rbp+0x268],0x0
ffffffff8011174c:	48 8b 95 38 02 00 00 	mov    rdx,QWORD PTR [rbp+0x238]
ffffffff80111753:	48 8b 85 40 02 00 00 	mov    rax,QWORD PTR [rbp+0x240]
ffffffff8011175a:	48 85 d2             	test   rdx,rdx
ffffffff8011175d:	74 0e                	je     ffffffff8011176d <DestroyThread+0x9d>
ffffffff8011175f:	48 89 82 40 02 00 00 	mov    QWORD PTR [rdx+0x240],rax
ffffffff80111766:	48 8b 85 40 02 00 00 	mov    rax,QWORD PTR [rbp+0x240]
ffffffff8011176d:	48 85 c0             	test   rax,rax
ffffffff80111770:	0f 84 92 00 00 00    	je     ffffffff80111808 <DestroyThread+0x138>
ffffffff80111776:	48 89 90 38 02 00 00 	mov    QWORD PTR [rax+0x238],rdx
ffffffff8011177d:	48 8b 85 78 02 00 00 	mov    rax,QWORD PTR [rbp+0x278]
ffffffff80111784:	48 85 c0             	test   rax,rax
ffffffff80111787:	75 37                	jne    ffffffff801117c0 <DestroyThread+0xf0>
ffffffff80111789:	48 89 ef             	mov    rdi,rbp
ffffffff8011178c:	e8 3f cc ff ff       	call   ffffffff8010e3d0 <free>
ffffffff80111791:	41 0f b7 84 24 a8 00 00 00 	movzx  eax,WORD PTR [r12+0xa8]
ffffffff8011179a:	83 e8 01             	sub    eax,0x1
ffffffff8011179d:	66 41 89 84 24 a8 00 00 00 	mov    WORD PTR [r12+0xa8],ax
ffffffff801117a6:	84 db                	test   bl,bl
ffffffff801117a8:	75 05                	jne    ffffffff801117af <DestroyThread+0xdf>
ffffffff801117aa:	66 85 c0             	test   ax,ax
ffffffff801117ad:	74 69                	je     ffffffff80111818 <DestroyThread+0x148>
ffffffff801117af:	48 83 c4 08          	add    rsp,0x8
ffffffff801117b3:	5b                   	pop    rbx
ffffffff801117b4:	5d                   	pop    rbp
ffffffff801117b5:	41 5c                	pop    r12
ffffffff801117b7:	41 5d                	pop    r13
ffffffff801117b9:	c3                   	ret    
ffffffff801117ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff801117c0:	25 ff 0f 00 00       	and    eax,0xfff
ffffffff801117c5:	49 8b 7c 24 68       	mov    rdi,QWORD PTR [r12+0x68]
ffffffff801117ca:	48 89 c6             	mov    rsi,rax
ffffffff801117cd:	49 89 c5             	mov    r13,rax
ffffffff801117d0:	e8 bb 10 00 00       	call   ffffffff80112890 <GetPhysicalAddress>
ffffffff801117d5:	48 89 c7             	mov    rdi,rax
ffffffff801117d8:	48 83 f8 01          	cmp    rax,0x1
ffffffff801117dc:	74 ab                	je     ffffffff80111789 <DestroyThread+0xb9>
ffffffff801117de:	be 01 00 00 00       	mov    esi,0x1
ffffffff801117e3:	e8 98 0b 00 00       	call   ffffffff80112380 <TemporarilyMapPhysicalMemory>
ffffffff801117e8:	4a c7 04 28 00 00 00 00 	mov    QWORD PTR [rax+r13*1],0x0
ffffffff801117f0:	eb 97                	jmp    ffffffff80111789 <DestroyThread+0xb9>
ffffffff801117f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff801117f8:	e8 e3 e6 ff ff       	call   ffffffff8010fee0 <UnscheduleThread>
ffffffff801117fd:	e9 ea fe ff ff       	jmp    ffffffff801116ec <DestroyThread+0x1c>
ffffffff80111802:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80111808:	49 89 94 24 a0 00 00 00 	mov    QWORD PTR [r12+0xa0],rdx
ffffffff80111810:	e9 68 ff ff ff       	jmp    ffffffff8011177d <DestroyThread+0xad>
ffffffff80111815:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80111818:	48 83 c4 08          	add    rsp,0x8
ffffffff8011181c:	4c 89 e7             	mov    rdi,r12
ffffffff8011181f:	5b                   	pop    rbx
ffffffff80111820:	5d                   	pop    rbp
ffffffff80111821:	41 5c                	pop    r12
ffffffff80111823:	41 5d                	pop    r13
ffffffff80111825:	e9 76 df ff ff       	jmp    ffffffff8010f7a0 <DestroyProcess>
ffffffff8011182a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff80111830 <DestroyThreadsForProcess>:
ffffffff80111830:	41 56                	push   r14
ffffffff80111832:	41 55                	push   r13
ffffffff80111834:	41 89 f5             	mov    r13d,esi
ffffffff80111837:	41 54                	push   r12
ffffffff80111839:	55                   	push   rbp
ffffffff8011183a:	53                   	push   rbx
ffffffff8011183b:	48 89 fb             	mov    rbx,rdi
ffffffff8011183e:	66 90                	xchg   ax,ax
ffffffff80111840:	48 8b ab a0 00 00 00 	mov    rbp,QWORD PTR [rbx+0xa0]
ffffffff80111847:	48 85 ed             	test   rbp,rbp
ffffffff8011184a:	0f 84 e2 00 00 00    	je     ffffffff80111932 <DestroyThreadsForProcess+0x102>
ffffffff80111850:	f6 85 48 02 00 00 01 	test   BYTE PTR [rbp+0x248],0x1
ffffffff80111857:	0f 85 1b 01 00 00    	jne    ffffffff80111978 <DestroyThreadsForProcess+0x148>
ffffffff8011185d:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
ffffffff80111861:	48 8b b5 30 02 00 00 	mov    rsi,QWORD PTR [rbp+0x230]
ffffffff80111868:	ba 01 00 00 00       	mov    edx,0x1
ffffffff8011186d:	48 8b 78 68          	mov    rdi,QWORD PTR [rax+0x68]
ffffffff80111871:	e8 3a 17 00 00       	call   ffffffff80112fb0 <UnmapVirtualPage>
ffffffff80111876:	4c 8b 65 08          	mov    r12,QWORD PTR [rbp+0x8]
ffffffff8011187a:	f6 85 70 02 00 00 01 	test   BYTE PTR [rbp+0x270],0x1
ffffffff80111881:	74 39                	je     ffffffff801118bc <DestroyThreadsForProcess+0x8c>
ffffffff80111883:	49 8b 84 24 90 00 00 00 	mov    rax,QWORD PTR [r12+0x90]
ffffffff8011188b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80111890:	48 85 c0             	test   rax,rax
ffffffff80111893:	74 1c                	je     ffffffff801118b1 <DestroyThreadsForProcess+0x81>
ffffffff80111895:	48 89 c2             	mov    rdx,rax
ffffffff80111898:	48 8b 80 68 02 00 00 	mov    rax,QWORD PTR [rax+0x268]
ffffffff8011189f:	48 39 d5             	cmp    rbp,rdx
ffffffff801118a2:	75 ec                	jne    ffffffff80111890 <DestroyThreadsForProcess+0x60>
ffffffff801118a4:	49 89 84 24 90 00 00 00 	mov    QWORD PTR [r12+0x90],rax
ffffffff801118ac:	48 85 c0             	test   rax,rax
ffffffff801118af:	75 e4                	jne    ffffffff80111895 <DestroyThreadsForProcess+0x65>
ffffffff801118b1:	48 c7 85 68 02 00 00 00 00 00 00 	mov    QWORD PTR [rbp+0x268],0x0
ffffffff801118bc:	48 8b 95 38 02 00 00 	mov    rdx,QWORD PTR [rbp+0x238]
ffffffff801118c3:	48 8b 85 40 02 00 00 	mov    rax,QWORD PTR [rbp+0x240]
ffffffff801118ca:	48 85 d2             	test   rdx,rdx
ffffffff801118cd:	74 0e                	je     ffffffff801118dd <DestroyThreadsForProcess+0xad>
ffffffff801118cf:	48 89 82 40 02 00 00 	mov    QWORD PTR [rdx+0x240],rax
ffffffff801118d6:	48 8b 85 40 02 00 00 	mov    rax,QWORD PTR [rbp+0x240]
ffffffff801118dd:	48 85 c0             	test   rax,rax
ffffffff801118e0:	0f 84 a2 00 00 00    	je     ffffffff80111988 <DestroyThreadsForProcess+0x158>
ffffffff801118e6:	48 89 90 38 02 00 00 	mov    QWORD PTR [rax+0x238],rdx
ffffffff801118ed:	48 8b 85 78 02 00 00 	mov    rax,QWORD PTR [rbp+0x278]
ffffffff801118f4:	48 85 c0             	test   rax,rax
ffffffff801118f7:	75 47                	jne    ffffffff80111940 <DestroyThreadsForProcess+0x110>
ffffffff801118f9:	48 89 ef             	mov    rdi,rbp
ffffffff801118fc:	e8 cf ca ff ff       	call   ffffffff8010e3d0 <free>
ffffffff80111901:	66 41 83 ac 24 a8 00 00 00 01 	sub    WORD PTR [r12+0xa8],0x1
ffffffff8011190b:	0f 85 2f ff ff ff    	jne    ffffffff80111840 <DestroyThreadsForProcess+0x10>
ffffffff80111911:	45 84 ed             	test   r13b,r13b
ffffffff80111914:	0f 85 26 ff ff ff    	jne    ffffffff80111840 <DestroyThreadsForProcess+0x10>
ffffffff8011191a:	4c 89 e7             	mov    rdi,r12
ffffffff8011191d:	e8 7e de ff ff       	call   ffffffff8010f7a0 <DestroyProcess>
ffffffff80111922:	48 8b ab a0 00 00 00 	mov    rbp,QWORD PTR [rbx+0xa0]
ffffffff80111929:	48 85 ed             	test   rbp,rbp
ffffffff8011192c:	0f 85 1e ff ff ff    	jne    ffffffff80111850 <DestroyThreadsForProcess+0x20>
ffffffff80111932:	5b                   	pop    rbx
ffffffff80111933:	5d                   	pop    rbp
ffffffff80111934:	41 5c                	pop    r12
ffffffff80111936:	41 5d                	pop    r13
ffffffff80111938:	41 5e                	pop    r14
ffffffff8011193a:	c3                   	ret    
ffffffff8011193b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80111940:	25 ff 0f 00 00       	and    eax,0xfff
ffffffff80111945:	49 8b 7c 24 68       	mov    rdi,QWORD PTR [r12+0x68]
ffffffff8011194a:	48 89 c6             	mov    rsi,rax
ffffffff8011194d:	49 89 c6             	mov    r14,rax
ffffffff80111950:	e8 3b 0f 00 00       	call   ffffffff80112890 <GetPhysicalAddress>
ffffffff80111955:	48 89 c7             	mov    rdi,rax
ffffffff80111958:	48 83 f8 01          	cmp    rax,0x1
ffffffff8011195c:	74 9b                	je     ffffffff801118f9 <DestroyThreadsForProcess+0xc9>
ffffffff8011195e:	be 01 00 00 00       	mov    esi,0x1
ffffffff80111963:	e8 18 0a 00 00       	call   ffffffff80112380 <TemporarilyMapPhysicalMemory>
ffffffff80111968:	4a c7 04 30 00 00 00 00 	mov    QWORD PTR [rax+r14*1],0x0
ffffffff80111970:	eb 87                	jmp    ffffffff801118f9 <DestroyThreadsForProcess+0xc9>
ffffffff80111972:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80111978:	48 89 ef             	mov    rdi,rbp
ffffffff8011197b:	e8 60 e5 ff ff       	call   ffffffff8010fee0 <UnscheduleThread>
ffffffff80111980:	e9 d8 fe ff ff       	jmp    ffffffff8011185d <DestroyThreadsForProcess+0x2d>
ffffffff80111985:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80111988:	49 89 94 24 a0 00 00 00 	mov    QWORD PTR [r12+0xa0],rdx
ffffffff80111990:	e9 58 ff ff ff       	jmp    ffffffff801118ed <DestroyThreadsForProcess+0xbd>
ffffffff80111995:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]

ffffffff801119a0 <GetThreadFromTid>:
ffffffff801119a0:	48 8b 87 a0 00 00 00 	mov    rax,QWORD PTR [rdi+0xa0]
ffffffff801119a7:	48 85 c0             	test   rax,rax
ffffffff801119aa:	75 10                	jne    ffffffff801119bc <GetThreadFromTid+0x1c>
ffffffff801119ac:	eb 13                	jmp    ffffffff801119c1 <GetThreadFromTid+0x21>
ffffffff801119ae:	66 90                	xchg   ax,ax
ffffffff801119b0:	48 8b 80 38 02 00 00 	mov    rax,QWORD PTR [rax+0x238]
ffffffff801119b7:	48 85 c0             	test   rax,rax
ffffffff801119ba:	74 05                	je     ffffffff801119c1 <GetThreadFromTid+0x21>
ffffffff801119bc:	48 39 30             	cmp    QWORD PTR [rax],rsi
ffffffff801119bf:	75 ef                	jne    ffffffff801119b0 <GetThreadFromTid+0x10>
ffffffff801119c1:	c3                   	ret    
ffffffff801119c2:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff801119cd:	0f 1f 00             	nop    DWORD PTR [rax]

ffffffff801119d0 <SetThreadSegment>:
ffffffff801119d0:	48 39 3d c9 46 00 00 	cmp    QWORD PTR [rip+0x46c9],rdi        # ffffffff801160a0 <running_thread>
ffffffff801119d7:	48 89 b7 28 02 00 00 	mov    QWORD PTR [rdi+0x228],rsi
ffffffff801119de:	74 08                	je     ffffffff801119e8 <SetThreadSegment+0x18>
ffffffff801119e0:	c3                   	ret    
ffffffff801119e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff801119e8:	48 89 f2             	mov    rdx,rsi
ffffffff801119eb:	b9 00 01 00 c0       	mov    ecx,0xc0000100
ffffffff801119f0:	89 f0                	mov    eax,esi
ffffffff801119f2:	48 c1 ea 20          	shr    rdx,0x20
ffffffff801119f6:	0f 30                	wrmsr  
ffffffff801119f8:	c3                   	ret    
ffffffff801119f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

ffffffff80111a00 <LoadThreadSegment>:
ffffffff80111a00:	48 8b 87 28 02 00 00 	mov    rax,QWORD PTR [rdi+0x228]
ffffffff80111a07:	b9 00 01 00 c0       	mov    ecx,0xc0000100
ffffffff80111a0c:	48 89 c2             	mov    rdx,rax
ffffffff80111a0f:	48 c1 ea 20          	shr    rdx,0x20
ffffffff80111a13:	0f 30                	wrmsr  
ffffffff80111a15:	c3                   	ret    
ffffffff80111a16:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]

ffffffff80111a20 <SetTimerPhase>:
ffffffff80111a20:	b8 dc 34 12 00       	mov    eax,0x1234dc
ffffffff80111a25:	31 d2                	xor    edx,edx
ffffffff80111a27:	53                   	push   rbx
ffffffff80111a28:	be 36 00 00 00       	mov    esi,0x36
ffffffff80111a2d:	48 f7 f7             	div    rdi
ffffffff80111a30:	bf 43 00 00 00       	mov    edi,0x43
ffffffff80111a35:	48 89 c3             	mov    rbx,rax
ffffffff80111a38:	e8 a3 c2 ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111a3d:	0f b6 f3             	movzx  esi,bl
ffffffff80111a40:	bf 40 00 00 00       	mov    edi,0x40
ffffffff80111a45:	e8 96 c2 ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111a4a:	0f b6 f7             	movzx  esi,bh
ffffffff80111a4d:	bf 40 00 00 00       	mov    edi,0x40
ffffffff80111a52:	5b                   	pop    rbx
ffffffff80111a53:	e9 88 c2 ff ff       	jmp    ffffffff8010dce0 <outportb>
ffffffff80111a58:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff80111a60 <TimerHandler>:
ffffffff80111a60:	48 8b 05 49 46 00 00 	mov    rax,QWORD PTR [rip+0x4649]        # ffffffff801160b0 <time_slices>
ffffffff80111a67:	48 83 c0 01          	add    rax,0x1
ffffffff80111a6b:	48 89 05 3e 46 00 00 	mov    QWORD PTR [rip+0x463e],rax        # ffffffff801160b0 <time_slices>
ffffffff80111a72:	31 c0                	xor    eax,eax
ffffffff80111a74:	e9 57 e3 ff ff       	jmp    ffffffff8010fdd0 <ScheduleNextThread>
ffffffff80111a79:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

ffffffff80111a80 <InitializeTimer>:
ffffffff80111a80:	48 83 ec 08          	sub    rsp,0x8
ffffffff80111a84:	be 36 00 00 00       	mov    esi,0x36
ffffffff80111a89:	bf 43 00 00 00       	mov    edi,0x43
ffffffff80111a8e:	48 c7 05 17 46 00 00 00 00 00 00 	mov    QWORD PTR [rip+0x4617],0x0        # ffffffff801160b0 <time_slices>
ffffffff80111a99:	e8 42 c2 ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111a9e:	be 9b 00 00 00       	mov    esi,0x9b
ffffffff80111aa3:	bf 40 00 00 00       	mov    edi,0x40
ffffffff80111aa8:	e8 33 c2 ff ff       	call   ffffffff8010dce0 <outportb>
ffffffff80111aad:	be 2e 00 00 00       	mov    esi,0x2e
ffffffff80111ab2:	bf 40 00 00 00       	mov    edi,0x40
ffffffff80111ab7:	48 83 c4 08          	add    rsp,0x8
ffffffff80111abb:	e9 20 c2 ff ff       	jmp    ffffffff8010dce0 <outportb>

ffffffff80111ac0 <InitializeTss>:
ffffffff80111ac0:	48 83 ec 18          	sub    rsp,0x18
ffffffff80111ac4:	bf 68 00 00 00       	mov    edi,0x68
ffffffff80111ac9:	e8 92 c7 ff ff       	call   ffffffff8010e260 <malloc>
ffffffff80111ace:	ba 68 00 00 00       	mov    edx,0x68
ffffffff80111ad3:	31 f6                	xor    esi,esi
ffffffff80111ad5:	48 89 c7             	mov    rdi,rax
ffffffff80111ad8:	48 89 05 d9 45 00 00 	mov    QWORD PTR [rip+0x45d9],rax        # ffffffff801160b8 <tss>
ffffffff80111adf:	e8 0c bc ff ff       	call   ffffffff8010d6f0 <memset>
ffffffff80111ae4:	ba 68 00 00 00       	mov    edx,0x68
ffffffff80111ae9:	b9 89 00 00 00       	mov    ecx,0x89
ffffffff80111aee:	48 8b 05 c3 45 00 00 	mov    rax,QWORD PTR [rip+0x45c3]        # ffffffff801160b8 <tss>
ffffffff80111af5:	66 89 14 24          	mov    WORD PTR [rsp],dx
ffffffff80111af9:	be 68 00 00 00       	mov    esi,0x68
ffffffff80111afe:	48 89 c2             	mov    rdx,rax
ffffffff80111b01:	66 89 44 24 02       	mov    WORD PTR [rsp+0x2],ax
ffffffff80111b06:	48 c1 ea 10          	shr    rdx,0x10
ffffffff80111b0a:	66 89 4c 24 05       	mov    WORD PTR [rsp+0x5],cx
ffffffff80111b0f:	88 54 24 04          	mov    BYTE PTR [rsp+0x4],dl
ffffffff80111b13:	48 89 c2             	mov    rdx,rax
ffffffff80111b16:	48 c7 44 24 08 00 00 00 00 	mov    QWORD PTR [rsp+0x8],0x0
ffffffff80111b1f:	48 c1 ea 18          	shr    rdx,0x18
ffffffff80111b23:	88 54 24 07          	mov    BYTE PTR [rsp+0x7],dl
ffffffff80111b27:	48 89 c2             	mov    rdx,rax
ffffffff80111b2a:	48 8b 0c 24          	mov    rcx,QWORD PTR [rsp]
ffffffff80111b2e:	48 c1 ea 20          	shr    rdx,0x20
ffffffff80111b32:	89 54 24 08          	mov    DWORD PTR [rsp+0x8],edx
ffffffff80111b36:	48 c7 c2 4d 01 10 00 	mov    rdx,0x10014d
ffffffff80111b3d:	48 89 8a 00 00 00 80 	mov    QWORD PTR [rdx-0x80000000],rcx
ffffffff80111b44:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
ffffffff80111b49:	48 89 8a 08 00 00 80 	mov    QWORD PTR [rdx-0x7ffffff8],rcx
ffffffff80111b50:	66 89 70 66          	mov    WORD PTR [rax+0x66],si
ffffffff80111b54:	48 83 c4 18          	add    rsp,0x18
ffffffff80111b58:	c3                   	ret    
ffffffff80111b59:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

ffffffff80111b60 <SetInterruptStack>:
ffffffff80111b60:	48 8b 05 51 45 00 00 	mov    rax,QWORD PTR [rip+0x4551]        # ffffffff801160b8 <tss>
ffffffff80111b67:	48 81 c7 00 10 00 00 	add    rdi,0x1000
ffffffff80111b6e:	48 89 78 04          	mov    QWORD PTR [rax+0x4],rdi
ffffffff80111b72:	b8 28 00 00 00       	mov    eax,0x28
ffffffff80111b77:	0f 00 d8             	ltr    ax
ffffffff80111b7a:	c3                   	ret    
ffffffff80111b7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff80111b80 <FindFreePageRange.part.0>:
ffffffff80111b80:	41 57                	push   r15
ffffffff80111b82:	31 c0                	xor    eax,eax
ffffffff80111b84:	ba ff 01 00 00       	mov    edx,0x1ff
ffffffff80111b89:	41 56                	push   r14
ffffffff80111b8b:	41 55                	push   r13
ffffffff80111b8d:	41 54                	push   r12
ffffffff80111b8f:	55                   	push   rbp
ffffffff80111b90:	53                   	push   rbx
ffffffff80111b91:	48 83 ec 58          	sub    rsp,0x58
ffffffff80111b95:	48 39 3d 24 45 00 00 	cmp    QWORD PTR [rip+0x4524],rdi        # ffffffff801160c0 <kernel_pml4>
ffffffff80111b9c:	48 8b 1d 35 45 00 00 	mov    rbx,QWORD PTR [rip+0x4535]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80111ba3:	0f 94 c0             	sete   al
ffffffff80111ba6:	48 89 74 24 48       	mov    QWORD PTR [rsp+0x48],rsi
ffffffff80111bab:	48 05 ff 01 00 00    	add    rax,0x1ff
ffffffff80111bb1:	48 39 3d 08 45 00 00 	cmp    QWORD PTR [rip+0x4508],rdi        # ffffffff801160c0 <kernel_pml4>
ffffffff80111bb8:	48 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],rbx
ffffffff80111bbd:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
ffffffff80111bc2:	b8 00 00 00 00       	mov    eax,0x0
ffffffff80111bc7:	48 0f 44 c2          	cmove  rax,rdx
ffffffff80111bcb:	49 89 c6             	mov    r14,rax
ffffffff80111bce:	48 89 f8             	mov    rax,rdi
ffffffff80111bd1:	48 83 c8 03          	or     rax,0x3
ffffffff80111bd5:	48 89 44 24 40       	mov    QWORD PTR [rsp+0x40],rax
ffffffff80111bda:	48 3b 03             	cmp    rax,QWORD PTR [rbx]
ffffffff80111bdd:	74 0d                	je     ffffffff80111bec <FindFreePageRange.part.0+0x6c>
ffffffff80111bdf:	48 89 03             	mov    QWORD PTR [rbx],rax
ffffffff80111be2:	48 8b 05 df 44 00 00 	mov    rax,QWORD PTR [rip+0x44df]        # ffffffff801160c8 <current_pml4>
ffffffff80111be9:	0f 22 d8             	mov    cr3,rax
ffffffff80111bec:	48 8b 05 dd 44 00 00 	mov    rax,QWORD PTR [rip+0x44dd]        # ffffffff801160d0 <temp_memory_start>
ffffffff80111bf3:	4c 8b 64 24 48       	mov    r12,QWORD PTR [rsp+0x48]
ffffffff80111bf8:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
ffffffff80111bfd:	4d 85 e4             	test   r12,r12
ffffffff80111c00:	0f 84 61 03 00 00    	je     ffffffff80111f67 <FindFreePageRange.part.0+0x3e7>
ffffffff80111c06:	45 31 ff             	xor    r15d,r15d
ffffffff80111c09:	45 31 db             	xor    r11d,r11d
ffffffff80111c0c:	45 31 d2             	xor    r10d,r10d
ffffffff80111c0f:	45 31 c9             	xor    r9d,r9d
ffffffff80111c12:	31 d2                	xor    edx,edx
ffffffff80111c14:	31 ed                	xor    ebp,ebp
ffffffff80111c16:	eb 4e                	jmp    ffffffff80111c66 <FindFreePageRange.part.0+0xe6>
ffffffff80111c18:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80111c20:	4a 8b 04 f0          	mov    rax,QWORD PTR [rax+r14*8]
ffffffff80111c24:	48 85 c0             	test   rax,rax
ffffffff80111c27:	75 77                	jne    ffffffff80111ca0 <FindFreePageRange.part.0+0x120>
ffffffff80111c29:	48 81 c5 00 00 00 08 	add    rbp,0x8000000
ffffffff80111c30:	84 d2                	test   dl,dl
ffffffff80111c32:	4d 0f 44 fe          	cmove  r15,r14
ffffffff80111c36:	4c 0f 44 d8          	cmove  r11,rax
ffffffff80111c3a:	4c 0f 44 d0          	cmove  r10,rax
ffffffff80111c3e:	4c 0f 44 c8          	cmove  r9,rax
ffffffff80111c42:	49 39 ec             	cmp    r12,rbp
ffffffff80111c45:	ba 01 00 00 00       	mov    edx,0x1
ffffffff80111c4a:	40 0f 97 c6          	seta   sil
ffffffff80111c4e:	49 83 c6 01          	add    r14,0x1
ffffffff80111c52:	4c 3b 74 24 28       	cmp    r14,QWORD PTR [rsp+0x28]
ffffffff80111c57:	0f 83 a6 02 00 00    	jae    ffffffff80111f03 <FindFreePageRange.part.0+0x383>
ffffffff80111c5d:	40 84 f6             	test   sil,sil
ffffffff80111c60:	0f 84 9d 02 00 00    	je     ffffffff80111f03 <FindFreePageRange.part.0+0x383>
ffffffff80111c66:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
ffffffff80111c6b:	49 81 fe 00 01 00 00 	cmp    r14,0x100
ffffffff80111c72:	75 ac                	jne    ffffffff80111c20 <FindFreePageRange.part.0+0xa0>
ffffffff80111c74:	48 8b 80 00 08 00 00 	mov    rax,QWORD PTR [rax+0x800]
ffffffff80111c7b:	31 ed                	xor    ebp,ebp
ffffffff80111c7d:	31 d2                	xor    edx,edx
ffffffff80111c7f:	48 85 c0             	test   rax,rax
ffffffff80111c82:	75 1c                	jne    ffffffff80111ca0 <FindFreePageRange.part.0+0x120>
ffffffff80111c84:	41 bf 00 01 00 00    	mov    r15d,0x100
ffffffff80111c8a:	45 31 db             	xor    r11d,r11d
ffffffff80111c8d:	45 31 d2             	xor    r10d,r10d
ffffffff80111c90:	45 31 c9             	xor    r9d,r9d
ffffffff80111c93:	bd 00 00 00 08       	mov    ebp,0x8000000
ffffffff80111c98:	eb a8                	jmp    ffffffff80111c42 <FindFreePageRange.part.0+0xc2>
ffffffff80111c9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80111ca0:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80111ca6:	48 8b 5c 24 30       	mov    rbx,QWORD PTR [rsp+0x30]
ffffffff80111cab:	48 83 c8 03          	or     rax,0x3
ffffffff80111caf:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
ffffffff80111cb4:	48 3b 43 08          	cmp    rax,QWORD PTR [rbx+0x8]
ffffffff80111cb8:	74 0e                	je     ffffffff80111cc8 <FindFreePageRange.part.0+0x148>
ffffffff80111cba:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
ffffffff80111cbe:	48 8b 05 03 44 00 00 	mov    rax,QWORD PTR [rip+0x4403]        # ffffffff801160c8 <current_pml4>
ffffffff80111cc5:	0f 22 d8             	mov    cr3,rax
ffffffff80111cc8:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
ffffffff80111ccd:	48 05 00 10 00 00    	add    rax,0x1000
ffffffff80111cd3:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
ffffffff80111cd8:	49 39 ec             	cmp    r12,rbp
ffffffff80111cdb:	0f 86 df 01 00 00    	jbe    ffffffff80111ec0 <FindFreePageRange.part.0+0x340>
ffffffff80111ce1:	48 8b 05 e0 43 00 00 	mov    rax,QWORD PTR [rip+0x43e0]        # ffffffff801160c8 <current_pml4>
ffffffff80111ce8:	48 8b 5c 24 30       	mov    rbx,QWORD PTR [rsp+0x30]
ffffffff80111ced:	31 ff                	xor    edi,edi
ffffffff80111cef:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
ffffffff80111cf4:	eb 57                	jmp    ffffffff80111d4d <FindFreePageRange.part.0+0x1cd>
ffffffff80111cf6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff80111d00:	84 d2                	test   dl,dl
ffffffff80111d02:	b9 00 00 00 00       	mov    ecx,0x0
ffffffff80111d07:	ba 01 00 00 00       	mov    edx,0x1
ffffffff80111d0c:	49 0f 45 c1          	cmovne rax,r9
ffffffff80111d10:	4d 0f 44 fe          	cmove  r15,r14
ffffffff80111d14:	4c 0f 44 df          	cmove  r11,rdi
ffffffff80111d18:	4c 0f 44 d1          	cmove  r10,rcx
ffffffff80111d1c:	48 81 c5 00 00 04 00 	add    rbp,0x40000
ffffffff80111d23:	49 89 c1             	mov    r9,rax
ffffffff80111d26:	4c 39 e5             	cmp    rbp,r12
ffffffff80111d29:	40 0f 92 c6          	setb   sil
ffffffff80111d2d:	48 83 c7 01          	add    rdi,0x1
ffffffff80111d31:	48 83 44 24 08 08    	add    QWORD PTR [rsp+0x8],0x8
ffffffff80111d37:	48 81 ff ff 01 00 00 	cmp    rdi,0x1ff
ffffffff80111d3e:	0f 87 84 01 00 00    	ja     ffffffff80111ec8 <FindFreePageRange.part.0+0x348>
ffffffff80111d44:	40 84 f6             	test   sil,sil
ffffffff80111d47:	0f 84 7b 01 00 00    	je     ffffffff80111ec8 <FindFreePageRange.part.0+0x348>
ffffffff80111d4d:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
ffffffff80111d52:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffffffff80111d55:	48 85 c0             	test   rax,rax
ffffffff80111d58:	74 a6                	je     ffffffff80111d00 <FindFreePageRange.part.0+0x180>
ffffffff80111d5a:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80111d60:	48 83 c8 03          	or     rax,0x3
ffffffff80111d64:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
ffffffff80111d69:	48 3b 43 10          	cmp    rax,QWORD PTR [rbx+0x10]
ffffffff80111d6d:	74 0c                	je     ffffffff80111d7b <FindFreePageRange.part.0+0x1fb>
ffffffff80111d6f:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
ffffffff80111d73:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
ffffffff80111d78:	0f 22 d8             	mov    cr3,rax
ffffffff80111d7b:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
ffffffff80111d80:	4c 8d 80 00 20 00 00 	lea    r8,[rax+0x2000]
ffffffff80111d87:	49 39 ec             	cmp    r12,rbp
ffffffff80111d8a:	0f 86 07 01 00 00    	jbe    ffffffff80111e97 <FindFreePageRange.part.0+0x317>
ffffffff80111d90:	31 c9                	xor    ecx,ecx
ffffffff80111d92:	eb 4a                	jmp    ffffffff80111dde <FindFreePageRange.part.0+0x25e>
ffffffff80111d94:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80111d98:	84 d2                	test   dl,dl
ffffffff80111d9a:	ba 01 00 00 00       	mov    edx,0x1
ffffffff80111d9f:	49 0f 45 c1          	cmovne rax,r9
ffffffff80111da3:	4d 0f 44 fe          	cmove  r15,r14
ffffffff80111da7:	4c 0f 44 df          	cmove  r11,rdi
ffffffff80111dab:	4c 0f 44 d1          	cmove  r10,rcx
ffffffff80111daf:	48 81 c5 00 02 00 00 	add    rbp,0x200
ffffffff80111db6:	49 89 c1             	mov    r9,rax
ffffffff80111db9:	4c 39 e5             	cmp    rbp,r12
ffffffff80111dbc:	40 0f 92 c6          	setb   sil
ffffffff80111dc0:	48 83 c1 01          	add    rcx,0x1
ffffffff80111dc4:	49 83 c0 08          	add    r8,0x8
ffffffff80111dc8:	48 81 f9 ff 01 00 00 	cmp    rcx,0x1ff
ffffffff80111dcf:	0f 87 cb 00 00 00    	ja     ffffffff80111ea0 <FindFreePageRange.part.0+0x320>
ffffffff80111dd5:	40 84 f6             	test   sil,sil
ffffffff80111dd8:	0f 84 c2 00 00 00    	je     ffffffff80111ea0 <FindFreePageRange.part.0+0x320>
ffffffff80111dde:	49 8b 00             	mov    rax,QWORD PTR [r8]
ffffffff80111de1:	48 85 c0             	test   rax,rax
ffffffff80111de4:	74 b2                	je     ffffffff80111d98 <FindFreePageRange.part.0+0x218>
ffffffff80111de6:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80111dec:	48 83 c8 03          	or     rax,0x3
ffffffff80111df0:	48 3b 43 18          	cmp    rax,QWORD PTR [rbx+0x18]
ffffffff80111df4:	74 0c                	je     ffffffff80111e02 <FindFreePageRange.part.0+0x282>
ffffffff80111df6:	48 89 43 18          	mov    QWORD PTR [rbx+0x18],rax
ffffffff80111dfa:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
ffffffff80111dff:	0f 22 d8             	mov    cr3,rax
ffffffff80111e02:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
ffffffff80111e07:	4c 8d a8 00 30 00 00 	lea    r13,[rax+0x3000]
ffffffff80111e0e:	49 39 ec             	cmp    r12,rbp
ffffffff80111e11:	0f 86 49 01 00 00    	jbe    ffffffff80111f60 <FindFreePageRange.part.0+0x3e0>
ffffffff80111e17:	31 c0                	xor    eax,eax
ffffffff80111e19:	eb 3c                	jmp    ffffffff80111e57 <FindFreePageRange.part.0+0x2d7>
ffffffff80111e1b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80111e20:	84 d2                	test   dl,dl
ffffffff80111e22:	ba 01 00 00 00       	mov    edx,0x1
ffffffff80111e27:	4c 0f 44 c8          	cmove  r9,rax
ffffffff80111e2b:	4d 0f 44 fe          	cmove  r15,r14
ffffffff80111e2f:	4c 0f 44 df          	cmove  r11,rdi
ffffffff80111e33:	4c 0f 44 d1          	cmove  r10,rcx
ffffffff80111e37:	48 83 c5 01          	add    rbp,0x1
ffffffff80111e3b:	49 39 ec             	cmp    r12,rbp
ffffffff80111e3e:	40 0f 97 c6          	seta   sil
ffffffff80111e42:	48 83 c0 01          	add    rax,0x1
ffffffff80111e46:	49 83 c5 08          	add    r13,0x8
ffffffff80111e4a:	48 3d ff 01 00 00    	cmp    rax,0x1ff
ffffffff80111e50:	77 25                	ja     ffffffff80111e77 <FindFreePageRange.part.0+0x2f7>
ffffffff80111e52:	40 84 f6             	test   sil,sil
ffffffff80111e55:	74 20                	je     ffffffff80111e77 <FindFreePageRange.part.0+0x2f7>
ffffffff80111e57:	49 83 7d 00 00       	cmp    QWORD PTR [r13+0x0],0x0
ffffffff80111e5c:	74 c2                	je     ffffffff80111e20 <FindFreePageRange.part.0+0x2a0>
ffffffff80111e5e:	48 83 c0 01          	add    rax,0x1
ffffffff80111e62:	be 01 00 00 00       	mov    esi,0x1
ffffffff80111e67:	31 ed                	xor    ebp,ebp
ffffffff80111e69:	31 d2                	xor    edx,edx
ffffffff80111e6b:	49 83 c5 08          	add    r13,0x8
ffffffff80111e6f:	48 3d ff 01 00 00    	cmp    rax,0x1ff
ffffffff80111e75:	76 db                	jbe    ffffffff80111e52 <FindFreePageRange.part.0+0x2d2>
ffffffff80111e77:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
ffffffff80111e7c:	48 3b 43 10          	cmp    rax,QWORD PTR [rbx+0x10]
ffffffff80111e80:	0f 84 3a ff ff ff    	je     ffffffff80111dc0 <FindFreePageRange.part.0+0x240>
ffffffff80111e86:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
ffffffff80111e8a:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
ffffffff80111e8f:	0f 22 d8             	mov    cr3,rax
ffffffff80111e92:	e9 29 ff ff ff       	jmp    ffffffff80111dc0 <FindFreePageRange.part.0+0x240>
ffffffff80111e97:	31 f6                	xor    esi,esi
ffffffff80111e99:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80111ea0:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
ffffffff80111ea5:	48 3b 43 08          	cmp    rax,QWORD PTR [rbx+0x8]
ffffffff80111ea9:	0f 84 7e fe ff ff    	je     ffffffff80111d2d <FindFreePageRange.part.0+0x1ad>
ffffffff80111eaf:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
ffffffff80111eb3:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
ffffffff80111eb8:	0f 22 d8             	mov    cr3,rax
ffffffff80111ebb:	e9 6d fe ff ff       	jmp    ffffffff80111d2d <FindFreePageRange.part.0+0x1ad>
ffffffff80111ec0:	31 f6                	xor    esi,esi
ffffffff80111ec2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80111ec8:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
ffffffff80111ecd:	48 8b 5c 24 40       	mov    rbx,QWORD PTR [rsp+0x40]
ffffffff80111ed2:	48 3b 18             	cmp    rbx,QWORD PTR [rax]
ffffffff80111ed5:	0f 84 73 fd ff ff    	je     ffffffff80111c4e <FindFreePageRange.part.0+0xce>
ffffffff80111edb:	48 89 18             	mov    QWORD PTR [rax],rbx
ffffffff80111ede:	48 8b 05 e3 41 00 00 	mov    rax,QWORD PTR [rip+0x41e3]        # ffffffff801160c8 <current_pml4>
ffffffff80111ee5:	0f 22 d8             	mov    cr3,rax
ffffffff80111ee8:	48 8b 05 e1 41 00 00 	mov    rax,QWORD PTR [rip+0x41e1]        # ffffffff801160d0 <temp_memory_start>
ffffffff80111eef:	49 83 c6 01          	add    r14,0x1
ffffffff80111ef3:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
ffffffff80111ef8:	4c 3b 74 24 28       	cmp    r14,QWORD PTR [rsp+0x28]
ffffffff80111efd:	0f 82 5a fd ff ff    	jb     ffffffff80111c5d <FindFreePageRange.part.0+0xdd>
ffffffff80111f03:	84 d2                	test   dl,dl
ffffffff80111f05:	0f 84 a7 00 00 00    	je     ffffffff80111fb2 <FindFreePageRange.part.0+0x432>
ffffffff80111f0b:	40 84 f6             	test   sil,sil
ffffffff80111f0e:	0f 85 9e 00 00 00    	jne    ffffffff80111fb2 <FindFreePageRange.part.0+0x432>
ffffffff80111f14:	49 c1 e3 1e          	shl    r11,0x1e
ffffffff80111f18:	4c 89 f8             	mov    rax,r15
ffffffff80111f1b:	49 c1 e2 15          	shl    r10,0x15
ffffffff80111f1f:	48 c1 e0 27          	shl    rax,0x27
ffffffff80111f23:	49 c1 e1 0c          	shl    r9,0xc
ffffffff80111f27:	49 09 c3             	or     r11,rax
ffffffff80111f2a:	4d 09 da             	or     r10,r11
ffffffff80111f2d:	4d 09 d1             	or     r9,r10
ffffffff80111f30:	49 81 ff ff 00 00 00 	cmp    r15,0xff
ffffffff80111f37:	76 0d                	jbe    ffffffff80111f46 <FindFreePageRange.part.0+0x3c6>
ffffffff80111f39:	48 b8 00 00 00 00 00 00 ff ff 	movabs rax,0xffff000000000000
ffffffff80111f43:	49 01 c1             	add    r9,rax
ffffffff80111f46:	48 83 c4 58          	add    rsp,0x58
ffffffff80111f4a:	4c 89 c8             	mov    rax,r9
ffffffff80111f4d:	5b                   	pop    rbx
ffffffff80111f4e:	5d                   	pop    rbp
ffffffff80111f4f:	41 5c                	pop    r12
ffffffff80111f51:	41 5d                	pop    r13
ffffffff80111f53:	41 5e                	pop    r14
ffffffff80111f55:	41 5f                	pop    r15
ffffffff80111f57:	c3                   	ret    
ffffffff80111f58:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80111f60:	31 f6                	xor    esi,esi
ffffffff80111f62:	e9 10 ff ff ff       	jmp    ffffffff80111e77 <FindFreePageRange.part.0+0x2f7>
ffffffff80111f67:	45 31 e4             	xor    r12d,r12d
ffffffff80111f6a:	31 ed                	xor    ebp,ebp
ffffffff80111f6c:	48 c7 c7 c1 59 11 80 	mov    rdi,0xffffffff801159c1
ffffffff80111f73:	e8 d8 f1 ff ff       	call   ffffffff80111150 <PrintString>
ffffffff80111f78:	4c 89 e7             	mov    rdi,r12
ffffffff80111f7b:	e8 60 f4 ff ff       	call   ffffffff801113e0 <PrintNumber>
ffffffff80111f80:	48 c7 c7 d4 59 11 80 	mov    rdi,0xffffffff801159d4
ffffffff80111f87:	e8 c4 f1 ff ff       	call   ffffffff80111150 <PrintString>
ffffffff80111f8c:	48 89 ef             	mov    rdi,rbp
ffffffff80111f8f:	e8 4c f4 ff ff       	call   ffffffff801113e0 <PrintNumber>
ffffffff80111f94:	48 c7 c7 e5 59 11 80 	mov    rdi,0xffffffff801159e5
ffffffff80111f9b:	e8 b0 f1 ff ff       	call   ffffffff80111150 <PrintString>
ffffffff80111fa0:	48 8b 7c 24 48       	mov    rdi,QWORD PTR [rsp+0x48]
ffffffff80111fa5:	e8 36 f4 ff ff       	call   ffffffff801113e0 <PrintNumber>
ffffffff80111faa:	41 b9 01 00 00 00    	mov    r9d,0x1
ffffffff80111fb0:	eb 94                	jmp    ffffffff80111f46 <FindFreePageRange.part.0+0x3c6>
ffffffff80111fb2:	44 0f b6 e2          	movzx  r12d,dl
ffffffff80111fb6:	eb b4                	jmp    ffffffff80111f6c <FindFreePageRange.part.0+0x3ec>
ffffffff80111fb8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

ffffffff80111fc0 <MapKernelMemoryPreVirtualMemory>:
ffffffff80111fc0:	41 57                	push   r15
ffffffff80111fc2:	49 89 f8             	mov    r8,rdi
ffffffff80111fc5:	41 56                	push   r14
ffffffff80111fc7:	49 c1 e8 27          	shr    r8,0x27
ffffffff80111fcb:	49 89 fe             	mov    r14,rdi
ffffffff80111fce:	41 55                	push   r13
ffffffff80111fd0:	41 89 d5             	mov    r13d,edx
ffffffff80111fd3:	41 81 e0 ff 01 00 00 	and    r8d,0x1ff
ffffffff80111fda:	41 54                	push   r12
ffffffff80111fdc:	49 89 fc             	mov    r12,rdi
ffffffff80111fdf:	55                   	push   rbp
ffffffff80111fe0:	48 89 f5             	mov    rbp,rsi
ffffffff80111fe3:	48 89 fe             	mov    rsi,rdi
ffffffff80111fe6:	49 c1 ec 15          	shr    r12,0x15
ffffffff80111fea:	53                   	push   rbx
ffffffff80111feb:	48 c1 ee 1e          	shr    rsi,0x1e
ffffffff80111fef:	41 81 e4 ff 01 00 00 	and    r12d,0x1ff
ffffffff80111ff6:	81 e6 ff 01 00 00    	and    esi,0x1ff
ffffffff80111ffc:	48 83 ec 18          	sub    rsp,0x18
ffffffff80112000:	48 8b 05 b9 40 00 00 	mov    rax,QWORD PTR [rip+0x40b9]        # ffffffff801160c0 <kernel_pml4>
ffffffff80112007:	48 89 c3             	mov    rbx,rax
ffffffff8011200a:	48 05 00 00 e0 3f    	add    rax,0x3fe00000
ffffffff80112010:	48 81 e3 00 00 e0 ff 	and    rbx,0xffffffffffe00000
ffffffff80112017:	48 89 da             	mov    rdx,rbx
ffffffff8011201a:	80 ca 83             	or     dl,0x83
ffffffff8011201d:	48 3b 15 d4 1f ff 7f 	cmp    rdx,QWORD PTR [rip+0x7fff1fd4]        # 103ff8 <Pd+0xff8>
ffffffff80112024:	74 0a                	je     ffffffff80112030 <MapKernelMemoryPreVirtualMemory+0x70>
ffffffff80112026:	48 89 15 cb 1f ff 7f 	mov    QWORD PTR [rip+0x7fff1fcb],rdx        # 103ff8 <Pd+0xff8>
ffffffff8011202d:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff80112030:	48 29 d8             	sub    rax,rbx
ffffffff80112033:	49 89 c7             	mov    r15,rax
ffffffff80112036:	49 81 f8 ff 01 00 00 	cmp    r8,0x1ff
ffffffff8011203d:	74 1f                	je     ffffffff8011205e <MapKernelMemoryPreVirtualMemory+0x9e>
ffffffff8011203f:	48 c7 c7 f0 59 11 80 	mov    rdi,0xffffffff801159f0
ffffffff80112046:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
ffffffff8011204b:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
ffffffff8011204f:	e8 fc f0 ff ff       	call   ffffffff80111150 <PrintString>
ffffffff80112054:	f4                   	hlt    
ffffffff80112055:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
ffffffff8011205a:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
ffffffff8011205e:	4b 8b 04 c7          	mov    rax,QWORD PTR [r15+r8*8]
ffffffff80112062:	48 85 c0             	test   rax,rax
ffffffff80112065:	0f 84 37 02 00 00    	je     ffffffff801122a2 <MapKernelMemoryPreVirtualMemory+0x2e2>
ffffffff8011206b:	49 89 c7             	mov    r15,rax
ffffffff8011206e:	49 81 e7 00 00 e0 ff 	and    r15,0xffffffffffe00000
ffffffff80112075:	4c 89 ff             	mov    rdi,r15
ffffffff80112078:	40 80 cf 83          	or     dil,0x83
ffffffff8011207c:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80112082:	48 39 3d 6f 1f ff 7f 	cmp    QWORD PTR [rip+0x7fff1f6f],rdi        # 103ff8 <Pd+0xff8>
ffffffff80112089:	74 0d                	je     ffffffff80112098 <MapKernelMemoryPreVirtualMemory+0xd8>
ffffffff8011208b:	48 89 3d 66 1f ff 7f 	mov    QWORD PTR [rip+0x7fff1f66],rdi        # 103ff8 <Pd+0xff8>
ffffffff80112092:	4c 89 fb             	mov    rbx,r15
ffffffff80112095:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff80112098:	4c 29 f8             	sub    rax,r15
ffffffff8011209b:	4c 8d 8c f0 00 00 e0 3f 	lea    r9,[rax+rsi*8+0x3fe00000]
ffffffff801120a3:	49 8b 01             	mov    rax,QWORD PTR [r9]
ffffffff801120a6:	48 85 c0             	test   rax,rax
ffffffff801120a9:	0f 84 6d 01 00 00    	je     ffffffff8011221c <MapKernelMemoryPreVirtualMemory+0x25c>
ffffffff801120af:	48 89 c6             	mov    rsi,rax
ffffffff801120b2:	48 81 e6 00 00 e0 ff 	and    rsi,0xffffffffffe00000
ffffffff801120b9:	49 89 f0             	mov    r8,rsi
ffffffff801120bc:	41 80 c8 83          	or     r8b,0x83
ffffffff801120c0:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff801120c6:	48 8b 15 2b 1f ff 7f 	mov    rdx,QWORD PTR [rip+0x7fff1f2b]        # 103ff8 <Pd+0xff8>
ffffffff801120cd:	48 05 00 00 e0 3f    	add    rax,0x3fe00000
ffffffff801120d3:	45 84 ed             	test   r13b,r13b
ffffffff801120d6:	0f 85 14 01 00 00    	jne    ffffffff801121f0 <MapKernelMemoryPreVirtualMemory+0x230>
ffffffff801120dc:	49 39 d0             	cmp    r8,rdx
ffffffff801120df:	74 0d                	je     ffffffff801120ee <MapKernelMemoryPreVirtualMemory+0x12e>
ffffffff801120e1:	4c 89 05 10 1f ff 7f 	mov    QWORD PTR [rip+0x7fff1f10],r8        # 103ff8 <Pd+0xff8>
ffffffff801120e8:	48 89 f3             	mov    rbx,rsi
ffffffff801120eb:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff801120ee:	48 29 f0             	sub    rax,rsi
ffffffff801120f1:	4e 8d 24 e0          	lea    r12,[rax+r12*8]
ffffffff801120f5:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
ffffffff801120f9:	48 85 c0             	test   rax,rax
ffffffff801120fc:	74 56                	je     ffffffff80112154 <MapKernelMemoryPreVirtualMemory+0x194>
ffffffff801120fe:	48 89 c7             	mov    rdi,rax
ffffffff80112101:	48 81 e7 00 00 e0 ff 	and    rdi,0xffffffffffe00000
ffffffff80112108:	49 89 f9             	mov    r9,rdi
ffffffff8011210b:	41 80 c9 83          	or     r9b,0x83
ffffffff8011210f:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80112115:	4c 39 0d dc 1e ff 7f 	cmp    QWORD PTR [rip+0x7fff1edc],r9        # 103ff8 <Pd+0xff8>
ffffffff8011211c:	74 0d                	je     ffffffff8011212b <MapKernelMemoryPreVirtualMemory+0x16b>
ffffffff8011211e:	4c 89 0d d3 1e ff 7f 	mov    QWORD PTR [rip+0x7fff1ed3],r9        # 103ff8 <Pd+0xff8>
ffffffff80112125:	48 89 fb             	mov    rbx,rdi
ffffffff80112128:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff8011212b:	49 c1 ee 0c          	shr    r14,0xc
ffffffff8011212f:	48 83 cd 03          	or     rbp,0x3
ffffffff80112133:	48 29 f8             	sub    rax,rdi
ffffffff80112136:	41 81 e6 ff 01 00 00 	and    r14d,0x1ff
ffffffff8011213d:	4a 89 ac f0 00 00 e0 3f 	mov    QWORD PTR [rax+r14*8+0x3fe00000],rbp
ffffffff80112145:	48 83 c4 18          	add    rsp,0x18
ffffffff80112149:	5b                   	pop    rbx
ffffffff8011214a:	5d                   	pop    rbp
ffffffff8011214b:	41 5c                	pop    r12
ffffffff8011214d:	41 5d                	pop    r13
ffffffff8011214f:	41 5e                	pop    r14
ffffffff80112151:	41 5f                	pop    r15
ffffffff80112153:	c3                   	ret    
ffffffff80112154:	31 c0                	xor    eax,eax
ffffffff80112156:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
ffffffff8011215b:	48 89 34 24          	mov    QWORD PTR [rsp],rsi
ffffffff8011215f:	e8 6c d3 ff ff       	call   ffffffff8010f4d0 <GetPhysicalPagePreVirtualMemory>
ffffffff80112164:	48 8b 34 24          	mov    rsi,QWORD PTR [rsp]
ffffffff80112168:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
ffffffff8011216d:	48 89 c7             	mov    rdi,rax
ffffffff80112170:	48 89 c1             	mov    rcx,rax
ffffffff80112173:	48 8d 80 00 00 e0 3f 	lea    rax,[rax+0x3fe00000]
ffffffff8011217a:	48 81 e7 00 00 e0 ff 	and    rdi,0xffffffffffe00000
ffffffff80112181:	49 89 f9             	mov    r9,rdi
ffffffff80112184:	41 80 c9 83          	or     r9b,0x83
ffffffff80112188:	4c 3b 0d 69 1e ff 7f 	cmp    r9,QWORD PTR [rip+0x7fff1e69]        # 103ff8 <Pd+0xff8>
ffffffff8011218f:	74 0d                	je     ffffffff8011219e <MapKernelMemoryPreVirtualMemory+0x1de>
ffffffff80112191:	4c 89 0d 60 1e ff 7f 	mov    QWORD PTR [rip+0x7fff1e60],r9        # 103ff8 <Pd+0xff8>
ffffffff80112198:	48 89 fb             	mov    rbx,rdi
ffffffff8011219b:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff8011219e:	48 29 f8             	sub    rax,rdi
ffffffff801121a1:	48 8d 90 00 10 00 00 	lea    rdx,[rax+0x1000]
ffffffff801121a8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff801121b0:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
ffffffff801121b7:	48 83 c0 08          	add    rax,0x8
ffffffff801121bb:	48 39 c2             	cmp    rdx,rax
ffffffff801121be:	75 f0                	jne    ffffffff801121b0 <MapKernelMemoryPreVirtualMemory+0x1f0>
ffffffff801121c0:	4c 39 05 31 1e ff 7f 	cmp    QWORD PTR [rip+0x7fff1e31],r8        # 103ff8 <Pd+0xff8>
ffffffff801121c7:	74 0d                	je     ffffffff801121d6 <MapKernelMemoryPreVirtualMemory+0x216>
ffffffff801121c9:	4c 89 05 28 1e ff 7f 	mov    QWORD PTR [rip+0x7fff1e28],r8        # 103ff8 <Pd+0xff8>
ffffffff801121d0:	48 89 f3             	mov    rbx,rsi
ffffffff801121d3:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff801121d6:	48 89 c8             	mov    rax,rcx
ffffffff801121d9:	48 83 c8 01          	or     rax,0x1
ffffffff801121dd:	49 89 04 24          	mov    QWORD PTR [r12],rax
ffffffff801121e1:	e9 29 ff ff ff       	jmp    ffffffff8011210f <MapKernelMemoryPreVirtualMemory+0x14f>
ffffffff801121e6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff801121f0:	49 39 d0             	cmp    r8,rdx
ffffffff801121f3:	74 0d                	je     ffffffff80112202 <MapKernelMemoryPreVirtualMemory+0x242>
ffffffff801121f5:	4c 89 05 fc 1d ff 7f 	mov    QWORD PTR [rip+0x7fff1dfc],r8        # 103ff8 <Pd+0xff8>
ffffffff801121fc:	48 89 f3             	mov    rbx,rsi
ffffffff801121ff:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff80112202:	48 83 cd 01          	or     rbp,0x1
ffffffff80112206:	48 29 f0             	sub    rax,rsi
ffffffff80112209:	4a 89 2c e0          	mov    QWORD PTR [rax+r12*8],rbp
ffffffff8011220d:	48 83 c4 18          	add    rsp,0x18
ffffffff80112211:	5b                   	pop    rbx
ffffffff80112212:	5d                   	pop    rbp
ffffffff80112213:	41 5c                	pop    r12
ffffffff80112215:	41 5d                	pop    r13
ffffffff80112217:	41 5e                	pop    r14
ffffffff80112219:	41 5f                	pop    r15
ffffffff8011221b:	c3                   	ret    
ffffffff8011221c:	31 c0                	xor    eax,eax
ffffffff8011221e:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
ffffffff80112223:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
ffffffff80112227:	e8 a4 d2 ff ff       	call   ffffffff8010f4d0 <GetPhysicalPagePreVirtualMemory>
ffffffff8011222c:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
ffffffff80112230:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
ffffffff80112235:	48 89 c6             	mov    rsi,rax
ffffffff80112238:	48 8d 90 00 00 e0 3f 	lea    rdx,[rax+0x3fe00000]
ffffffff8011223f:	48 81 e6 00 00 e0 ff 	and    rsi,0xffffffffffe00000
ffffffff80112246:	49 89 f0             	mov    r8,rsi
ffffffff80112249:	41 80 c8 83          	or     r8b,0x83
ffffffff8011224d:	4c 3b 05 a4 1d ff 7f 	cmp    r8,QWORD PTR [rip+0x7fff1da4]        # 103ff8 <Pd+0xff8>
ffffffff80112254:	74 0d                	je     ffffffff80112263 <MapKernelMemoryPreVirtualMemory+0x2a3>
ffffffff80112256:	4c 89 05 9b 1d ff 7f 	mov    QWORD PTR [rip+0x7fff1d9b],r8        # 103ff8 <Pd+0xff8>
ffffffff8011225d:	48 89 f3             	mov    rbx,rsi
ffffffff80112260:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff80112263:	48 29 f2             	sub    rdx,rsi
ffffffff80112266:	48 8d 8a 00 10 00 00 	lea    rcx,[rdx+0x1000]
ffffffff8011226d:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80112270:	48 c7 02 00 00 00 00 	mov    QWORD PTR [rdx],0x0
ffffffff80112277:	48 83 c2 08          	add    rdx,0x8
ffffffff8011227b:	48 39 d1             	cmp    rcx,rdx
ffffffff8011227e:	75 f0                	jne    ffffffff80112270 <MapKernelMemoryPreVirtualMemory+0x2b0>
ffffffff80112280:	48 39 3d 71 1d ff 7f 	cmp    QWORD PTR [rip+0x7fff1d71],rdi        # 103ff8 <Pd+0xff8>
ffffffff80112287:	74 0d                	je     ffffffff80112296 <MapKernelMemoryPreVirtualMemory+0x2d6>
ffffffff80112289:	48 89 3d 68 1d ff 7f 	mov    QWORD PTR [rip+0x7fff1d68],rdi        # 103ff8 <Pd+0xff8>
ffffffff80112290:	4c 89 fb             	mov    rbx,r15
ffffffff80112293:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff80112296:	48 83 c8 01          	or     rax,0x1
ffffffff8011229a:	49 89 01             	mov    QWORD PTR [r9],rax
ffffffff8011229d:	e9 1e fe ff ff       	jmp    ffffffff801120c0 <MapKernelMemoryPreVirtualMemory+0x100>
ffffffff801122a2:	31 c0                	xor    eax,eax
ffffffff801122a4:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
ffffffff801122a9:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
ffffffff801122ad:	e8 1e d2 ff ff       	call   ffffffff8010f4d0 <GetPhysicalPagePreVirtualMemory>
ffffffff801122b2:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
ffffffff801122b6:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
ffffffff801122bb:	49 89 c7             	mov    r15,rax
ffffffff801122be:	48 8d 90 00 00 e0 3f 	lea    rdx,[rax+0x3fe00000]
ffffffff801122c5:	49 81 e7 00 00 e0 ff 	and    r15,0xffffffffffe00000
ffffffff801122cc:	4c 89 ff             	mov    rdi,r15
ffffffff801122cf:	40 80 cf 83          	or     dil,0x83
ffffffff801122d3:	48 3b 3d 1e 1d ff 7f 	cmp    rdi,QWORD PTR [rip+0x7fff1d1e]        # 103ff8 <Pd+0xff8>
ffffffff801122da:	74 0d                	je     ffffffff801122e9 <MapKernelMemoryPreVirtualMemory+0x329>
ffffffff801122dc:	48 89 3d 15 1d ff 7f 	mov    QWORD PTR [rip+0x7fff1d15],rdi        # 103ff8 <Pd+0xff8>
ffffffff801122e3:	4c 89 fb             	mov    rbx,r15
ffffffff801122e6:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff801122e9:	4c 29 fa             	sub    rdx,r15
ffffffff801122ec:	48 8d 8a 00 10 00 00 	lea    rcx,[rdx+0x1000]
ffffffff801122f3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff801122f8:	48 c7 02 00 00 00 00 	mov    QWORD PTR [rdx],0x0
ffffffff801122ff:	48 83 c2 08          	add    rdx,0x8
ffffffff80112303:	48 39 d1             	cmp    rcx,rdx
ffffffff80112306:	75 f0                	jne    ffffffff801122f8 <MapKernelMemoryPreVirtualMemory+0x338>
ffffffff80112308:	48 8b 15 b1 3d 00 00 	mov    rdx,QWORD PTR [rip+0x3db1]        # ffffffff801160c0 <kernel_pml4>
ffffffff8011230f:	48 89 d3             	mov    rbx,rdx
ffffffff80112312:	48 81 c2 00 00 e0 3f 	add    rdx,0x3fe00000
ffffffff80112319:	48 81 e3 00 00 e0 ff 	and    rbx,0xffffffffffe00000
ffffffff80112320:	48 89 d9             	mov    rcx,rbx
ffffffff80112323:	80 c9 83             	or     cl,0x83
ffffffff80112326:	48 3b 0d cb 1c ff 7f 	cmp    rcx,QWORD PTR [rip+0x7fff1ccb]        # 103ff8 <Pd+0xff8>
ffffffff8011232d:	74 0a                	je     ffffffff80112339 <MapKernelMemoryPreVirtualMemory+0x379>
ffffffff8011232f:	48 89 0d c2 1c ff 7f 	mov    QWORD PTR [rip+0x7fff1cc2],rcx        # 103ff8 <Pd+0xff8>
ffffffff80112336:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff80112339:	48 83 c8 01          	or     rax,0x1
ffffffff8011233d:	48 29 da             	sub    rdx,rbx
ffffffff80112340:	4a 89 04 c2          	mov    QWORD PTR [rdx+r8*8],rax
ffffffff80112344:	e9 33 fd ff ff       	jmp    ffffffff8011207c <MapKernelMemoryPreVirtualMemory+0xbc>
ffffffff80112349:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

ffffffff80112350 <TemporarilyMapPhysicalMemoryPreVirtualMemory>:
ffffffff80112350:	53                   	push   rbx
ffffffff80112351:	48 89 fb             	mov    rbx,rdi
ffffffff80112354:	48 8d 87 00 00 e0 3f 	lea    rax,[rdi+0x3fe00000]
ffffffff8011235b:	48 81 e3 00 00 e0 ff 	and    rbx,0xffffffffffe00000
ffffffff80112362:	48 89 da             	mov    rdx,rbx
ffffffff80112365:	80 ca 83             	or     dl,0x83
ffffffff80112368:	48 39 15 89 1c ff 7f 	cmp    QWORD PTR [rip+0x7fff1c89],rdx        # 103ff8 <Pd+0xff8>
ffffffff8011236f:	74 0a                	je     ffffffff8011237b <TemporarilyMapPhysicalMemoryPreVirtualMemory+0x2b>
ffffffff80112371:	48 89 15 80 1c ff 7f 	mov    QWORD PTR [rip+0x7fff1c80],rdx        # 103ff8 <Pd+0xff8>
ffffffff80112378:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff8011237b:	48 29 d8             	sub    rax,rbx
ffffffff8011237e:	5b                   	pop    rbx
ffffffff8011237f:	c3                   	ret    

ffffffff80112380 <TemporarilyMapPhysicalMemory>:
ffffffff80112380:	48 8b 05 51 3d 00 00 	mov    rax,QWORD PTR [rip+0x3d51]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80112387:	48 83 cf 03          	or     rdi,0x3
ffffffff8011238b:	48 8d 04 f0          	lea    rax,[rax+rsi*8]
ffffffff8011238f:	48 39 38             	cmp    QWORD PTR [rax],rdi
ffffffff80112392:	74 0d                	je     ffffffff801123a1 <TemporarilyMapPhysicalMemory+0x21>
ffffffff80112394:	48 89 38             	mov    QWORD PTR [rax],rdi
ffffffff80112397:	48 8b 05 2a 3d 00 00 	mov    rax,QWORD PTR [rip+0x3d2a]        # ffffffff801160c8 <current_pml4>
ffffffff8011239e:	0f 22 d8             	mov    cr3,rax
ffffffff801123a1:	48 8b 05 28 3d 00 00 	mov    rax,QWORD PTR [rip+0x3d28]        # ffffffff801160d0 <temp_memory_start>
ffffffff801123a8:	48 c1 e6 0c          	shl    rsi,0xc
ffffffff801123ac:	48 01 f0             	add    rax,rsi
ffffffff801123af:	c3                   	ret    

ffffffff801123b0 <FindFreePageRange>:
ffffffff801123b0:	48 b8 ff ff ff ff 07 00 00 00 	movabs rax,0x7ffffffff
ffffffff801123ba:	48 8d 56 ff          	lea    rdx,[rsi-0x1]
ffffffff801123be:	48 39 c2             	cmp    rdx,rax
ffffffff801123c1:	77 0d                	ja     ffffffff801123d0 <FindFreePageRange+0x20>
ffffffff801123c3:	e9 b8 f7 ff ff       	jmp    ffffffff80111b80 <FindFreePageRange.part.0>
ffffffff801123c8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff801123d0:	31 c0                	xor    eax,eax
ffffffff801123d2:	c3                   	ret    
ffffffff801123d3:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff801123de:	66 90                	xchg   ax,ax

ffffffff801123e0 <MapPhysicalPageToVirtualPage>:
ffffffff801123e0:	41 57                	push   r15
ffffffff801123e2:	41 89 cf             	mov    r15d,ecx
ffffffff801123e5:	41 56                	push   r14
ffffffff801123e7:	41 55                	push   r13
ffffffff801123e9:	49 89 fd             	mov    r13,rdi
ffffffff801123ec:	41 54                	push   r12
ffffffff801123ee:	49 89 d4             	mov    r12,rdx
ffffffff801123f1:	55                   	push   rbp
ffffffff801123f2:	48 89 f5             	mov    rbp,rsi
ffffffff801123f5:	53                   	push   rbx
ffffffff801123f6:	48 c1 ed 27          	shr    rbp,0x27
ffffffff801123fa:	48 89 f3             	mov    rbx,rsi
ffffffff801123fd:	81 e5 ff 01 00 00    	and    ebp,0x1ff
ffffffff80112403:	48 83 ec 48          	sub    rsp,0x48
ffffffff80112407:	48 39 3d b2 3c 00 00 	cmp    QWORD PTR [rip+0x3cb2],rdi        # ffffffff801160c0 <kernel_pml4>
ffffffff8011240e:	0f 84 7c 03 00 00    	je     ffffffff80112790 <MapPhysicalPageToVirtualPage+0x3b0>
ffffffff80112414:	48 81 fd ff 01 00 00 	cmp    rbp,0x1ff
ffffffff8011241b:	0f 84 df 01 00 00    	je     ffffffff80112600 <MapPhysicalPageToVirtualPage+0x220>
ffffffff80112421:	4c 8b 05 b0 3c 00 00 	mov    r8,QWORD PTR [rip+0x3cb0]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80112428:	4d 89 e9             	mov    r9,r13
ffffffff8011242b:	49 83 c9 03          	or     r9,0x3
ffffffff8011242f:	4d 3b 08             	cmp    r9,QWORD PTR [r8]
ffffffff80112432:	74 0d                	je     ffffffff80112441 <MapPhysicalPageToVirtualPage+0x61>
ffffffff80112434:	4d 89 08             	mov    QWORD PTR [r8],r9
ffffffff80112437:	48 8b 05 8a 3c 00 00 	mov    rax,QWORD PTR [rip+0x3c8a]        # ffffffff801160c8 <current_pml4>
ffffffff8011243e:	0f 22 d8             	mov    cr3,rax
ffffffff80112441:	48 8b 35 88 3c 00 00 	mov    rsi,QWORD PTR [rip+0x3c88]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112448:	c6 04 24 00          	mov    BYTE PTR [rsp],0x0
ffffffff8011244c:	48 8b 0c ee          	mov    rcx,QWORD PTR [rsi+rbp*8]
ffffffff80112450:	48 85 c9             	test   rcx,rcx
ffffffff80112453:	0f 84 bf 01 00 00    	je     ffffffff80112618 <MapPhysicalPageToVirtualPage+0x238>
ffffffff80112459:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
ffffffff80112460:	49 89 ca             	mov    r10,rcx
ffffffff80112463:	48 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],rcx
ffffffff80112468:	49 83 ca 03          	or     r10,0x3
ffffffff8011246c:	4d 3b 50 08          	cmp    r10,QWORD PTR [r8+0x8]
ffffffff80112470:	74 0e                	je     ffffffff80112480 <MapPhysicalPageToVirtualPage+0xa0>
ffffffff80112472:	4d 89 50 08          	mov    QWORD PTR [r8+0x8],r10
ffffffff80112476:	48 8b 05 4b 3c 00 00 	mov    rax,QWORD PTR [rip+0x3c4b]        # ffffffff801160c8 <current_pml4>
ffffffff8011247d:	0f 22 d8             	mov    cr3,rax
ffffffff80112480:	48 89 da             	mov    rdx,rbx
ffffffff80112483:	c6 44 24 08 00       	mov    BYTE PTR [rsp+0x8],0x0
ffffffff80112488:	48 c1 ea 1e          	shr    rdx,0x1e
ffffffff8011248c:	81 e2 ff 01 00 00    	and    edx,0x1ff
ffffffff80112492:	4c 8d 1c d5 00 00 00 00 	lea    r11,[rdx*8+0x0]
ffffffff8011249a:	4d 8b b4 33 00 10 00 00 	mov    r14,QWORD PTR [r11+rsi*1+0x1000]
ffffffff801124a2:	4d 85 f6             	test   r14,r14
ffffffff801124a5:	0f 84 15 02 00 00    	je     ffffffff801126c0 <MapPhysicalPageToVirtualPage+0x2e0>
ffffffff801124ab:	49 81 e6 00 f0 ff ff 	and    r14,0xfffffffffffff000
ffffffff801124b2:	4c 89 f7             	mov    rdi,r14
ffffffff801124b5:	48 83 cf 03          	or     rdi,0x3
ffffffff801124b9:	49 3b 78 10          	cmp    rdi,QWORD PTR [r8+0x10]
ffffffff801124bd:	74 0e                	je     ffffffff801124cd <MapPhysicalPageToVirtualPage+0xed>
ffffffff801124bf:	49 89 78 10          	mov    QWORD PTR [r8+0x10],rdi
ffffffff801124c3:	48 8b 05 fe 3b 00 00 	mov    rax,QWORD PTR [rip+0x3bfe]        # ffffffff801160c8 <current_pml4>
ffffffff801124ca:	0f 22 d8             	mov    cr3,rax
ffffffff801124cd:	48 89 d9             	mov    rcx,rbx
ffffffff801124d0:	48 c1 e9 15          	shr    rcx,0x15
ffffffff801124d4:	81 e1 ff 01 00 00    	and    ecx,0x1ff
ffffffff801124da:	48 8b 94 ce 00 20 00 00 	mov    rdx,QWORD PTR [rsi+rcx*8+0x2000]
ffffffff801124e2:	48 85 d2             	test   rdx,rdx
ffffffff801124e5:	0f 84 bd 02 00 00    	je     ffffffff801127a8 <MapPhysicalPageToVirtualPage+0x3c8>
ffffffff801124eb:	48 81 e2 00 f0 ff ff 	and    rdx,0xfffffffffffff000
ffffffff801124f2:	48 83 ca 03          	or     rdx,0x3
ffffffff801124f6:	49 3b 50 18          	cmp    rdx,QWORD PTR [r8+0x18]
ffffffff801124fa:	74 0e                	je     ffffffff8011250a <MapPhysicalPageToVirtualPage+0x12a>
ffffffff801124fc:	49 89 50 18          	mov    QWORD PTR [r8+0x18],rdx
ffffffff80112500:	48 8b 05 c1 3b 00 00 	mov    rax,QWORD PTR [rip+0x3bc1]        # ffffffff801160c8 <current_pml4>
ffffffff80112507:	0f 22 d8             	mov    cr3,rax
ffffffff8011250a:	48 89 d8             	mov    rax,rbx
ffffffff8011250d:	48 c1 e8 09          	shr    rax,0x9
ffffffff80112511:	25 f8 0f 00 00       	and    eax,0xff8
ffffffff80112516:	48 8d 8c 06 00 30 00 00 	lea    rcx,[rsi+rax*1+0x3000]
ffffffff8011251e:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
ffffffff80112522:	0f 85 d8 00 00 00    	jne    ffffffff80112600 <MapPhysicalPageToVirtualPage+0x220>
ffffffff80112528:	4c 89 e0             	mov    rax,r12
ffffffff8011252b:	48 81 fd ff 01 00 00 	cmp    rbp,0x1ff
ffffffff80112532:	0f 84 3e 03 00 00    	je     ffffffff80112876 <MapPhysicalPageToVirtualPage+0x496>
ffffffff80112538:	48 0d 04 02 00 00    	or     rax,0x204
ffffffff8011253e:	49 83 cc 04          	or     r12,0x4
ffffffff80112542:	45 84 ff             	test   r15b,r15b
ffffffff80112545:	49 0f 44 c4          	cmove  rax,r12
ffffffff80112549:	48 83 c8 03          	or     rax,0x3
ffffffff8011254d:	48 89 01             	mov    QWORD PTR [rcx],rax
ffffffff80112550:	4c 39 2d 71 3b 00 00 	cmp    QWORD PTR [rip+0x3b71],r13        # ffffffff801160c8 <current_pml4>
ffffffff80112557:	b8 01 00 00 00       	mov    eax,0x1
ffffffff8011255c:	0f 85 a0 00 00 00    	jne    ffffffff80112602 <MapPhysicalPageToVirtualPage+0x222>
ffffffff80112562:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff80112565:	48 83 c4 48          	add    rsp,0x48
ffffffff80112569:	b8 01 00 00 00       	mov    eax,0x1
ffffffff8011256e:	5b                   	pop    rbx
ffffffff8011256f:	5d                   	pop    rbp
ffffffff80112570:	41 5c                	pop    r12
ffffffff80112572:	41 5d                	pop    r13
ffffffff80112574:	41 5e                	pop    r14
ffffffff80112576:	41 5f                	pop    r15
ffffffff80112578:	c3                   	ret    
ffffffff80112579:	80 7c 24 08 00       	cmp    BYTE PTR [rsp+0x8],0x0
ffffffff8011257e:	74 41                	je     ffffffff801125c1 <MapPhysicalPageToVirtualPage+0x1e1>
ffffffff80112580:	48 8b 05 51 3b 00 00 	mov    rax,QWORD PTR [rip+0x3b51]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80112587:	4c 3b 50 08          	cmp    r10,QWORD PTR [rax+0x8]
ffffffff8011258b:	74 0e                	je     ffffffff8011259b <MapPhysicalPageToVirtualPage+0x1bb>
ffffffff8011258d:	4c 89 50 08          	mov    QWORD PTR [rax+0x8],r10
ffffffff80112591:	48 8b 05 30 3b 00 00 	mov    rax,QWORD PTR [rip+0x3b30]        # ffffffff801160c8 <current_pml4>
ffffffff80112598:	0f 22 d8             	mov    cr3,rax
ffffffff8011259b:	48 8b 05 2e 3b 00 00 	mov    rax,QWORD PTR [rip+0x3b2e]        # ffffffff801160d0 <temp_memory_start>
ffffffff801125a2:	48 8b 5c 24 10       	mov    rbx,QWORD PTR [rsp+0x10]
ffffffff801125a7:	4c 89 f7             	mov    rdi,r14
ffffffff801125aa:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
ffffffff801125af:	49 89 9c 03 00 10 00 00 	mov    QWORD PTR [r11+rax*1+0x1000],rbx
ffffffff801125b7:	e8 a4 cf ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff801125bc:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
ffffffff801125c1:	80 3c 24 00          	cmp    BYTE PTR [rsp],0x0
ffffffff801125c5:	74 39                	je     ffffffff80112600 <MapPhysicalPageToVirtualPage+0x220>
ffffffff801125c7:	48 8b 05 0a 3b 00 00 	mov    rax,QWORD PTR [rip+0x3b0a]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff801125ce:	4c 3b 08             	cmp    r9,QWORD PTR [rax]
ffffffff801125d1:	74 0d                	je     ffffffff801125e0 <MapPhysicalPageToVirtualPage+0x200>
ffffffff801125d3:	4c 89 08             	mov    QWORD PTR [rax],r9
ffffffff801125d6:	48 8b 05 eb 3a 00 00 	mov    rax,QWORD PTR [rip+0x3aeb]        # ffffffff801160c8 <current_pml4>
ffffffff801125dd:	0f 22 d8             	mov    cr3,rax
ffffffff801125e0:	48 8b 05 e9 3a 00 00 	mov    rax,QWORD PTR [rip+0x3ae9]        # ffffffff801160d0 <temp_memory_start>
ffffffff801125e7:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
ffffffff801125ec:	48 c7 04 e8 00 00 00 00 	mov    QWORD PTR [rax+rbp*8],0x0
ffffffff801125f4:	e8 67 cf ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff801125f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80112600:	31 c0                	xor    eax,eax
ffffffff80112602:	48 83 c4 48          	add    rsp,0x48
ffffffff80112606:	5b                   	pop    rbx
ffffffff80112607:	5d                   	pop    rbp
ffffffff80112608:	41 5c                	pop    r12
ffffffff8011260a:	41 5d                	pop    r13
ffffffff8011260c:	41 5e                	pop    r14
ffffffff8011260e:	41 5f                	pop    r15
ffffffff80112610:	c3                   	ret    
ffffffff80112611:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80112618:	31 c0                	xor    eax,eax
ffffffff8011261a:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
ffffffff8011261e:	e8 dd ce ff ff       	call   ffffffff8010f500 <GetPhysicalPage>
ffffffff80112623:	48 89 c6             	mov    rsi,rax
ffffffff80112626:	48 83 f8 01          	cmp    rax,0x1
ffffffff8011262a:	74 d4                	je     ffffffff80112600 <MapPhysicalPageToVirtualPage+0x220>
ffffffff8011262c:	4c 8b 05 a5 3a 00 00 	mov    r8,QWORD PTR [rip+0x3aa5]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80112633:	48 89 c1             	mov    rcx,rax
ffffffff80112636:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
ffffffff8011263a:	48 83 c9 03          	or     rcx,0x3
ffffffff8011263e:	49 3b 48 08          	cmp    rcx,QWORD PTR [r8+0x8]
ffffffff80112642:	74 0e                	je     ffffffff80112652 <MapPhysicalPageToVirtualPage+0x272>
ffffffff80112644:	49 89 48 08          	mov    QWORD PTR [r8+0x8],rcx
ffffffff80112648:	48 8b 05 79 3a 00 00 	mov    rax,QWORD PTR [rip+0x3a79]        # ffffffff801160c8 <current_pml4>
ffffffff8011264f:	0f 22 d8             	mov    cr3,rax
ffffffff80112652:	48 8b 15 77 3a 00 00 	mov    rdx,QWORD PTR [rip+0x3a77]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112659:	48 8d 82 00 10 00 00 	lea    rax,[rdx+0x1000]
ffffffff80112660:	48 81 c2 00 20 00 00 	add    rdx,0x2000
ffffffff80112667:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80112670:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
ffffffff80112677:	48 83 c0 08          	add    rax,0x8
ffffffff8011267b:	48 39 c2             	cmp    rdx,rax
ffffffff8011267e:	75 f0                	jne    ffffffff80112670 <MapPhysicalPageToVirtualPage+0x290>
ffffffff80112680:	4d 3b 08             	cmp    r9,QWORD PTR [r8]
ffffffff80112683:	74 0d                	je     ffffffff80112692 <MapPhysicalPageToVirtualPage+0x2b2>
ffffffff80112685:	4d 89 08             	mov    QWORD PTR [r8],r9
ffffffff80112688:	48 8b 05 39 3a 00 00 	mov    rax,QWORD PTR [rip+0x3a39]        # ffffffff801160c8 <current_pml4>
ffffffff8011268f:	0f 22 d8             	mov    cr3,rax
ffffffff80112692:	48 83 ce 07          	or     rsi,0x7
ffffffff80112696:	48 81 fd ff 01 00 00 	cmp    rbp,0x1ff
ffffffff8011269d:	48 8b 05 2c 3a 00 00 	mov    rax,QWORD PTR [rip+0x3a2c]        # ffffffff801160d0 <temp_memory_start>
ffffffff801126a4:	c6 04 24 01          	mov    BYTE PTR [rsp],0x1
ffffffff801126a8:	48 0f 45 ce          	cmovne rcx,rsi
ffffffff801126ac:	48 89 0c e8          	mov    QWORD PTR [rax+rbp*8],rcx
ffffffff801126b0:	48 8b 35 19 3a 00 00 	mov    rsi,QWORD PTR [rip+0x3a19]        # ffffffff801160d0 <temp_memory_start>
ffffffff801126b7:	e9 9d fd ff ff       	jmp    ffffffff80112459 <MapPhysicalPageToVirtualPage+0x79>
ffffffff801126bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff801126c0:	31 c0                	xor    eax,eax
ffffffff801126c2:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
ffffffff801126c7:	4c 89 54 24 20       	mov    QWORD PTR [rsp+0x20],r10
ffffffff801126cc:	4c 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],r9
ffffffff801126d1:	4c 89 5c 24 08       	mov    QWORD PTR [rsp+0x8],r11
ffffffff801126d6:	e8 25 ce ff ff       	call   ffffffff8010f500 <GetPhysicalPage>
ffffffff801126db:	4c 8b 5c 24 08       	mov    r11,QWORD PTR [rsp+0x8]
ffffffff801126e0:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
ffffffff801126e5:	48 83 f8 01          	cmp    rax,0x1
ffffffff801126e9:	4c 8b 54 24 20       	mov    r10,QWORD PTR [rsp+0x20]
ffffffff801126ee:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
ffffffff801126f3:	48 89 c1             	mov    rcx,rax
ffffffff801126f6:	0f 84 c5 fe ff ff    	je     ffffffff801125c1 <MapPhysicalPageToVirtualPage+0x1e1>
ffffffff801126fc:	4c 8b 05 d5 39 00 00 	mov    r8,QWORD PTR [rip+0x39d5]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80112703:	49 89 c6             	mov    r14,rax
ffffffff80112706:	49 83 ce 03          	or     r14,0x3
ffffffff8011270a:	4d 3b 70 10          	cmp    r14,QWORD PTR [r8+0x10]
ffffffff8011270e:	74 0e                	je     ffffffff8011271e <MapPhysicalPageToVirtualPage+0x33e>
ffffffff80112710:	4d 89 70 10          	mov    QWORD PTR [r8+0x10],r14
ffffffff80112714:	48 8b 05 ad 39 00 00 	mov    rax,QWORD PTR [rip+0x39ad]        # ffffffff801160c8 <current_pml4>
ffffffff8011271b:	0f 22 d8             	mov    cr3,rax
ffffffff8011271e:	48 8b 35 ab 39 00 00 	mov    rsi,QWORD PTR [rip+0x39ab]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112725:	48 8d 86 00 20 00 00 	lea    rax,[rsi+0x2000]
ffffffff8011272c:	48 81 c6 00 30 00 00 	add    rsi,0x3000
ffffffff80112733:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80112738:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
ffffffff8011273f:	48 83 c0 08          	add    rax,0x8
ffffffff80112743:	48 39 c6             	cmp    rsi,rax
ffffffff80112746:	75 f0                	jne    ffffffff80112738 <MapPhysicalPageToVirtualPage+0x358>
ffffffff80112748:	4d 3b 50 08          	cmp    r10,QWORD PTR [r8+0x8]
ffffffff8011274c:	74 0e                	je     ffffffff8011275c <MapPhysicalPageToVirtualPage+0x37c>
ffffffff8011274e:	4d 89 50 08          	mov    QWORD PTR [r8+0x8],r10
ffffffff80112752:	48 8b 05 6f 39 00 00 	mov    rax,QWORD PTR [rip+0x396f]        # ffffffff801160c8 <current_pml4>
ffffffff80112759:	0f 22 d8             	mov    cr3,rax
ffffffff8011275c:	48 83 c9 07          	or     rcx,0x7
ffffffff80112760:	48 81 fd ff 01 00 00 	cmp    rbp,0x1ff
ffffffff80112767:	48 8b 05 62 39 00 00 	mov    rax,QWORD PTR [rip+0x3962]        # ffffffff801160d0 <temp_memory_start>
ffffffff8011276e:	c6 44 24 08 01       	mov    BYTE PTR [rsp+0x8],0x1
ffffffff80112773:	4c 0f 45 f1          	cmovne r14,rcx
ffffffff80112777:	4c 89 b4 d0 00 10 00 00 	mov    QWORD PTR [rax+rdx*8+0x1000],r14
ffffffff8011277f:	48 8b 35 4a 39 00 00 	mov    rsi,QWORD PTR [rip+0x394a]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112786:	e9 20 fd ff ff       	jmp    ffffffff801124ab <MapPhysicalPageToVirtualPage+0xcb>
ffffffff8011278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80112790:	48 81 fd ff 01 00 00 	cmp    rbp,0x1ff
ffffffff80112797:	0f 84 84 fc ff ff    	je     ffffffff80112421 <MapPhysicalPageToVirtualPage+0x41>
ffffffff8011279d:	e9 5e fe ff ff       	jmp    ffffffff80112600 <MapPhysicalPageToVirtualPage+0x220>
ffffffff801127a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff801127a8:	31 c0                	xor    eax,eax
ffffffff801127aa:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
ffffffff801127af:	48 89 7c 24 30       	mov    QWORD PTR [rsp+0x30],rdi
ffffffff801127b4:	4c 89 54 24 28       	mov    QWORD PTR [rsp+0x28],r10
ffffffff801127b9:	4c 89 4c 24 20       	mov    QWORD PTR [rsp+0x20],r9
ffffffff801127be:	4c 89 5c 24 18       	mov    QWORD PTR [rsp+0x18],r11
ffffffff801127c3:	e8 38 cd ff ff       	call   ffffffff8010f500 <GetPhysicalPage>
ffffffff801127c8:	4c 8b 5c 24 18       	mov    r11,QWORD PTR [rsp+0x18]
ffffffff801127cd:	4c 8b 4c 24 20       	mov    r9,QWORD PTR [rsp+0x20]
ffffffff801127d2:	48 83 f8 01          	cmp    rax,0x1
ffffffff801127d6:	4c 8b 54 24 28       	mov    r10,QWORD PTR [rsp+0x28]
ffffffff801127db:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
ffffffff801127e0:	48 89 c6             	mov    rsi,rax
ffffffff801127e3:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
ffffffff801127e8:	0f 84 8b fd ff ff    	je     ffffffff80112579 <MapPhysicalPageToVirtualPage+0x199>
ffffffff801127ee:	4c 8b 05 e3 38 00 00 	mov    r8,QWORD PTR [rip+0x38e3]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff801127f5:	48 89 c2             	mov    rdx,rax
ffffffff801127f8:	48 83 ca 03          	or     rdx,0x3
ffffffff801127fc:	49 3b 50 18          	cmp    rdx,QWORD PTR [r8+0x18]
ffffffff80112800:	74 0e                	je     ffffffff80112810 <MapPhysicalPageToVirtualPage+0x430>
ffffffff80112802:	49 89 50 18          	mov    QWORD PTR [r8+0x18],rdx
ffffffff80112806:	48 8b 05 bb 38 00 00 	mov    rax,QWORD PTR [rip+0x38bb]        # ffffffff801160c8 <current_pml4>
ffffffff8011280d:	0f 22 d8             	mov    cr3,rax
ffffffff80112810:	4c 8b 0d b9 38 00 00 	mov    r9,QWORD PTR [rip+0x38b9]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112817:	49 8d 81 00 30 00 00 	lea    rax,[r9+0x3000]
ffffffff8011281e:	49 81 c1 00 40 00 00 	add    r9,0x4000
ffffffff80112825:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80112828:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
ffffffff8011282f:	48 83 c0 08          	add    rax,0x8
ffffffff80112833:	4c 39 c8             	cmp    rax,r9
ffffffff80112836:	75 f0                	jne    ffffffff80112828 <MapPhysicalPageToVirtualPage+0x448>
ffffffff80112838:	49 3b 78 10          	cmp    rdi,QWORD PTR [r8+0x10]
ffffffff8011283c:	74 0e                	je     ffffffff8011284c <MapPhysicalPageToVirtualPage+0x46c>
ffffffff8011283e:	49 89 78 10          	mov    QWORD PTR [r8+0x10],rdi
ffffffff80112842:	48 8b 05 7f 38 00 00 	mov    rax,QWORD PTR [rip+0x387f]        # ffffffff801160c8 <current_pml4>
ffffffff80112849:	0f 22 d8             	mov    cr3,rax
ffffffff8011284c:	48 83 ce 07          	or     rsi,0x7
ffffffff80112850:	48 81 fd ff 01 00 00 	cmp    rbp,0x1ff
ffffffff80112857:	48 8b 05 72 38 00 00 	mov    rax,QWORD PTR [rip+0x3872]        # ffffffff801160d0 <temp_memory_start>
ffffffff8011285e:	48 0f 45 d6          	cmovne rdx,rsi
ffffffff80112862:	48 89 94 c8 00 20 00 00 	mov    QWORD PTR [rax+rcx*8+0x2000],rdx
ffffffff8011286a:	48 8b 35 5f 38 00 00 	mov    rsi,QWORD PTR [rip+0x385f]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112871:	e9 75 fc ff ff       	jmp    ffffffff801124eb <MapPhysicalPageToVirtualPage+0x10b>
ffffffff80112876:	48 0d 03 02 00 00    	or     rax,0x203
ffffffff8011287c:	49 83 cc 03          	or     r12,0x3
ffffffff80112880:	45 84 ff             	test   r15b,r15b
ffffffff80112883:	49 0f 44 c4          	cmove  rax,r12
ffffffff80112887:	48 89 01             	mov    QWORD PTR [rcx],rax
ffffffff8011288a:	e9 d3 fc ff ff       	jmp    ffffffff80112562 <MapPhysicalPageToVirtualPage+0x182>
ffffffff8011288f:	90                   	nop

ffffffff80112890 <GetPhysicalAddress>:
ffffffff80112890:	48 89 f2             	mov    rdx,rsi
ffffffff80112893:	48 c1 ea 27          	shr    rdx,0x27
ffffffff80112897:	81 e2 ff 01 00 00    	and    edx,0x1ff
ffffffff8011289d:	48 39 3d 1c 38 00 00 	cmp    QWORD PTR [rip+0x381c],rdi        # ffffffff801160c0 <kernel_pml4>
ffffffff801128a4:	0f 84 f6 00 00 00    	je     ffffffff801129a0 <GetPhysicalAddress+0x110>
ffffffff801128aa:	48 81 fa ff 01 00 00 	cmp    rdx,0x1ff
ffffffff801128b1:	0f 84 f6 00 00 00    	je     ffffffff801129ad <GetPhysicalAddress+0x11d>
ffffffff801128b7:	48 8b 0d 1a 38 00 00 	mov    rcx,QWORD PTR [rip+0x381a]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff801128be:	48 83 cf 03          	or     rdi,0x3
ffffffff801128c2:	48 3b 39             	cmp    rdi,QWORD PTR [rcx]
ffffffff801128c5:	74 0d                	je     ffffffff801128d4 <GetPhysicalAddress+0x44>
ffffffff801128c7:	48 89 39             	mov    QWORD PTR [rcx],rdi
ffffffff801128ca:	48 8b 05 f7 37 00 00 	mov    rax,QWORD PTR [rip+0x37f7]        # ffffffff801160c8 <current_pml4>
ffffffff801128d1:	0f 22 d8             	mov    cr3,rax
ffffffff801128d4:	48 8b 3d f5 37 00 00 	mov    rdi,QWORD PTR [rip+0x37f5]        # ffffffff801160d0 <temp_memory_start>
ffffffff801128db:	48 8b 04 d7          	mov    rax,QWORD PTR [rdi+rdx*8]
ffffffff801128df:	48 85 c0             	test   rax,rax
ffffffff801128e2:	0f 84 c5 00 00 00    	je     ffffffff801129ad <GetPhysicalAddress+0x11d>
ffffffff801128e8:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff801128ee:	48 83 c8 03          	or     rax,0x3
ffffffff801128f2:	48 3b 41 08          	cmp    rax,QWORD PTR [rcx+0x8]
ffffffff801128f6:	74 0e                	je     ffffffff80112906 <GetPhysicalAddress+0x76>
ffffffff801128f8:	48 89 41 08          	mov    QWORD PTR [rcx+0x8],rax
ffffffff801128fc:	48 8b 05 c5 37 00 00 	mov    rax,QWORD PTR [rip+0x37c5]        # ffffffff801160c8 <current_pml4>
ffffffff80112903:	0f 22 d8             	mov    cr3,rax
ffffffff80112906:	48 89 f0             	mov    rax,rsi
ffffffff80112909:	48 c1 e8 1e          	shr    rax,0x1e
ffffffff8011290d:	25 ff 01 00 00       	and    eax,0x1ff
ffffffff80112912:	48 8b 84 c7 00 10 00 00 	mov    rax,QWORD PTR [rdi+rax*8+0x1000]
ffffffff8011291a:	48 85 c0             	test   rax,rax
ffffffff8011291d:	0f 84 8a 00 00 00    	je     ffffffff801129ad <GetPhysicalAddress+0x11d>
ffffffff80112923:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80112929:	48 83 c8 03          	or     rax,0x3
ffffffff8011292d:	48 3b 41 10          	cmp    rax,QWORD PTR [rcx+0x10]
ffffffff80112931:	74 0e                	je     ffffffff80112941 <GetPhysicalAddress+0xb1>
ffffffff80112933:	48 89 41 10          	mov    QWORD PTR [rcx+0x10],rax
ffffffff80112937:	48 8b 05 8a 37 00 00 	mov    rax,QWORD PTR [rip+0x378a]        # ffffffff801160c8 <current_pml4>
ffffffff8011293e:	0f 22 d8             	mov    cr3,rax
ffffffff80112941:	48 89 f0             	mov    rax,rsi
ffffffff80112944:	48 c1 e8 15          	shr    rax,0x15
ffffffff80112948:	25 ff 01 00 00       	and    eax,0x1ff
ffffffff8011294d:	48 8b 84 c7 00 20 00 00 	mov    rax,QWORD PTR [rdi+rax*8+0x2000]
ffffffff80112955:	48 85 c0             	test   rax,rax
ffffffff80112958:	74 53                	je     ffffffff801129ad <GetPhysicalAddress+0x11d>
ffffffff8011295a:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80112960:	48 83 c8 03          	or     rax,0x3
ffffffff80112964:	48 3b 41 18          	cmp    rax,QWORD PTR [rcx+0x18]
ffffffff80112968:	74 0e                	je     ffffffff80112978 <GetPhysicalAddress+0xe8>
ffffffff8011296a:	48 89 41 18          	mov    QWORD PTR [rcx+0x18],rax
ffffffff8011296e:	48 8b 05 53 37 00 00 	mov    rax,QWORD PTR [rip+0x3753]        # ffffffff801160c8 <current_pml4>
ffffffff80112975:	0f 22 d8             	mov    cr3,rax
ffffffff80112978:	48 c1 ee 0c          	shr    rsi,0xc
ffffffff8011297c:	81 e6 ff 01 00 00    	and    esi,0x1ff
ffffffff80112982:	48 8b 84 f7 00 30 00 00 	mov    rax,QWORD PTR [rdi+rsi*8+0x3000]
ffffffff8011298a:	48 85 c0             	test   rax,rax
ffffffff8011298d:	74 1e                	je     ffffffff801129ad <GetPhysicalAddress+0x11d>
ffffffff8011298f:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80112995:	c3                   	ret    
ffffffff80112996:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff801129a0:	48 81 fa ff 01 00 00 	cmp    rdx,0x1ff
ffffffff801129a7:	0f 84 0a ff ff ff    	je     ffffffff801128b7 <GetPhysicalAddress+0x27>
ffffffff801129ad:	b8 01 00 00 00       	mov    eax,0x1
ffffffff801129b2:	c3                   	ret    
ffffffff801129b3:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff801129be:	66 90                	xchg   ax,ax

ffffffff801129c0 <GetOrCreateVirtualPage>:
ffffffff801129c0:	48 89 f2             	mov    rdx,rsi
ffffffff801129c3:	41 55                	push   r13
ffffffff801129c5:	49 89 fd             	mov    r13,rdi
ffffffff801129c8:	48 c1 ea 27          	shr    rdx,0x27
ffffffff801129cc:	41 54                	push   r12
ffffffff801129ce:	81 e2 ff 01 00 00    	and    edx,0x1ff
ffffffff801129d4:	48 3b 3d e5 36 00 00 	cmp    rdi,QWORD PTR [rip+0x36e5]        # ffffffff801160c0 <kernel_pml4>
ffffffff801129db:	55                   	push   rbp
ffffffff801129dc:	48 89 f5             	mov    rbp,rsi
ffffffff801129df:	0f 84 fb 00 00 00    	je     ffffffff80112ae0 <GetOrCreateVirtualPage+0x120>
ffffffff801129e5:	48 81 fa ff 01 00 00 	cmp    rdx,0x1ff
ffffffff801129ec:	0f 84 fe 00 00 00    	je     ffffffff80112af0 <GetOrCreateVirtualPage+0x130>
ffffffff801129f2:	48 8b 0d df 36 00 00 	mov    rcx,QWORD PTR [rip+0x36df]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff801129f9:	4c 89 e8             	mov    rax,r13
ffffffff801129fc:	48 83 c8 03          	or     rax,0x3
ffffffff80112a00:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
ffffffff80112a03:	74 0d                	je     ffffffff80112a12 <GetOrCreateVirtualPage+0x52>
ffffffff80112a05:	48 89 01             	mov    QWORD PTR [rcx],rax
ffffffff80112a08:	48 8b 05 b9 36 00 00 	mov    rax,QWORD PTR [rip+0x36b9]        # ffffffff801160c8 <current_pml4>
ffffffff80112a0f:	0f 22 d8             	mov    cr3,rax
ffffffff80112a12:	48 8b 35 b7 36 00 00 	mov    rsi,QWORD PTR [rip+0x36b7]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112a19:	48 8b 04 d6          	mov    rax,QWORD PTR [rsi+rdx*8]
ffffffff80112a1d:	48 85 c0             	test   rax,rax
ffffffff80112a20:	0f 84 ca 00 00 00    	je     ffffffff80112af0 <GetOrCreateVirtualPage+0x130>
ffffffff80112a26:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80112a2c:	48 83 c8 03          	or     rax,0x3
ffffffff80112a30:	48 3b 41 08          	cmp    rax,QWORD PTR [rcx+0x8]
ffffffff80112a34:	74 0e                	je     ffffffff80112a44 <GetOrCreateVirtualPage+0x84>
ffffffff80112a36:	48 89 41 08          	mov    QWORD PTR [rcx+0x8],rax
ffffffff80112a3a:	48 8b 05 87 36 00 00 	mov    rax,QWORD PTR [rip+0x3687]        # ffffffff801160c8 <current_pml4>
ffffffff80112a41:	0f 22 d8             	mov    cr3,rax
ffffffff80112a44:	48 89 e8             	mov    rax,rbp
ffffffff80112a47:	48 c1 e8 1e          	shr    rax,0x1e
ffffffff80112a4b:	25 ff 01 00 00       	and    eax,0x1ff
ffffffff80112a50:	48 8b 84 c6 00 10 00 00 	mov    rax,QWORD PTR [rsi+rax*8+0x1000]
ffffffff80112a58:	48 85 c0             	test   rax,rax
ffffffff80112a5b:	0f 84 8f 00 00 00    	je     ffffffff80112af0 <GetOrCreateVirtualPage+0x130>
ffffffff80112a61:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80112a67:	48 83 c8 03          	or     rax,0x3
ffffffff80112a6b:	48 3b 41 10          	cmp    rax,QWORD PTR [rcx+0x10]
ffffffff80112a6f:	74 0e                	je     ffffffff80112a7f <GetOrCreateVirtualPage+0xbf>
ffffffff80112a71:	48 89 41 10          	mov    QWORD PTR [rcx+0x10],rax
ffffffff80112a75:	48 8b 05 4c 36 00 00 	mov    rax,QWORD PTR [rip+0x364c]        # ffffffff801160c8 <current_pml4>
ffffffff80112a7c:	0f 22 d8             	mov    cr3,rax
ffffffff80112a7f:	48 89 e8             	mov    rax,rbp
ffffffff80112a82:	48 c1 e8 15          	shr    rax,0x15
ffffffff80112a86:	25 ff 01 00 00       	and    eax,0x1ff
ffffffff80112a8b:	48 8b 84 c6 00 20 00 00 	mov    rax,QWORD PTR [rsi+rax*8+0x2000]
ffffffff80112a93:	48 85 c0             	test   rax,rax
ffffffff80112a96:	74 58                	je     ffffffff80112af0 <GetOrCreateVirtualPage+0x130>
ffffffff80112a98:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80112a9e:	48 83 c8 03          	or     rax,0x3
ffffffff80112aa2:	48 3b 41 18          	cmp    rax,QWORD PTR [rcx+0x18]
ffffffff80112aa6:	74 0e                	je     ffffffff80112ab6 <GetOrCreateVirtualPage+0xf6>
ffffffff80112aa8:	48 89 41 18          	mov    QWORD PTR [rcx+0x18],rax
ffffffff80112aac:	48 8b 05 15 36 00 00 	mov    rax,QWORD PTR [rip+0x3615]        # ffffffff801160c8 <current_pml4>
ffffffff80112ab3:	0f 22 d8             	mov    cr3,rax
ffffffff80112ab6:	48 89 e8             	mov    rax,rbp
ffffffff80112ab9:	48 c1 e8 0c          	shr    rax,0xc
ffffffff80112abd:	25 ff 01 00 00       	and    eax,0x1ff
ffffffff80112ac2:	4c 8b a4 c6 00 30 00 00 	mov    r12,QWORD PTR [rsi+rax*8+0x3000]
ffffffff80112aca:	4d 85 e4             	test   r12,r12
ffffffff80112acd:	74 21                	je     ffffffff80112af0 <GetOrCreateVirtualPage+0x130>
ffffffff80112acf:	49 81 e4 00 f0 ff ff 	and    r12,0xfffffffffffff000
ffffffff80112ad6:	4c 89 e0             	mov    rax,r12
ffffffff80112ad9:	5d                   	pop    rbp
ffffffff80112ada:	41 5c                	pop    r12
ffffffff80112adc:	41 5d                	pop    r13
ffffffff80112ade:	c3                   	ret    
ffffffff80112adf:	90                   	nop
ffffffff80112ae0:	48 81 fa ff 01 00 00 	cmp    rdx,0x1ff
ffffffff80112ae7:	0f 84 05 ff ff ff    	je     ffffffff801129f2 <GetOrCreateVirtualPage+0x32>
ffffffff80112aed:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80112af0:	31 c0                	xor    eax,eax
ffffffff80112af2:	e8 09 ca ff ff       	call   ffffffff8010f500 <GetPhysicalPage>
ffffffff80112af7:	49 89 c4             	mov    r12,rax
ffffffff80112afa:	48 83 f8 01          	cmp    rax,0x1
ffffffff80112afe:	74 d6                	je     ffffffff80112ad6 <GetOrCreateVirtualPage+0x116>
ffffffff80112b00:	b9 01 00 00 00       	mov    ecx,0x1
ffffffff80112b05:	48 89 c2             	mov    rdx,rax
ffffffff80112b08:	48 89 ee             	mov    rsi,rbp
ffffffff80112b0b:	4c 89 ef             	mov    rdi,r13
ffffffff80112b0e:	e8 cd f8 ff ff       	call   ffffffff801123e0 <MapPhysicalPageToVirtualPage>
ffffffff80112b13:	84 c0                	test   al,al
ffffffff80112b15:	75 bf                	jne    ffffffff80112ad6 <GetOrCreateVirtualPage+0x116>
ffffffff80112b17:	4c 89 e7             	mov    rdi,r12
ffffffff80112b1a:	41 bc 01 00 00 00    	mov    r12d,0x1
ffffffff80112b20:	e8 3b ca ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff80112b25:	eb af                	jmp    ffffffff80112ad6 <GetOrCreateVirtualPage+0x116>
ffffffff80112b27:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]

ffffffff80112b30 <ReleaseVirtualMemoryInAddressSpace>:
ffffffff80112b30:	49 89 fb             	mov    r11,rdi
ffffffff80112b33:	49 83 cb 03          	or     r11,0x3
ffffffff80112b37:	48 85 d2             	test   rdx,rdx
ffffffff80112b3a:	0f 84 98 03 00 00    	je     ffffffff80112ed8 <ReleaseVirtualMemoryInAddressSpace+0x3a8>
ffffffff80112b40:	41 57                	push   r15
ffffffff80112b42:	49 89 fa             	mov    r10,rdi
ffffffff80112b45:	48 89 d1             	mov    rcx,rdx
ffffffff80112b48:	41 56                	push   r14
ffffffff80112b4a:	41 55                	push   r13
ffffffff80112b4c:	41 54                	push   r12
ffffffff80112b4e:	45 31 e4             	xor    r12d,r12d
ffffffff80112b51:	55                   	push   rbp
ffffffff80112b52:	53                   	push   rbx
ffffffff80112b53:	48 89 f3             	mov    rbx,rsi
ffffffff80112b56:	48 83 ec 58          	sub    rsp,0x58
ffffffff80112b5a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80112b60:	48 89 dd             	mov    rbp,rbx
ffffffff80112b63:	48 c1 ed 27          	shr    rbp,0x27
ffffffff80112b67:	81 e5 ff 01 00 00    	and    ebp,0x1ff
ffffffff80112b6d:	4c 3b 15 4c 35 00 00 	cmp    r10,QWORD PTR [rip+0x354c]        # ffffffff801160c0 <kernel_pml4>
ffffffff80112b74:	0f 84 9e 01 00 00    	je     ffffffff80112d18 <ReleaseVirtualMemoryInAddressSpace+0x1e8>
ffffffff80112b7a:	48 81 fd ff 01 00 00 	cmp    rbp,0x1ff
ffffffff80112b81:	0f 84 49 01 00 00    	je     ffffffff80112cd0 <ReleaseVirtualMemoryInAddressSpace+0x1a0>
ffffffff80112b87:	48 8b 3d 4a 35 00 00 	mov    rdi,QWORD PTR [rip+0x354a]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80112b8e:	4c 3b 1f             	cmp    r11,QWORD PTR [rdi]
ffffffff80112b91:	74 0d                	je     ffffffff80112ba0 <ReleaseVirtualMemoryInAddressSpace+0x70>
ffffffff80112b93:	4c 89 1f             	mov    QWORD PTR [rdi],r11
ffffffff80112b96:	48 8b 05 2b 35 00 00 	mov    rax,QWORD PTR [rip+0x352b]        # ffffffff801160c8 <current_pml4>
ffffffff80112b9d:	0f 22 d8             	mov    cr3,rax
ffffffff80112ba0:	4c 8b 0d 29 35 00 00 	mov    r9,QWORD PTR [rip+0x3529]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112ba7:	4d 8b 2c e9          	mov    r13,QWORD PTR [r9+rbp*8]
ffffffff80112bab:	4d 85 ed             	test   r13,r13
ffffffff80112bae:	0f 84 1c 01 00 00    	je     ffffffff80112cd0 <ReleaseVirtualMemoryInAddressSpace+0x1a0>
ffffffff80112bb4:	49 81 e5 00 f0 ff ff 	and    r13,0xfffffffffffff000
ffffffff80112bbb:	4c 89 ea             	mov    rdx,r13
ffffffff80112bbe:	48 83 ca 03          	or     rdx,0x3
ffffffff80112bc2:	48 3b 57 08          	cmp    rdx,QWORD PTR [rdi+0x8]
ffffffff80112bc6:	74 0e                	je     ffffffff80112bd6 <ReleaseVirtualMemoryInAddressSpace+0xa6>
ffffffff80112bc8:	48 89 57 08          	mov    QWORD PTR [rdi+0x8],rdx
ffffffff80112bcc:	48 8b 05 f5 34 00 00 	mov    rax,QWORD PTR [rip+0x34f5]        # ffffffff801160c8 <current_pml4>
ffffffff80112bd3:	0f 22 d8             	mov    cr3,rax
ffffffff80112bd6:	49 89 de             	mov    r14,rbx
ffffffff80112bd9:	49 c1 ee 1e          	shr    r14,0x1e
ffffffff80112bdd:	41 81 e6 ff 01 00 00 	and    r14d,0x1ff
ffffffff80112be4:	4b 8b 84 f1 00 10 00 00 	mov    rax,QWORD PTR [r9+r14*8+0x1000]
ffffffff80112bec:	48 85 c0             	test   rax,rax
ffffffff80112bef:	0f 84 db 00 00 00    	je     ffffffff80112cd0 <ReleaseVirtualMemoryInAddressSpace+0x1a0>
ffffffff80112bf5:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80112bfb:	48 89 c6             	mov    rsi,rax
ffffffff80112bfe:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
ffffffff80112c03:	48 83 ce 03          	or     rsi,0x3
ffffffff80112c07:	48 3b 77 10          	cmp    rsi,QWORD PTR [rdi+0x10]
ffffffff80112c0b:	74 0e                	je     ffffffff80112c1b <ReleaseVirtualMemoryInAddressSpace+0xeb>
ffffffff80112c0d:	48 89 77 10          	mov    QWORD PTR [rdi+0x10],rsi
ffffffff80112c11:	48 8b 05 b0 34 00 00 	mov    rax,QWORD PTR [rip+0x34b0]        # ffffffff801160c8 <current_pml4>
ffffffff80112c18:	0f 22 d8             	mov    cr3,rax
ffffffff80112c1b:	49 89 df             	mov    r15,rbx
ffffffff80112c1e:	49 c1 ef 15          	shr    r15,0x15
ffffffff80112c22:	41 81 e7 ff 01 00 00 	and    r15d,0x1ff
ffffffff80112c29:	4b 8b 84 f9 00 20 00 00 	mov    rax,QWORD PTR [r9+r15*8+0x2000]
ffffffff80112c31:	48 85 c0             	test   rax,rax
ffffffff80112c34:	0f 84 96 00 00 00    	je     ffffffff80112cd0 <ReleaseVirtualMemoryInAddressSpace+0x1a0>
ffffffff80112c3a:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff80112c40:	49 89 c0             	mov    r8,rax
ffffffff80112c43:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
ffffffff80112c48:	49 83 c8 03          	or     r8,0x3
ffffffff80112c4c:	4c 3b 47 18          	cmp    r8,QWORD PTR [rdi+0x18]
ffffffff80112c50:	74 0e                	je     ffffffff80112c60 <ReleaseVirtualMemoryInAddressSpace+0x130>
ffffffff80112c52:	4c 89 47 18          	mov    QWORD PTR [rdi+0x18],r8
ffffffff80112c56:	48 8b 05 6b 34 00 00 	mov    rax,QWORD PTR [rip+0x346b]        # ffffffff801160c8 <current_pml4>
ffffffff80112c5d:	0f 22 d8             	mov    cr3,rax
ffffffff80112c60:	48 89 df             	mov    rdi,rbx
ffffffff80112c63:	49 8d 81 00 30 00 00 	lea    rax,[r9+0x3000]
ffffffff80112c6a:	48 c1 ef 09          	shr    rdi,0x9
ffffffff80112c6e:	81 e7 f8 0f 00 00    	and    edi,0xff8
ffffffff80112c74:	4c 8d 0c 38          	lea    r9,[rax+rdi*1]
ffffffff80112c78:	48 89 7c 24 18       	mov    QWORD PTR [rsp+0x18],rdi
ffffffff80112c7d:	49 8b 39             	mov    rdi,QWORD PTR [r9]
ffffffff80112c80:	48 85 ff             	test   rdi,rdi
ffffffff80112c83:	74 4b                	je     ffffffff80112cd0 <ReleaseVirtualMemoryInAddressSpace+0x1a0>
ffffffff80112c85:	f7 c7 00 02 00 00    	test   edi,0x200
ffffffff80112c8b:	0f 84 af 00 00 00    	je     ffffffff80112d40 <ReleaseVirtualMemoryInAddressSpace+0x210>
ffffffff80112c91:	49 c7 01 00 00 00 00 	mov    QWORD PTR [r9],0x0
ffffffff80112c98:	48 8d b8 00 10 00 00 	lea    rdi,[rax+0x1000]
ffffffff80112c9f:	eb 14                	jmp    ffffffff80112cb5 <ReleaseVirtualMemoryInAddressSpace+0x185>
ffffffff80112ca1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80112ca8:	48 83 c0 08          	add    rax,0x8
ffffffff80112cac:	48 39 c7             	cmp    rdi,rax
ffffffff80112caf:	0f 84 0b 01 00 00    	je     ffffffff80112dc0 <ReleaseVirtualMemoryInAddressSpace+0x290>
ffffffff80112cb5:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
ffffffff80112cb9:	74 ed                	je     ffffffff80112ca8 <ReleaseVirtualMemoryInAddressSpace+0x178>
ffffffff80112cbb:	4c 39 15 06 34 00 00 	cmp    QWORD PTR [rip+0x3406],r10        # ffffffff801160c8 <current_pml4>
ffffffff80112cc2:	74 34                	je     ffffffff80112cf8 <ReleaseVirtualMemoryInAddressSpace+0x1c8>
ffffffff80112cc4:	48 81 fd ff 01 00 00 	cmp    rbp,0x1ff
ffffffff80112ccb:	74 2b                	je     ffffffff80112cf8 <ReleaseVirtualMemoryInAddressSpace+0x1c8>
ffffffff80112ccd:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80112cd0:	49 83 c4 01          	add    r12,0x1
ffffffff80112cd4:	48 81 c3 00 10 00 00 	add    rbx,0x1000
ffffffff80112cdb:	4c 39 e1             	cmp    rcx,r12
ffffffff80112cde:	0f 85 7c fe ff ff    	jne    ffffffff80112b60 <ReleaseVirtualMemoryInAddressSpace+0x30>
ffffffff80112ce4:	48 83 c4 58          	add    rsp,0x58
ffffffff80112ce8:	31 c0                	xor    eax,eax
ffffffff80112cea:	5b                   	pop    rbx
ffffffff80112ceb:	5d                   	pop    rbp
ffffffff80112cec:	41 5c                	pop    r12
ffffffff80112cee:	41 5d                	pop    r13
ffffffff80112cf0:	41 5e                	pop    r14
ffffffff80112cf2:	41 5f                	pop    r15
ffffffff80112cf4:	c3                   	ret    
ffffffff80112cf5:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80112cf8:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff80112cfb:	49 83 c4 01          	add    r12,0x1
ffffffff80112cff:	48 81 c3 00 10 00 00 	add    rbx,0x1000
ffffffff80112d06:	4c 39 e1             	cmp    rcx,r12
ffffffff80112d09:	0f 85 51 fe ff ff    	jne    ffffffff80112b60 <ReleaseVirtualMemoryInAddressSpace+0x30>
ffffffff80112d0f:	eb d3                	jmp    ffffffff80112ce4 <ReleaseVirtualMemoryInAddressSpace+0x1b4>
ffffffff80112d11:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80112d18:	48 81 fd ff 01 00 00 	cmp    rbp,0x1ff
ffffffff80112d1f:	0f 84 62 fe ff ff    	je     ffffffff80112b87 <ReleaseVirtualMemoryInAddressSpace+0x57>
ffffffff80112d25:	49 83 c4 01          	add    r12,0x1
ffffffff80112d29:	48 81 c3 00 10 00 00 	add    rbx,0x1000
ffffffff80112d30:	4c 39 e1             	cmp    rcx,r12
ffffffff80112d33:	0f 85 27 fe ff ff    	jne    ffffffff80112b60 <ReleaseVirtualMemoryInAddressSpace+0x30>
ffffffff80112d39:	eb a9                	jmp    ffffffff80112ce4 <ReleaseVirtualMemoryInAddressSpace+0x1b4>
ffffffff80112d3b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80112d40:	48 81 e7 00 f0 ff ff 	and    rdi,0xfffffffffffff000
ffffffff80112d47:	4c 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],r11
ffffffff80112d4c:	48 89 4c 24 40       	mov    QWORD PTR [rsp+0x40],rcx
ffffffff80112d51:	4c 89 54 24 38       	mov    QWORD PTR [rsp+0x38],r10
ffffffff80112d56:	4c 89 44 24 30       	mov    QWORD PTR [rsp+0x30],r8
ffffffff80112d5b:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
ffffffff80112d60:	48 89 54 24 20       	mov    QWORD PTR [rsp+0x20],rdx
ffffffff80112d65:	e8 f6 c7 ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff80112d6a:	4c 8b 44 24 30       	mov    r8,QWORD PTR [rsp+0x30]
ffffffff80112d6f:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
ffffffff80112d74:	48 8b 05 5d 33 00 00 	mov    rax,QWORD PTR [rip+0x335d]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80112d7b:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
ffffffff80112d80:	4c 8b 54 24 38       	mov    r10,QWORD PTR [rsp+0x38]
ffffffff80112d85:	48 8b 4c 24 40       	mov    rcx,QWORD PTR [rsp+0x40]
ffffffff80112d8a:	4c 3b 40 18          	cmp    r8,QWORD PTR [rax+0x18]
ffffffff80112d8e:	4c 8b 5c 24 48       	mov    r11,QWORD PTR [rsp+0x48]
ffffffff80112d93:	74 0e                	je     ffffffff80112da3 <ReleaseVirtualMemoryInAddressSpace+0x273>
ffffffff80112d95:	4c 89 40 18          	mov    QWORD PTR [rax+0x18],r8
ffffffff80112d99:	48 8b 05 28 33 00 00 	mov    rax,QWORD PTR [rip+0x3328]        # ffffffff801160c8 <current_pml4>
ffffffff80112da0:	0f 22 d8             	mov    cr3,rax
ffffffff80112da3:	48 8b 05 26 33 00 00 	mov    rax,QWORD PTR [rip+0x3326]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112daa:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
ffffffff80112daf:	48 05 00 30 00 00    	add    rax,0x3000
ffffffff80112db5:	49 01 c1             	add    r9,rax
ffffffff80112db8:	e9 d4 fe ff ff       	jmp    ffffffff80112c91 <ReleaseVirtualMemoryInAddressSpace+0x161>
ffffffff80112dbd:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80112dc0:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
ffffffff80112dc5:	4c 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],r11
ffffffff80112dca:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
ffffffff80112dcf:	4c 89 54 24 28       	mov    QWORD PTR [rsp+0x28],r10
ffffffff80112dd4:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
ffffffff80112dd9:	48 89 54 24 18       	mov    QWORD PTR [rsp+0x18],rdx
ffffffff80112dde:	e8 7d c7 ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff80112de3:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
ffffffff80112de8:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
ffffffff80112ded:	48 8b 05 e4 32 00 00 	mov    rax,QWORD PTR [rip+0x32e4]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80112df4:	4c 8b 54 24 28       	mov    r10,QWORD PTR [rsp+0x28]
ffffffff80112df9:	48 8b 4c 24 30       	mov    rcx,QWORD PTR [rsp+0x30]
ffffffff80112dfe:	4c 8b 5c 24 38       	mov    r11,QWORD PTR [rsp+0x38]
ffffffff80112e03:	48 3b 70 10          	cmp    rsi,QWORD PTR [rax+0x10]
ffffffff80112e07:	74 0e                	je     ffffffff80112e17 <ReleaseVirtualMemoryInAddressSpace+0x2e7>
ffffffff80112e09:	48 89 70 10          	mov    QWORD PTR [rax+0x10],rsi
ffffffff80112e0d:	48 8b 05 b4 32 00 00 	mov    rax,QWORD PTR [rip+0x32b4]        # ffffffff801160c8 <current_pml4>
ffffffff80112e14:	0f 22 d8             	mov    cr3,rax
ffffffff80112e17:	48 8b 35 b2 32 00 00 	mov    rsi,QWORD PTR [rip+0x32b2]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112e1e:	48 8d 86 00 20 00 00 	lea    rax,[rsi+0x2000]
ffffffff80112e25:	48 81 c6 00 30 00 00 	add    rsi,0x3000
ffffffff80112e2c:	4a c7 04 f8 00 00 00 00 	mov    QWORD PTR [rax+r15*8],0x0
ffffffff80112e34:	eb 13                	jmp    ffffffff80112e49 <ReleaseVirtualMemoryInAddressSpace+0x319>
ffffffff80112e36:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff80112e40:	48 83 c0 08          	add    rax,0x8
ffffffff80112e44:	48 39 c6             	cmp    rsi,rax
ffffffff80112e47:	74 0b                	je     ffffffff80112e54 <ReleaseVirtualMemoryInAddressSpace+0x324>
ffffffff80112e49:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
ffffffff80112e4d:	74 f1                	je     ffffffff80112e40 <ReleaseVirtualMemoryInAddressSpace+0x310>
ffffffff80112e4f:	e9 67 fe ff ff       	jmp    ffffffff80112cbb <ReleaseVirtualMemoryInAddressSpace+0x18b>
ffffffff80112e54:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
ffffffff80112e59:	4c 89 5c 24 28       	mov    QWORD PTR [rsp+0x28],r11
ffffffff80112e5e:	48 89 4c 24 20       	mov    QWORD PTR [rsp+0x20],rcx
ffffffff80112e63:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
ffffffff80112e68:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
ffffffff80112e6d:	e8 ee c6 ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff80112e72:	48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
ffffffff80112e77:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
ffffffff80112e7c:	48 8b 05 55 32 00 00 	mov    rax,QWORD PTR [rip+0x3255]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80112e83:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
ffffffff80112e88:	4c 8b 5c 24 28       	mov    r11,QWORD PTR [rsp+0x28]
ffffffff80112e8d:	48 3b 50 08          	cmp    rdx,QWORD PTR [rax+0x8]
ffffffff80112e91:	74 0e                	je     ffffffff80112ea1 <ReleaseVirtualMemoryInAddressSpace+0x371>
ffffffff80112e93:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffffffff80112e97:	48 8b 05 2a 32 00 00 	mov    rax,QWORD PTR [rip+0x322a]        # ffffffff801160c8 <current_pml4>
ffffffff80112e9e:	0f 22 d8             	mov    cr3,rax
ffffffff80112ea1:	48 8b 15 28 32 00 00 	mov    rdx,QWORD PTR [rip+0x3228]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112ea8:	48 8d 82 00 10 00 00 	lea    rax,[rdx+0x1000]
ffffffff80112eaf:	48 81 c2 00 20 00 00 	add    rdx,0x2000
ffffffff80112eb6:	4a c7 04 f0 00 00 00 00 	mov    QWORD PTR [rax+r14*8],0x0
ffffffff80112ebe:	eb 09                	jmp    ffffffff80112ec9 <ReleaseVirtualMemoryInAddressSpace+0x399>
ffffffff80112ec0:	48 83 c0 08          	add    rax,0x8
ffffffff80112ec4:	48 39 c2             	cmp    rdx,rax
ffffffff80112ec7:	74 12                	je     ffffffff80112edb <ReleaseVirtualMemoryInAddressSpace+0x3ab>
ffffffff80112ec9:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
ffffffff80112ecd:	74 f1                	je     ffffffff80112ec0 <ReleaseVirtualMemoryInAddressSpace+0x390>
ffffffff80112ecf:	e9 e7 fd ff ff       	jmp    ffffffff80112cbb <ReleaseVirtualMemoryInAddressSpace+0x18b>
ffffffff80112ed4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80112ed8:	31 c0                	xor    eax,eax
ffffffff80112eda:	c3                   	ret    
ffffffff80112edb:	4c 89 ef             	mov    rdi,r13
ffffffff80112ede:	4c 89 5c 24 18       	mov    QWORD PTR [rsp+0x18],r11
ffffffff80112ee3:	48 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],rcx
ffffffff80112ee8:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
ffffffff80112eed:	e8 6e c6 ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff80112ef2:	4c 8b 5c 24 18       	mov    r11,QWORD PTR [rsp+0x18]
ffffffff80112ef7:	4c 8b 54 24 08       	mov    r10,QWORD PTR [rsp+0x8]
ffffffff80112efc:	48 8b 05 d5 31 00 00 	mov    rax,QWORD PTR [rip+0x31d5]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80112f03:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
ffffffff80112f08:	4c 3b 18             	cmp    r11,QWORD PTR [rax]
ffffffff80112f0b:	74 0d                	je     ffffffff80112f1a <ReleaseVirtualMemoryInAddressSpace+0x3ea>
ffffffff80112f0d:	4c 89 18             	mov    QWORD PTR [rax],r11
ffffffff80112f10:	48 8b 05 b1 31 00 00 	mov    rax,QWORD PTR [rip+0x31b1]        # ffffffff801160c8 <current_pml4>
ffffffff80112f17:	0f 22 d8             	mov    cr3,rax
ffffffff80112f1a:	48 8b 05 af 31 00 00 	mov    rax,QWORD PTR [rip+0x31af]        # ffffffff801160d0 <temp_memory_start>
ffffffff80112f21:	48 c7 04 e8 00 00 00 00 	mov    QWORD PTR [rax+rbp*8],0x0
ffffffff80112f29:	e9 8d fd ff ff       	jmp    ffffffff80112cbb <ReleaseVirtualMemoryInAddressSpace+0x18b>
ffffffff80112f2e:	66 90                	xchg   ax,ax

ffffffff80112f30 <MapPhysicalMemoryInAddressSpace>:
ffffffff80112f30:	48 b8 ff ff ff ff 07 00 00 00 	movabs rax,0x7ffffffff
ffffffff80112f3a:	41 56                	push   r14
ffffffff80112f3c:	41 55                	push   r13
ffffffff80112f3e:	49 89 fd             	mov    r13,rdi
ffffffff80112f41:	41 54                	push   r12
ffffffff80112f43:	49 89 f4             	mov    r12,rsi
ffffffff80112f46:	48 89 d6             	mov    rsi,rdx
ffffffff80112f49:	55                   	push   rbp
ffffffff80112f4a:	48 8d 6a ff          	lea    rbp,[rdx-0x1]
ffffffff80112f4e:	53                   	push   rbx
ffffffff80112f4f:	48 39 c5             	cmp    rbp,rax
ffffffff80112f52:	77 4c                	ja     ffffffff80112fa0 <MapPhysicalMemoryInAddressSpace+0x70>
ffffffff80112f54:	e8 27 ec ff ff       	call   ffffffff80111b80 <FindFreePageRange.part.0>
ffffffff80112f59:	49 89 c6             	mov    r14,rax
ffffffff80112f5c:	48 83 f8 01          	cmp    rax,0x1
ffffffff80112f60:	74 2f                	je     ffffffff80112f91 <MapPhysicalMemoryInAddressSpace+0x61>
ffffffff80112f62:	4c 89 f3             	mov    rbx,r14
ffffffff80112f65:	4d 29 f4             	sub    r12,r14
ffffffff80112f68:	eb 0a                	jmp    ffffffff80112f74 <MapPhysicalMemoryInAddressSpace+0x44>
ffffffff80112f6a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80112f70:	48 83 ed 01          	sub    rbp,0x1
ffffffff80112f74:	49 8d 14 1c          	lea    rdx,[r12+rbx*1]
ffffffff80112f78:	48 89 de             	mov    rsi,rbx
ffffffff80112f7b:	31 c9                	xor    ecx,ecx
ffffffff80112f7d:	4c 89 ef             	mov    rdi,r13
ffffffff80112f80:	e8 5b f4 ff ff       	call   ffffffff801123e0 <MapPhysicalPageToVirtualPage>
ffffffff80112f85:	48 81 c3 00 10 00 00 	add    rbx,0x1000
ffffffff80112f8c:	48 85 ed             	test   rbp,rbp
ffffffff80112f8f:	75 df                	jne    ffffffff80112f70 <MapPhysicalMemoryInAddressSpace+0x40>
ffffffff80112f91:	5b                   	pop    rbx
ffffffff80112f92:	4c 89 f0             	mov    rax,r14
ffffffff80112f95:	5d                   	pop    rbp
ffffffff80112f96:	41 5c                	pop    r12
ffffffff80112f98:	41 5d                	pop    r13
ffffffff80112f9a:	41 5e                	pop    r14
ffffffff80112f9c:	c3                   	ret    
ffffffff80112f9d:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80112fa0:	45 31 f6             	xor    r14d,r14d
ffffffff80112fa3:	48 85 d2             	test   rdx,rdx
ffffffff80112fa6:	75 ba                	jne    ffffffff80112f62 <MapPhysicalMemoryInAddressSpace+0x32>
ffffffff80112fa8:	eb e7                	jmp    ffffffff80112f91 <MapPhysicalMemoryInAddressSpace+0x61>
ffffffff80112faa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

ffffffff80112fb0 <UnmapVirtualPage>:
ffffffff80112fb0:	41 57                	push   r15
ffffffff80112fb2:	41 56                	push   r14
ffffffff80112fb4:	41 55                	push   r13
ffffffff80112fb6:	41 54                	push   r12
ffffffff80112fb8:	49 89 f4             	mov    r12,rsi
ffffffff80112fbb:	55                   	push   rbp
ffffffff80112fbc:	49 c1 ec 27          	shr    r12,0x27
ffffffff80112fc0:	48 89 fd             	mov    rbp,rdi
ffffffff80112fc3:	53                   	push   rbx
ffffffff80112fc4:	41 81 e4 ff 01 00 00 	and    r12d,0x1ff
ffffffff80112fcb:	48 89 f3             	mov    rbx,rsi
ffffffff80112fce:	48 83 ec 48          	sub    rsp,0x48
ffffffff80112fd2:	48 39 3d e7 30 00 00 	cmp    QWORD PTR [rip+0x30e7],rdi        # ffffffff801160c0 <kernel_pml4>
ffffffff80112fd9:	0f 84 69 01 00 00    	je     ffffffff80113148 <UnmapVirtualPage+0x198>
ffffffff80112fdf:	49 81 fc ff 01 00 00 	cmp    r12,0x1ff
ffffffff80112fe6:	0f 84 49 01 00 00    	je     ffffffff80113135 <UnmapVirtualPage+0x185>
ffffffff80112fec:	48 8b 3d e5 30 00 00 	mov    rdi,QWORD PTR [rip+0x30e5]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80112ff3:	49 89 ee             	mov    r14,rbp
ffffffff80112ff6:	49 83 ce 03          	or     r14,0x3
ffffffff80112ffa:	4c 3b 37             	cmp    r14,QWORD PTR [rdi]
ffffffff80112ffd:	74 0d                	je     ffffffff8011300c <UnmapVirtualPage+0x5c>
ffffffff80112fff:	4c 89 37             	mov    QWORD PTR [rdi],r14
ffffffff80113002:	48 8b 05 bf 30 00 00 	mov    rax,QWORD PTR [rip+0x30bf]        # ffffffff801160c8 <current_pml4>
ffffffff80113009:	0f 22 d8             	mov    cr3,rax
ffffffff8011300c:	48 8b 0d bd 30 00 00 	mov    rcx,QWORD PTR [rip+0x30bd]        # ffffffff801160d0 <temp_memory_start>
ffffffff80113013:	4e 8b 2c e1          	mov    r13,QWORD PTR [rcx+r12*8]
ffffffff80113017:	4d 85 ed             	test   r13,r13
ffffffff8011301a:	0f 84 15 01 00 00    	je     ffffffff80113135 <UnmapVirtualPage+0x185>
ffffffff80113020:	49 81 e5 00 f0 ff ff 	and    r13,0xfffffffffffff000
ffffffff80113027:	4d 89 e9             	mov    r9,r13
ffffffff8011302a:	49 83 c9 03          	or     r9,0x3
ffffffff8011302e:	4c 3b 4f 08          	cmp    r9,QWORD PTR [rdi+0x8]
ffffffff80113032:	74 0e                	je     ffffffff80113042 <UnmapVirtualPage+0x92>
ffffffff80113034:	4c 89 4f 08          	mov    QWORD PTR [rdi+0x8],r9
ffffffff80113038:	48 8b 05 89 30 00 00 	mov    rax,QWORD PTR [rip+0x3089]        # ffffffff801160c8 <current_pml4>
ffffffff8011303f:	0f 22 d8             	mov    cr3,rax
ffffffff80113042:	49 89 df             	mov    r15,rbx
ffffffff80113045:	49 c1 ef 1e          	shr    r15,0x1e
ffffffff80113049:	41 81 e7 ff 01 00 00 	and    r15d,0x1ff
ffffffff80113050:	4e 8b 84 f9 00 10 00 00 	mov    r8,QWORD PTR [rcx+r15*8+0x1000]
ffffffff80113058:	4d 85 c0             	test   r8,r8
ffffffff8011305b:	0f 84 d4 00 00 00    	je     ffffffff80113135 <UnmapVirtualPage+0x185>
ffffffff80113061:	49 81 e0 00 f0 ff ff 	and    r8,0xfffffffffffff000
ffffffff80113068:	4d 89 c2             	mov    r10,r8
ffffffff8011306b:	49 83 ca 03          	or     r10,0x3
ffffffff8011306f:	4c 3b 57 10          	cmp    r10,QWORD PTR [rdi+0x10]
ffffffff80113073:	74 0e                	je     ffffffff80113083 <UnmapVirtualPage+0xd3>
ffffffff80113075:	4c 89 57 10          	mov    QWORD PTR [rdi+0x10],r10
ffffffff80113079:	48 8b 05 48 30 00 00 	mov    rax,QWORD PTR [rip+0x3048]        # ffffffff801160c8 <current_pml4>
ffffffff80113080:	0f 22 d8             	mov    cr3,rax
ffffffff80113083:	48 89 de             	mov    rsi,rbx
ffffffff80113086:	48 c1 ee 15          	shr    rsi,0x15
ffffffff8011308a:	81 e6 ff 01 00 00    	and    esi,0x1ff
ffffffff80113090:	48 8b 84 f1 00 20 00 00 	mov    rax,QWORD PTR [rcx+rsi*8+0x2000]
ffffffff80113098:	48 85 c0             	test   rax,rax
ffffffff8011309b:	0f 84 94 00 00 00    	je     ffffffff80113135 <UnmapVirtualPage+0x185>
ffffffff801130a1:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff801130a7:	49 89 c3             	mov    r11,rax
ffffffff801130aa:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
ffffffff801130af:	49 83 cb 03          	or     r11,0x3
ffffffff801130b3:	4c 3b 5f 18          	cmp    r11,QWORD PTR [rdi+0x18]
ffffffff801130b7:	74 0e                	je     ffffffff801130c7 <UnmapVirtualPage+0x117>
ffffffff801130b9:	4c 89 5f 18          	mov    QWORD PTR [rdi+0x18],r11
ffffffff801130bd:	48 8b 05 04 30 00 00 	mov    rax,QWORD PTR [rip+0x3004]        # ffffffff801160c8 <current_pml4>
ffffffff801130c4:	0f 22 d8             	mov    cr3,rax
ffffffff801130c7:	48 89 d8             	mov    rax,rbx
ffffffff801130ca:	48 81 c1 00 30 00 00 	add    rcx,0x3000
ffffffff801130d1:	48 c1 e8 09          	shr    rax,0x9
ffffffff801130d5:	25 f8 0f 00 00       	and    eax,0xff8
ffffffff801130da:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
ffffffff801130df:	48 01 c8             	add    rax,rcx
ffffffff801130e2:	48 8b 38             	mov    rdi,QWORD PTR [rax]
ffffffff801130e5:	48 85 ff             	test   rdi,rdi
ffffffff801130e8:	74 4b                	je     ffffffff80113135 <UnmapVirtualPage+0x185>
ffffffff801130ea:	84 d2                	test   dl,dl
ffffffff801130ec:	74 08                	je     ffffffff801130f6 <UnmapVirtualPage+0x146>
ffffffff801130ee:	f7 c7 00 02 00 00    	test   edi,0x200
ffffffff801130f4:	74 7a                	je     ffffffff80113170 <UnmapVirtualPage+0x1c0>
ffffffff801130f6:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
ffffffff801130fd:	48 8d 81 00 10 00 00 	lea    rax,[rcx+0x1000]
ffffffff80113104:	eb 17                	jmp    ffffffff8011311d <UnmapVirtualPage+0x16d>
ffffffff80113106:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ffffffff80113110:	48 83 c1 08          	add    rcx,0x8
ffffffff80113114:	48 39 c8             	cmp    rax,rcx
ffffffff80113117:	0f 84 cb 00 00 00    	je     ffffffff801131e8 <UnmapVirtualPage+0x238>
ffffffff8011311d:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
ffffffff80113121:	74 ed                	je     ffffffff80113110 <UnmapVirtualPage+0x160>
ffffffff80113123:	48 39 2d 9e 2f 00 00 	cmp    QWORD PTR [rip+0x2f9e],rbp        # ffffffff801160c8 <current_pml4>
ffffffff8011312a:	74 3c                	je     ffffffff80113168 <UnmapVirtualPage+0x1b8>
ffffffff8011312c:	49 81 fc ff 01 00 00 	cmp    r12,0x1ff
ffffffff80113133:	74 33                	je     ffffffff80113168 <UnmapVirtualPage+0x1b8>
ffffffff80113135:	48 83 c4 48          	add    rsp,0x48
ffffffff80113139:	5b                   	pop    rbx
ffffffff8011313a:	5d                   	pop    rbp
ffffffff8011313b:	41 5c                	pop    r12
ffffffff8011313d:	41 5d                	pop    r13
ffffffff8011313f:	41 5e                	pop    r14
ffffffff80113141:	41 5f                	pop    r15
ffffffff80113143:	c3                   	ret    
ffffffff80113144:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80113148:	49 81 fc ff 01 00 00 	cmp    r12,0x1ff
ffffffff8011314f:	0f 84 97 fe ff ff    	je     ffffffff80112fec <UnmapVirtualPage+0x3c>
ffffffff80113155:	48 83 c4 48          	add    rsp,0x48
ffffffff80113159:	5b                   	pop    rbx
ffffffff8011315a:	5d                   	pop    rbp
ffffffff8011315b:	41 5c                	pop    r12
ffffffff8011315d:	41 5d                	pop    r13
ffffffff8011315f:	41 5e                	pop    r14
ffffffff80113161:	41 5f                	pop    r15
ffffffff80113163:	c3                   	ret    
ffffffff80113164:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80113168:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff8011316b:	eb c8                	jmp    ffffffff80113135 <UnmapVirtualPage+0x185>
ffffffff8011316d:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80113170:	48 81 e7 00 f0 ff ff 	and    rdi,0xfffffffffffff000
ffffffff80113177:	48 89 74 24 38       	mov    QWORD PTR [rsp+0x38],rsi
ffffffff8011317c:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
ffffffff80113181:	4c 89 54 24 28       	mov    QWORD PTR [rsp+0x28],r10
ffffffff80113186:	4c 89 4c 24 20       	mov    QWORD PTR [rsp+0x20],r9
ffffffff8011318b:	4c 89 44 24 18       	mov    QWORD PTR [rsp+0x18],r8
ffffffff80113190:	e8 cb c3 ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff80113195:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
ffffffff8011319a:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
ffffffff8011319f:	48 8b 05 32 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f32]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff801131a6:	4c 8b 4c 24 20       	mov    r9,QWORD PTR [rsp+0x20]
ffffffff801131ab:	4c 8b 54 24 28       	mov    r10,QWORD PTR [rsp+0x28]
ffffffff801131b0:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
ffffffff801131b5:	4c 3b 58 18          	cmp    r11,QWORD PTR [rax+0x18]
ffffffff801131b9:	74 0e                	je     ffffffff801131c9 <UnmapVirtualPage+0x219>
ffffffff801131bb:	4c 89 58 18          	mov    QWORD PTR [rax+0x18],r11
ffffffff801131bf:	48 8b 05 02 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f02]        # ffffffff801160c8 <current_pml4>
ffffffff801131c6:	0f 22 d8             	mov    cr3,rax
ffffffff801131c9:	48 8b 05 00 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f00]        # ffffffff801160d0 <temp_memory_start>
ffffffff801131d0:	48 8d 88 00 30 00 00 	lea    rcx,[rax+0x3000]
ffffffff801131d7:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
ffffffff801131dc:	48 01 c8             	add    rax,rcx
ffffffff801131df:	e9 12 ff ff ff       	jmp    ffffffff801130f6 <UnmapVirtualPage+0x146>
ffffffff801131e4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff801131e8:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
ffffffff801131ed:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
ffffffff801131f2:	4c 89 54 24 20       	mov    QWORD PTR [rsp+0x20],r10
ffffffff801131f7:	4c 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],r9
ffffffff801131fc:	4c 89 44 24 10       	mov    QWORD PTR [rsp+0x10],r8
ffffffff80113201:	e8 5a c3 ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff80113206:	4c 8b 54 24 20       	mov    r10,QWORD PTR [rsp+0x20]
ffffffff8011320b:	4c 8b 44 24 10       	mov    r8,QWORD PTR [rsp+0x10]
ffffffff80113210:	48 8b 05 c1 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ec1]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80113217:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
ffffffff8011321c:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
ffffffff80113221:	4c 3b 50 10          	cmp    r10,QWORD PTR [rax+0x10]
ffffffff80113225:	74 0e                	je     ffffffff80113235 <UnmapVirtualPage+0x285>
ffffffff80113227:	4c 89 50 10          	mov    QWORD PTR [rax+0x10],r10
ffffffff8011322b:	48 8b 05 96 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e96]        # ffffffff801160c8 <current_pml4>
ffffffff80113232:	0f 22 d8             	mov    cr3,rax
ffffffff80113235:	48 8b 15 94 2e 00 00 	mov    rdx,QWORD PTR [rip+0x2e94]        # ffffffff801160d0 <temp_memory_start>
ffffffff8011323c:	48 8d 82 00 20 00 00 	lea    rax,[rdx+0x2000]
ffffffff80113243:	48 81 c2 00 30 00 00 	add    rdx,0x3000
ffffffff8011324a:	48 c7 04 f0 00 00 00 00 	mov    QWORD PTR [rax+rsi*8],0x0
ffffffff80113252:	eb 0d                	jmp    ffffffff80113261 <UnmapVirtualPage+0x2b1>
ffffffff80113254:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ffffffff80113258:	48 83 c0 08          	add    rax,0x8
ffffffff8011325c:	48 39 c2             	cmp    rdx,rax
ffffffff8011325f:	74 0b                	je     ffffffff8011326c <UnmapVirtualPage+0x2bc>
ffffffff80113261:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
ffffffff80113265:	74 f1                	je     ffffffff80113258 <UnmapVirtualPage+0x2a8>
ffffffff80113267:	e9 b7 fe ff ff       	jmp    ffffffff80113123 <UnmapVirtualPage+0x173>
ffffffff8011326c:	4c 89 c7             	mov    rdi,r8
ffffffff8011326f:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
ffffffff80113274:	e8 e7 c2 ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff80113279:	48 8b 05 58 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e58]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80113280:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
ffffffff80113285:	4c 3b 48 08          	cmp    r9,QWORD PTR [rax+0x8]
ffffffff80113289:	74 0e                	je     ffffffff80113299 <UnmapVirtualPage+0x2e9>
ffffffff8011328b:	4c 89 48 08          	mov    QWORD PTR [rax+0x8],r9
ffffffff8011328f:	48 8b 05 32 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e32]        # ffffffff801160c8 <current_pml4>
ffffffff80113296:	0f 22 d8             	mov    cr3,rax
ffffffff80113299:	48 8b 15 30 2e 00 00 	mov    rdx,QWORD PTR [rip+0x2e30]        # ffffffff801160d0 <temp_memory_start>
ffffffff801132a0:	48 8d 82 00 10 00 00 	lea    rax,[rdx+0x1000]
ffffffff801132a7:	48 81 c2 00 20 00 00 	add    rdx,0x2000
ffffffff801132ae:	4a c7 04 f8 00 00 00 00 	mov    QWORD PTR [rax+r15*8],0x0
ffffffff801132b6:	eb 11                	jmp    ffffffff801132c9 <UnmapVirtualPage+0x319>
ffffffff801132b8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff801132c0:	48 83 c0 08          	add    rax,0x8
ffffffff801132c4:	48 39 c2             	cmp    rdx,rax
ffffffff801132c7:	74 0b                	je     ffffffff801132d4 <UnmapVirtualPage+0x324>
ffffffff801132c9:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
ffffffff801132cd:	74 f1                	je     ffffffff801132c0 <UnmapVirtualPage+0x310>
ffffffff801132cf:	e9 4f fe ff ff       	jmp    ffffffff80113123 <UnmapVirtualPage+0x173>
ffffffff801132d4:	4c 89 ef             	mov    rdi,r13
ffffffff801132d7:	e8 84 c2 ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff801132dc:	48 8b 05 f5 2d 00 00 	mov    rax,QWORD PTR [rip+0x2df5]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff801132e3:	4c 3b 30             	cmp    r14,QWORD PTR [rax]
ffffffff801132e6:	74 0d                	je     ffffffff801132f5 <UnmapVirtualPage+0x345>
ffffffff801132e8:	4c 89 30             	mov    QWORD PTR [rax],r14
ffffffff801132eb:	48 8b 05 d6 2d 00 00 	mov    rax,QWORD PTR [rip+0x2dd6]        # ffffffff801160c8 <current_pml4>
ffffffff801132f2:	0f 22 d8             	mov    cr3,rax
ffffffff801132f5:	48 8b 05 d4 2d 00 00 	mov    rax,QWORD PTR [rip+0x2dd4]        # ffffffff801160d0 <temp_memory_start>
ffffffff801132fc:	4a c7 04 e0 00 00 00 00 	mov    QWORD PTR [rax+r12*8],0x0
ffffffff80113304:	e9 1a fe ff ff       	jmp    ffffffff80113123 <UnmapVirtualPage+0x173>
ffffffff80113309:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

ffffffff80113310 <InitializeVirtualAllocator>:
ffffffff80113310:	41 54                	push   r12
ffffffff80113312:	31 c0                	xor    eax,eax
ffffffff80113314:	55                   	push   rbp
ffffffff80113315:	53                   	push   rbx
ffffffff80113316:	e8 b5 c1 ff ff       	call   ffffffff8010f4d0 <GetPhysicalPagePreVirtualMemory>
ffffffff8011331b:	48 89 c3             	mov    rbx,rax
ffffffff8011331e:	48 89 05 9b 2d 00 00 	mov    QWORD PTR [rip+0x2d9b],rax        # ffffffff801160c0 <kernel_pml4>
ffffffff80113325:	48 05 00 00 e0 3f    	add    rax,0x3fe00000
ffffffff8011332b:	48 81 e3 00 00 e0 ff 	and    rbx,0xffffffffffe00000
ffffffff80113332:	48 89 da             	mov    rdx,rbx
ffffffff80113335:	80 ca 83             	or     dl,0x83
ffffffff80113338:	48 3b 15 b9 0c ff 7f 	cmp    rdx,QWORD PTR [rip+0x7fff0cb9]        # 103ff8 <Pd+0xff8>
ffffffff8011333f:	74 0a                	je     ffffffff8011334b <InitializeVirtualAllocator+0x3b>
ffffffff80113341:	48 89 15 b0 0c ff 7f 	mov    QWORD PTR [rip+0x7fff0cb0],rdx        # 103ff8 <Pd+0xff8>
ffffffff80113348:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff8011334b:	48 29 d8             	sub    rax,rbx
ffffffff8011334e:	48 8d 90 00 10 00 00 	lea    rdx,[rax+0x1000]
ffffffff80113355:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80113358:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
ffffffff8011335f:	48 83 c0 08          	add    rax,0x8
ffffffff80113363:	48 39 c2             	cmp    rdx,rax
ffffffff80113366:	75 f0                	jne    ffffffff80113358 <InitializeVirtualAllocator+0x48>
ffffffff80113368:	48 8b 05 f1 2c 00 00 	mov    rax,QWORD PTR [rip+0x2cf1]        # ffffffff80116060 <start_of_free_memory_at_boot>
ffffffff8011336f:	4c 8d a0 ff 0f 00 00 	lea    r12,[rax+0xfff]
ffffffff80113376:	49 81 e4 00 f0 ff ff 	and    r12,0xfffffffffffff000
ffffffff8011337d:	0f 84 30 01 00 00    	je     ffffffff801134b3 <InitializeVirtualAllocator+0x1a3>
ffffffff80113383:	31 ed                	xor    ebp,ebp
ffffffff80113385:	0f 1f 00             	nop    DWORD PTR [rax]
ffffffff80113388:	48 8d bd 00 00 00 80 	lea    rdi,[rbp-0x80000000]
ffffffff8011338f:	48 89 ee             	mov    rsi,rbp
ffffffff80113392:	31 d2                	xor    edx,edx
ffffffff80113394:	e8 27 ec ff ff       	call   ffffffff80111fc0 <MapKernelMemoryPreVirtualMemory>
ffffffff80113399:	48 89 e8             	mov    rax,rbp
ffffffff8011339c:	48 81 c5 00 10 00 00 	add    rbp,0x1000
ffffffff801133a3:	49 39 ec             	cmp    r12,rbp
ffffffff801133a6:	77 e0                	ja     ffffffff80113388 <InitializeVirtualAllocator+0x78>
ffffffff801133a8:	4c 8d a0 00 20 20 80 	lea    r12,[rax-0x7fdfe000]
ffffffff801133af:	48 8d 90 00 10 00 80 	lea    rdx,[rax-0x7ffff000]
ffffffff801133b6:	49 81 e4 00 00 e0 ff 	and    r12,0xffffffffffe00000
ffffffff801133bd:	31 c0                	xor    eax,eax
ffffffff801133bf:	48 89 15 12 2d 00 00 	mov    QWORD PTR [rip+0x2d12],rdx        # ffffffff801160d8 <temp_memory_page_table>
ffffffff801133c6:	e8 05 c1 ff ff       	call   ffffffff8010f4d0 <GetPhysicalPagePreVirtualMemory>
ffffffff801133cb:	48 8b 3d 06 2d 00 00 	mov    rdi,QWORD PTR [rip+0x2d06]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff801133d2:	31 d2                	xor    edx,edx
ffffffff801133d4:	48 89 c5             	mov    rbp,rax
ffffffff801133d7:	48 89 c6             	mov    rsi,rax
ffffffff801133da:	e8 e1 eb ff ff       	call   ffffffff80111fc0 <MapKernelMemoryPreVirtualMemory>
ffffffff801133df:	48 89 eb             	mov    rbx,rbp
ffffffff801133e2:	ba 01 00 00 00       	mov    edx,0x1
ffffffff801133e7:	48 89 ee             	mov    rsi,rbp
ffffffff801133ea:	48 81 e3 00 00 e0 ff 	and    rbx,0xffffffffffe00000
ffffffff801133f1:	4c 89 e7             	mov    rdi,r12
ffffffff801133f4:	4c 89 25 d5 2c 00 00 	mov    QWORD PTR [rip+0x2cd5],r12        # ffffffff801160d0 <temp_memory_start>
ffffffff801133fb:	e8 c0 eb ff ff       	call   ffffffff80111fc0 <MapKernelMemoryPreVirtualMemory>
ffffffff80113400:	48 89 da             	mov    rdx,rbx
ffffffff80113403:	48 8d 85 00 00 e0 3f 	lea    rax,[rbp+0x3fe00000]
ffffffff8011340a:	80 ca 83             	or     dl,0x83
ffffffff8011340d:	48 3b 15 e4 0b ff 7f 	cmp    rdx,QWORD PTR [rip+0x7fff0be4]        # 103ff8 <Pd+0xff8>
ffffffff80113414:	74 0a                	je     ffffffff80113420 <InitializeVirtualAllocator+0x110>
ffffffff80113416:	48 89 15 db 0b ff 7f 	mov    QWORD PTR [rip+0x7fff0bdb],rdx        # 103ff8 <Pd+0xff8>
ffffffff8011341d:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff80113420:	48 29 d8             	sub    rax,rbx
ffffffff80113423:	48 8d 90 00 10 00 00 	lea    rdx,[rax+0x1000]
ffffffff8011342a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80113430:	48 c7 00 01 00 00 00 	mov    QWORD PTR [rax],0x1
ffffffff80113437:	48 83 c0 08          	add    rax,0x8
ffffffff8011343b:	48 39 c2             	cmp    rdx,rax
ffffffff8011343e:	75 f0                	jne    ffffffff80113430 <InitializeVirtualAllocator+0x120>
ffffffff80113440:	48 8b 3d 79 2c 00 00 	mov    rdi,QWORD PTR [rip+0x2c79]        # ffffffff801160c0 <kernel_pml4>
ffffffff80113447:	48 c7 05 76 2c 00 00 01 00 00 00 	mov    QWORD PTR [rip+0x2c76],0x1        # ffffffff801160c8 <current_pml4>
ffffffff80113452:	48 83 ff 01          	cmp    rdi,0x1
ffffffff80113456:	74 0d                	je     ffffffff80113465 <InitializeVirtualAllocator+0x155>
ffffffff80113458:	48 89 3d 69 2c 00 00 	mov    QWORD PTR [rip+0x2c69],rdi        # ffffffff801160c8 <current_pml4>
ffffffff8011345f:	48 89 fb             	mov    rbx,rdi
ffffffff80113462:	0f 22 db             	mov    cr3,rbx
ffffffff80113465:	48 be 00 10 10 80 ff ff ff ff 	movabs rsi,0xffffffff80101000
ffffffff8011346f:	ba 01 00 00 00       	mov    edx,0x1
ffffffff80113474:	e8 37 fb ff ff       	call   ffffffff80112fb0 <UnmapVirtualPage>
ffffffff80113479:	48 8b 3d 40 2c 00 00 	mov    rdi,QWORD PTR [rip+0x2c40]        # ffffffff801160c0 <kernel_pml4>
ffffffff80113480:	ba 01 00 00 00       	mov    edx,0x1
ffffffff80113485:	48 be 00 20 10 80 ff ff ff ff 	movabs rsi,0xffffffff80102000
ffffffff8011348f:	e8 1c fb ff ff       	call   ffffffff80112fb0 <UnmapVirtualPage>
ffffffff80113494:	48 8b 3d 25 2c 00 00 	mov    rdi,QWORD PTR [rip+0x2c25]        # ffffffff801160c0 <kernel_pml4>
ffffffff8011349b:	5b                   	pop    rbx
ffffffff8011349c:	ba 01 00 00 00       	mov    edx,0x1
ffffffff801134a1:	48 be 00 30 10 80 ff ff ff ff 	movabs rsi,0xffffffff80103000
ffffffff801134ab:	5d                   	pop    rbp
ffffffff801134ac:	41 5c                	pop    r12
ffffffff801134ae:	e9 fd fa ff ff       	jmp    ffffffff80112fb0 <UnmapVirtualPage>
ffffffff801134b3:	49 c7 c4 00 00 20 80 	mov    r12,0xffffffff80200000
ffffffff801134ba:	48 c7 c2 00 00 00 80 	mov    rdx,0xffffffff80000000
ffffffff801134c1:	e9 f7 fe ff ff       	jmp    ffffffff801133bd <InitializeVirtualAllocator+0xad>
ffffffff801134c6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]

ffffffff801134d0 <AllocateVirtualMemoryInAddressSpace>:
ffffffff801134d0:	48 b8 ff ff ff ff 07 00 00 00 	movabs rax,0x7ffffffff
ffffffff801134da:	48 8d 56 ff          	lea    rdx,[rsi-0x1]
ffffffff801134de:	41 56                	push   r14
ffffffff801134e0:	49 89 f6             	mov    r14,rsi
ffffffff801134e3:	41 55                	push   r13
ffffffff801134e5:	41 54                	push   r12
ffffffff801134e7:	49 89 fc             	mov    r12,rdi
ffffffff801134ea:	55                   	push   rbp
ffffffff801134eb:	53                   	push   rbx
ffffffff801134ec:	48 39 c2             	cmp    rdx,rax
ffffffff801134ef:	0f 87 93 00 00 00    	ja     ffffffff80113588 <AllocateVirtualMemoryInAddressSpace+0xb8>
ffffffff801134f5:	e8 86 e6 ff ff       	call   ffffffff80111b80 <FindFreePageRange.part.0>
ffffffff801134fa:	49 89 c5             	mov    r13,rax
ffffffff801134fd:	48 83 f8 01          	cmp    rax,0x1
ffffffff80113501:	74 71                	je     ffffffff80113574 <AllocateVirtualMemoryInAddressSpace+0xa4>
ffffffff80113503:	4c 89 eb             	mov    rbx,r13
ffffffff80113506:	31 ed                	xor    ebp,ebp
ffffffff80113508:	eb 32                	jmp    ffffffff8011353c <AllocateVirtualMemoryInAddressSpace+0x6c>
ffffffff8011350a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff80113510:	b9 01 00 00 00       	mov    ecx,0x1
ffffffff80113515:	48 89 de             	mov    rsi,rbx
ffffffff80113518:	4c 89 e7             	mov    rdi,r12
ffffffff8011351b:	e8 c0 ee ff ff       	call   ffffffff801123e0 <MapPhysicalPageToVirtualPage>
ffffffff80113520:	4c 39 25 a1 2b 00 00 	cmp    QWORD PTR [rip+0x2ba1],r12        # ffffffff801160c8 <current_pml4>
ffffffff80113527:	75 03                	jne    ffffffff8011352c <AllocateVirtualMemoryInAddressSpace+0x5c>
ffffffff80113529:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff8011352c:	48 83 c5 01          	add    rbp,0x1
ffffffff80113530:	48 81 c3 00 10 00 00 	add    rbx,0x1000
ffffffff80113537:	49 39 ee             	cmp    r14,rbp
ffffffff8011353a:	76 3b                	jbe    ffffffff80113577 <AllocateVirtualMemoryInAddressSpace+0xa7>
ffffffff8011353c:	31 c0                	xor    eax,eax
ffffffff8011353e:	e8 bd bf ff ff       	call   ffffffff8010f500 <GetPhysicalPage>
ffffffff80113543:	48 89 c2             	mov    rdx,rax
ffffffff80113546:	48 83 f8 01          	cmp    rax,0x1
ffffffff8011354a:	75 c4                	jne    ffffffff80113510 <AllocateVirtualMemoryInAddressSpace+0x40>
ffffffff8011354c:	49 39 dd             	cmp    r13,rbx
ffffffff8011354f:	73 23                	jae    ffffffff80113574 <AllocateVirtualMemoryInAddressSpace+0xa4>
ffffffff80113551:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80113558:	4c 89 ee             	mov    rsi,r13
ffffffff8011355b:	ba 01 00 00 00       	mov    edx,0x1
ffffffff80113560:	4c 89 e7             	mov    rdi,r12
ffffffff80113563:	49 81 c5 00 10 00 00 	add    r13,0x1000
ffffffff8011356a:	e8 41 fa ff ff       	call   ffffffff80112fb0 <UnmapVirtualPage>
ffffffff8011356f:	49 39 dd             	cmp    r13,rbx
ffffffff80113572:	72 e4                	jb     ffffffff80113558 <AllocateVirtualMemoryInAddressSpace+0x88>
ffffffff80113574:	45 31 ed             	xor    r13d,r13d
ffffffff80113577:	5b                   	pop    rbx
ffffffff80113578:	4c 89 e8             	mov    rax,r13
ffffffff8011357b:	5d                   	pop    rbp
ffffffff8011357c:	41 5c                	pop    r12
ffffffff8011357e:	41 5d                	pop    r13
ffffffff80113580:	41 5e                	pop    r14
ffffffff80113582:	c3                   	ret    
ffffffff80113583:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80113588:	45 31 ed             	xor    r13d,r13d
ffffffff8011358b:	48 85 f6             	test   rsi,rsi
ffffffff8011358e:	0f 85 6f ff ff ff    	jne    ffffffff80113503 <AllocateVirtualMemoryInAddressSpace+0x33>
ffffffff80113594:	eb de                	jmp    ffffffff80113574 <AllocateVirtualMemoryInAddressSpace+0xa4>
ffffffff80113596:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]

ffffffff801135a0 <CreateAddressSpace>:
ffffffff801135a0:	48 83 ec 08          	sub    rsp,0x8
ffffffff801135a4:	31 c0                	xor    eax,eax
ffffffff801135a6:	e8 55 bf ff ff       	call   ffffffff8010f500 <GetPhysicalPage>
ffffffff801135ab:	49 89 c0             	mov    r8,rax
ffffffff801135ae:	48 83 f8 01          	cmp    rax,0x1
ffffffff801135b2:	74 78                	je     ffffffff8011362c <CreateAddressSpace+0x8c>
ffffffff801135b4:	48 8b 0d 1d 2b 00 00 	mov    rcx,QWORD PTR [rip+0x2b1d]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff801135bb:	48 83 c8 03          	or     rax,0x3
ffffffff801135bf:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
ffffffff801135c2:	74 0d                	je     ffffffff801135d1 <CreateAddressSpace+0x31>
ffffffff801135c4:	48 89 01             	mov    QWORD PTR [rcx],rax
ffffffff801135c7:	48 8b 05 fa 2a 00 00 	mov    rax,QWORD PTR [rip+0x2afa]        # ffffffff801160c8 <current_pml4>
ffffffff801135ce:	0f 22 d8             	mov    cr3,rax
ffffffff801135d1:	48 8b 05 f8 2a 00 00 	mov    rax,QWORD PTR [rip+0x2af8]        # ffffffff801160d0 <temp_memory_start>
ffffffff801135d8:	48 89 c6             	mov    rsi,rax
ffffffff801135db:	48 8d 90 f8 0f 00 00 	lea    rdx,[rax+0xff8]
ffffffff801135e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
ffffffff801135e8:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
ffffffff801135ef:	48 83 c0 08          	add    rax,0x8
ffffffff801135f3:	48 39 c2             	cmp    rdx,rax
ffffffff801135f6:	75 f0                	jne    ffffffff801135e8 <CreateAddressSpace+0x48>
ffffffff801135f8:	48 8b 05 c1 2a 00 00 	mov    rax,QWORD PTR [rip+0x2ac1]        # ffffffff801160c0 <kernel_pml4>
ffffffff801135ff:	48 83 c8 03          	or     rax,0x3
ffffffff80113603:	48 3b 41 08          	cmp    rax,QWORD PTR [rcx+0x8]
ffffffff80113607:	74 0e                	je     ffffffff80113617 <CreateAddressSpace+0x77>
ffffffff80113609:	48 89 41 08          	mov    QWORD PTR [rcx+0x8],rax
ffffffff8011360d:	48 8b 05 b4 2a 00 00 	mov    rax,QWORD PTR [rip+0x2ab4]        # ffffffff801160c8 <current_pml4>
ffffffff80113614:	0f 22 d8             	mov    cr3,rax
ffffffff80113617:	48 8b 05 b2 2a 00 00 	mov    rax,QWORD PTR [rip+0x2ab2]        # ffffffff801160d0 <temp_memory_start>
ffffffff8011361e:	48 8b 80 f8 1f 00 00 	mov    rax,QWORD PTR [rax+0x1ff8]
ffffffff80113625:	48 89 86 f8 0f 00 00 	mov    QWORD PTR [rsi+0xff8],rax
ffffffff8011362c:	4c 89 c0             	mov    rax,r8
ffffffff8011362f:	48 83 c4 08          	add    rsp,0x8
ffffffff80113633:	c3                   	ret    
ffffffff80113634:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8011363f:	90                   	nop

ffffffff80113640 <FreeAddressSpace>:
ffffffff80113640:	41 57                	push   r15
ffffffff80113642:	41 56                	push   r14
ffffffff80113644:	49 89 fe             	mov    r14,rdi
ffffffff80113647:	41 55                	push   r13
ffffffff80113649:	41 54                	push   r12
ffffffff8011364b:	55                   	push   rbp
ffffffff8011364c:	53                   	push   rbx
ffffffff8011364d:	48 83 ec 38          	sub    rsp,0x38
ffffffff80113651:	48 39 3d 70 2a 00 00 	cmp    QWORD PTR [rip+0x2a70],rdi        # ffffffff801160c8 <current_pml4>
ffffffff80113658:	0f 84 62 02 00 00    	je     ffffffff801138c0 <FreeAddressSpace+0x280>
ffffffff8011365e:	4c 89 f0             	mov    rax,r14
ffffffff80113661:	48 8b 0d 70 2a 00 00 	mov    rcx,QWORD PTR [rip+0x2a70]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80113668:	48 83 c8 03          	or     rax,0x3
ffffffff8011366c:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
ffffffff80113671:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
ffffffff80113674:	74 0d                	je     ffffffff80113683 <FreeAddressSpace+0x43>
ffffffff80113676:	48 89 01             	mov    QWORD PTR [rcx],rax
ffffffff80113679:	48 8b 05 48 2a 00 00 	mov    rax,QWORD PTR [rip+0x2a48]        # ffffffff801160c8 <current_pml4>
ffffffff80113680:	0f 22 d8             	mov    cr3,rax
ffffffff80113683:	48 c7 04 24 00 00 00 00 	mov    QWORD PTR [rsp],0x0
ffffffff8011368b:	48 8b 15 3e 2a 00 00 	mov    rdx,QWORD PTR [rip+0x2a3e]        # ffffffff801160d0 <temp_memory_start>
ffffffff80113692:	eb 15                	jmp    ffffffff801136a9 <FreeAddressSpace+0x69>
ffffffff80113694:	48 83 04 24 08       	add    QWORD PTR [rsp],0x8
ffffffff80113699:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
ffffffff8011369d:	48 3d f8 0f 00 00    	cmp    rax,0xff8
ffffffff801136a3:	0f 84 cd 01 00 00    	je     ffffffff80113876 <FreeAddressSpace+0x236>
ffffffff801136a9:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
ffffffff801136ad:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
ffffffff801136b1:	48 85 c0             	test   rax,rax
ffffffff801136b4:	74 de                	je     ffffffff80113694 <FreeAddressSpace+0x54>
ffffffff801136b6:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffffffff801136bc:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
ffffffff801136c1:	48 83 c8 03          	or     rax,0x3
ffffffff801136c5:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
ffffffff801136ca:	48 3b 41 08          	cmp    rax,QWORD PTR [rcx+0x8]
ffffffff801136ce:	74 0e                	je     ffffffff801136de <FreeAddressSpace+0x9e>
ffffffff801136d0:	48 89 41 08          	mov    QWORD PTR [rcx+0x8],rax
ffffffff801136d4:	48 8b 05 ed 29 00 00 	mov    rax,QWORD PTR [rip+0x29ed]        # ffffffff801160c8 <current_pml4>
ffffffff801136db:	0f 22 d8             	mov    cr3,rax
ffffffff801136de:	48 c7 44 24 08 00 00 00 00 	mov    QWORD PTR [rsp+0x8],0x0
ffffffff801136e7:	48 8d 82 00 10 00 00 	lea    rax,[rdx+0x1000]
ffffffff801136ee:	eb 18                	jmp    ffffffff80113708 <FreeAddressSpace+0xc8>
ffffffff801136f0:	48 83 44 24 08 08    	add    QWORD PTR [rsp+0x8],0x8
ffffffff801136f6:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
ffffffff801136fb:	48 81 fe 00 10 00 00 	cmp    rsi,0x1000
ffffffff80113702:	0f 84 84 01 00 00    	je     ffffffff8011388c <FreeAddressSpace+0x24c>
ffffffff80113708:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
ffffffff8011370d:	48 8b 34 30          	mov    rsi,QWORD PTR [rax+rsi*1]
ffffffff80113711:	48 85 f6             	test   rsi,rsi
ffffffff80113714:	74 da                	je     ffffffff801136f0 <FreeAddressSpace+0xb0>
ffffffff80113716:	48 81 e6 00 f0 ff ff 	and    rsi,0xfffffffffffff000
ffffffff8011371d:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
ffffffff80113722:	48 83 ce 03          	or     rsi,0x3
ffffffff80113726:	49 89 f5             	mov    r13,rsi
ffffffff80113729:	48 3b 71 10          	cmp    rsi,QWORD PTR [rcx+0x10]
ffffffff8011372d:	74 0e                	je     ffffffff8011373d <FreeAddressSpace+0xfd>
ffffffff8011372f:	48 89 71 10          	mov    QWORD PTR [rcx+0x10],rsi
ffffffff80113733:	48 8b 05 8e 29 00 00 	mov    rax,QWORD PTR [rip+0x298e]        # ffffffff801160c8 <current_pml4>
ffffffff8011373a:	0f 22 d8             	mov    cr3,rax
ffffffff8011373d:	48 8d 82 00 20 00 00 	lea    rax,[rdx+0x2000]
ffffffff80113744:	31 ed                	xor    ebp,ebp
ffffffff80113746:	eb 19                	jmp    ffffffff80113761 <FreeAddressSpace+0x121>
ffffffff80113748:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff80113750:	48 83 c5 08          	add    rbp,0x8
ffffffff80113754:	48 81 fd 00 10 00 00 	cmp    rbp,0x1000
ffffffff8011375b:	0f 84 d8 00 00 00    	je     ffffffff80113839 <FreeAddressSpace+0x1f9>
ffffffff80113761:	4c 8b 24 28          	mov    r12,QWORD PTR [rax+rbp*1]
ffffffff80113765:	4d 85 e4             	test   r12,r12
ffffffff80113768:	74 e6                	je     ffffffff80113750 <FreeAddressSpace+0x110>
ffffffff8011376a:	49 81 e4 00 f0 ff ff 	and    r12,0xfffffffffffff000
ffffffff80113771:	4c 89 e3             	mov    rbx,r12
ffffffff80113774:	48 83 cb 03          	or     rbx,0x3
ffffffff80113778:	48 3b 59 18          	cmp    rbx,QWORD PTR [rcx+0x18]
ffffffff8011377c:	74 0e                	je     ffffffff8011378c <FreeAddressSpace+0x14c>
ffffffff8011377e:	48 89 59 18          	mov    QWORD PTR [rcx+0x18],rbx
ffffffff80113782:	48 8b 05 3f 29 00 00 	mov    rax,QWORD PTR [rip+0x293f]        # ffffffff801160c8 <current_pml4>
ffffffff80113789:	0f 22 d8             	mov    cr3,rax
ffffffff8011378c:	48 8d 82 00 30 00 00 	lea    rax,[rdx+0x3000]
ffffffff80113793:	45 31 ff             	xor    r15d,r15d
ffffffff80113796:	eb 15                	jmp    ffffffff801137ad <FreeAddressSpace+0x16d>
ffffffff80113798:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ffffffff801137a0:	49 83 c7 08          	add    r15,0x8
ffffffff801137a4:	49 81 ff 00 10 00 00 	cmp    r15,0x1000
ffffffff801137ab:	74 4a                	je     ffffffff801137f7 <FreeAddressSpace+0x1b7>
ffffffff801137ad:	4a 8b 3c 38          	mov    rdi,QWORD PTR [rax+r15*1]
ffffffff801137b1:	48 85 ff             	test   rdi,rdi
ffffffff801137b4:	74 ea                	je     ffffffff801137a0 <FreeAddressSpace+0x160>
ffffffff801137b6:	48 81 e7 00 f0 ff ff 	and    rdi,0xfffffffffffff000
ffffffff801137bd:	e8 9e bd ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff801137c2:	48 8b 05 0f 29 00 00 	mov    rax,QWORD PTR [rip+0x290f]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff801137c9:	48 3b 58 18          	cmp    rbx,QWORD PTR [rax+0x18]
ffffffff801137cd:	74 0e                	je     ffffffff801137dd <FreeAddressSpace+0x19d>
ffffffff801137cf:	48 89 58 18          	mov    QWORD PTR [rax+0x18],rbx
ffffffff801137d3:	48 8b 05 ee 28 00 00 	mov    rax,QWORD PTR [rip+0x28ee]        # ffffffff801160c8 <current_pml4>
ffffffff801137da:	0f 22 d8             	mov    cr3,rax
ffffffff801137dd:	48 8b 05 ec 28 00 00 	mov    rax,QWORD PTR [rip+0x28ec]        # ffffffff801160d0 <temp_memory_start>
ffffffff801137e4:	49 83 c7 08          	add    r15,0x8
ffffffff801137e8:	48 05 00 30 00 00    	add    rax,0x3000
ffffffff801137ee:	49 81 ff 00 10 00 00 	cmp    r15,0x1000
ffffffff801137f5:	75 b6                	jne    ffffffff801137ad <FreeAddressSpace+0x16d>
ffffffff801137f7:	4c 89 e7             	mov    rdi,r12
ffffffff801137fa:	e8 61 bd ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff801137ff:	48 8b 0d d2 28 00 00 	mov    rcx,QWORD PTR [rip+0x28d2]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff80113806:	4c 3b 69 10          	cmp    r13,QWORD PTR [rcx+0x10]
ffffffff8011380a:	74 0e                	je     ffffffff8011381a <FreeAddressSpace+0x1da>
ffffffff8011380c:	4c 89 69 10          	mov    QWORD PTR [rcx+0x10],r13
ffffffff80113810:	48 8b 05 b1 28 00 00 	mov    rax,QWORD PTR [rip+0x28b1]        # ffffffff801160c8 <current_pml4>
ffffffff80113817:	0f 22 d8             	mov    cr3,rax
ffffffff8011381a:	48 8b 15 af 28 00 00 	mov    rdx,QWORD PTR [rip+0x28af]        # ffffffff801160d0 <temp_memory_start>
ffffffff80113821:	48 83 c5 08          	add    rbp,0x8
ffffffff80113825:	48 8d 82 00 20 00 00 	lea    rax,[rdx+0x2000]
ffffffff8011382c:	48 81 fd 00 10 00 00 	cmp    rbp,0x1000
ffffffff80113833:	0f 85 28 ff ff ff    	jne    ffffffff80113761 <FreeAddressSpace+0x121>
ffffffff80113839:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
ffffffff8011383e:	e8 1d bd ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff80113843:	48 8b 0d 8e 28 00 00 	mov    rcx,QWORD PTR [rip+0x288e]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff8011384a:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
ffffffff8011384f:	48 3b 41 08          	cmp    rax,QWORD PTR [rcx+0x8]
ffffffff80113853:	74 0e                	je     ffffffff80113863 <FreeAddressSpace+0x223>
ffffffff80113855:	48 89 41 08          	mov    QWORD PTR [rcx+0x8],rax
ffffffff80113859:	48 8b 05 68 28 00 00 	mov    rax,QWORD PTR [rip+0x2868]        # ffffffff801160c8 <current_pml4>
ffffffff80113860:	0f 22 d8             	mov    cr3,rax
ffffffff80113863:	48 8b 15 66 28 00 00 	mov    rdx,QWORD PTR [rip+0x2866]        # ffffffff801160d0 <temp_memory_start>
ffffffff8011386a:	48 8d 82 00 10 00 00 	lea    rax,[rdx+0x1000]
ffffffff80113871:	e9 7a fe ff ff       	jmp    ffffffff801136f0 <FreeAddressSpace+0xb0>
ffffffff80113876:	48 83 c4 38          	add    rsp,0x38
ffffffff8011387a:	4c 89 f7             	mov    rdi,r14
ffffffff8011387d:	5b                   	pop    rbx
ffffffff8011387e:	5d                   	pop    rbp
ffffffff8011387f:	41 5c                	pop    r12
ffffffff80113881:	41 5d                	pop    r13
ffffffff80113883:	41 5e                	pop    r14
ffffffff80113885:	41 5f                	pop    r15
ffffffff80113887:	e9 d4 bc ff ff       	jmp    ffffffff8010f560 <FreePhysicalPage>
ffffffff8011388c:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
ffffffff80113891:	e8 ca bc ff ff       	call   ffffffff8010f560 <FreePhysicalPage>
ffffffff80113896:	48 8b 0d 3b 28 00 00 	mov    rcx,QWORD PTR [rip+0x283b]        # ffffffff801160d8 <temp_memory_page_table>
ffffffff8011389d:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
ffffffff801138a2:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
ffffffff801138a5:	74 0d                	je     ffffffff801138b4 <FreeAddressSpace+0x274>
ffffffff801138a7:	48 89 01             	mov    QWORD PTR [rcx],rax
ffffffff801138aa:	48 8b 05 17 28 00 00 	mov    rax,QWORD PTR [rip+0x2817]        # ffffffff801160c8 <current_pml4>
ffffffff801138b1:	0f 22 d8             	mov    cr3,rax
ffffffff801138b4:	48 8b 15 15 28 00 00 	mov    rdx,QWORD PTR [rip+0x2815]        # ffffffff801160d0 <temp_memory_start>
ffffffff801138bb:	e9 d4 fd ff ff       	jmp    ffffffff80113694 <FreeAddressSpace+0x54>
ffffffff801138c0:	48 8b 1d f9 27 00 00 	mov    rbx,QWORD PTR [rip+0x27f9]        # ffffffff801160c0 <kernel_pml4>
ffffffff801138c7:	48 39 fb             	cmp    rbx,rdi
ffffffff801138ca:	0f 84 8e fd ff ff    	je     ffffffff8011365e <FreeAddressSpace+0x1e>
ffffffff801138d0:	48 89 1d f1 27 00 00 	mov    QWORD PTR [rip+0x27f1],rbx        # ffffffff801160c8 <current_pml4>
ffffffff801138d7:	0f 22 db             	mov    cr3,rbx
ffffffff801138da:	e9 7f fd ff ff       	jmp    ffffffff8011365e <FreeAddressSpace+0x1e>
ffffffff801138df:	90                   	nop

ffffffff801138e0 <SwitchToAddressSpace>:
ffffffff801138e0:	48 39 3d e1 27 00 00 	cmp    QWORD PTR [rip+0x27e1],rdi        # ffffffff801160c8 <current_pml4>
ffffffff801138e7:	74 17                	je     ffffffff80113900 <SwitchToAddressSpace+0x20>
ffffffff801138e9:	53                   	push   rbx
ffffffff801138ea:	48 89 fb             	mov    rbx,rdi
ffffffff801138ed:	48 89 3d d4 27 00 00 	mov    QWORD PTR [rip+0x27d4],rdi        # ffffffff801160c8 <current_pml4>
ffffffff801138f4:	0f 22 db             	mov    cr3,rbx
ffffffff801138f7:	5b                   	pop    rbx
ffffffff801138f8:	c3                   	ret    
ffffffff801138f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ffffffff80113900:	c3                   	ret    
ffffffff80113901:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
ffffffff8011390c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

ffffffff80113910 <FlushVirtualPage>:
ffffffff80113910:	53                   	push   rbx
ffffffff80113911:	48 89 fb             	mov    rbx,rdi
ffffffff80113914:	0f 01 3b             	invlpg BYTE PTR [rbx]
ffffffff80113917:	5b                   	pop    rbx
ffffffff80113918:	c3                   	ret    
